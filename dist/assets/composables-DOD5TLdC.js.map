{"version":3,"file":"composables-DOD5TLdC.js","sources":["../../src/composables/useErrorHandling.js","../../src/composables/useD3.js","../../src/composables/useVisualization.js"],"sourcesContent":["import { ref, computed, watch, onErrorCaptured } from 'vue'\nimport { useUIStore } from '@/stores/useUIStore'\n\n// Enhanced error handling composable for Phase 5\nexport function useErrorHandling(options = {}) {\n  const {\n    showNotifications = true,\n    logToConsole = true,\n    retryAttempts = 3,\n    retryDelay = 1000,\n    persistErrors = true\n  } = options\n\n  const uiStore = useUIStore()\n\n  // Error state\n  const errors = ref([])\n  const globalError = ref(null)\n  const errorCounts = ref(new Map())\n  const retryHistory = ref(new Map())\n  const errorMetrics = ref({\n    total: 0,\n    byType: {},\n    byComponent: {},\n    resolved: 0,\n    unresolved: 0\n  })\n\n  // Error categories\n  const ERROR_TYPES = {\n    NETWORK: 'network',\n    VALIDATION: 'validation',\n    RUNTIME: 'runtime',\n    PERMISSION: 'permission',\n    DATA: 'data',\n    VISUALIZATION: 'visualization',\n    STORE: 'store',\n    UNKNOWN: 'unknown'\n  }\n\n  const ERROR_SEVERITY = {\n    LOW: 'low',\n    MEDIUM: 'medium',\n    HIGH: 'high',\n    CRITICAL: 'critical'\n  }\n\n  // Computed properties\n  const hasErrors = computed(() => errors.value.length > 0)\n  const hasGlobalError = computed(() => globalError.value !== null)\n  const criticalErrors = computed(() => \n    errors.value.filter(error => error.severity === ERROR_SEVERITY.CRITICAL)\n  )\n  const unresolvedErrors = computed(() => \n    errors.value.filter(error => !error.resolved)\n  )\n\n  // Error classification\n  const classifyError = (error, context = {}) => {\n    let type = ERROR_TYPES.UNKNOWN\n    let severity = ERROR_SEVERITY.MEDIUM\n\n    const message = error.message || error.toString()\n    const stack = error.stack || ''\n\n    // Network errors\n    if (message.includes('network') || \n        message.includes('fetch') || \n        message.includes('timeout') ||\n        message.includes('connection')) {\n      type = ERROR_TYPES.NETWORK\n      severity = ERROR_SEVERITY.HIGH\n    }\n    // Validation errors\n    else if (message.includes('validation') || \n             message.includes('invalid') || \n             message.includes('required')) {\n      type = ERROR_TYPES.VALIDATION\n      severity = ERROR_SEVERITY.LOW\n    }\n    // Permission errors\n    else if (message.includes('permission') || \n             message.includes('unauthorized') || \n             message.includes('forbidden')) {\n      type = ERROR_TYPES.PERMISSION\n      severity = ERROR_SEVERITY.HIGH\n    }\n    // Data errors\n    else if (message.includes('data') || \n             message.includes('parse') || \n             message.includes('format')) {\n      type = ERROR_TYPES.DATA\n      severity = ERROR_SEVERITY.MEDIUM\n    }\n    // Visualization errors\n    else if (stack.includes('d3') || \n             stack.includes('visualization') ||\n             context.component?.includes('Chart') ||\n             context.component?.includes('Map')) {\n      type = ERROR_TYPES.VISUALIZATION\n      severity = ERROR_SEVERITY.MEDIUM\n    }\n    // Store errors\n    else if (stack.includes('store') || \n             stack.includes('pinia') ||\n             context.store) {\n      type = ERROR_TYPES.STORE\n      severity = ERROR_SEVERITY.HIGH\n    }\n    // Runtime errors\n    else if (error instanceof TypeError || \n             error instanceof ReferenceError || \n             error instanceof RangeError) {\n      type = ERROR_TYPES.RUNTIME\n      severity = ERROR_SEVERITY.HIGH\n    }\n\n    // Increase severity for repeated errors\n    const errorKey = `${type}_${message.substring(0, 50)}`\n    const count = errorCounts.value.get(errorKey) || 0\n    if (count > 3) {\n      severity = ERROR_SEVERITY.CRITICAL\n    }\n\n    return { type, severity }\n  }\n\n  // Create standardized error object\n  const createErrorObject = (error, context = {}) => {\n    const { type, severity } = classifyError(error, context)\n    \n    return {\n      id: Date.now() + Math.random(),\n      message: error.message || error.toString(),\n      stack: error.stack || '',\n      type,\n      severity,\n      context,\n      timestamp: new Date(),\n      resolved: false,\n      retryCount: 0,\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n      url: typeof window !== 'undefined' ? window.location.href : '',\n      component: context.component || 'unknown',\n      action: context.action || 'unknown'\n    }\n  }\n\n  // Handle error\n  const handleError = (error, context = {}) => {\n    const errorObj = createErrorObject(error, context)\n    \n    // Update error counts\n    const errorKey = `${errorObj.type}_${errorObj.message.substring(0, 50)}`\n    errorCounts.value.set(errorKey, (errorCounts.value.get(errorKey) || 0) + 1)\n    \n    // Add to errors list\n    errors.value.push(errorObj)\n    \n    // Update metrics\n    updateErrorMetrics(errorObj)\n    \n    // Log to console if enabled\n    if (logToConsole) {\n      console.error(`[${errorObj.severity.toUpperCase()}] ${errorObj.type}:`, errorObj.message)\n      if (errorObj.stack) {\n        console.error('Stack trace:', errorObj.stack)\n      }\n      console.error('Context:', errorObj.context)\n    }\n    \n    // Show notification if enabled\n    if (showNotifications) {\n      showErrorNotification(errorObj)\n    }\n    \n    // Set global error for critical errors\n    if (errorObj.severity === ERROR_SEVERITY.CRITICAL) {\n      globalError.value = errorObj\n    }\n    \n    // Persist error if enabled\n    if (persistErrors) {\n      persistError(errorObj)\n    }\n    \n    // Limit error history\n    if (errors.value.length > 100) {\n      errors.value = errors.value.slice(-50)\n    }\n    \n    return errorObj\n  }\n\n  // Update error metrics\n  const updateErrorMetrics = (errorObj) => {\n    errorMetrics.value.total++\n    \n    // By type\n    if (!errorMetrics.value.byType[errorObj.type]) {\n      errorMetrics.value.byType[errorObj.type] = 0\n    }\n    errorMetrics.value.byType[errorObj.type]++\n    \n    // By component\n    if (!errorMetrics.value.byComponent[errorObj.component]) {\n      errorMetrics.value.byComponent[errorObj.component] = 0\n    }\n    errorMetrics.value.byComponent[errorObj.component]++\n    \n    // Update resolved/unresolved counts\n    errorMetrics.value.unresolved = unresolvedErrors.value.length\n    errorMetrics.value.resolved = errors.value.length - errorMetrics.value.unresolved\n  }\n\n  // Show error notification\n  const showErrorNotification = (errorObj) => {\n    let title = 'Error'\n    let type = 'error'\n    let duration = 5000\n    \n    switch (errorObj.severity) {\n      case ERROR_SEVERITY.LOW:\n        title = 'Warning'\n        type = 'warning'\n        duration = 3000\n        break\n      case ERROR_SEVERITY.MEDIUM:\n        title = 'Error'\n        type = 'error'\n        duration = 5000\n        break\n      case ERROR_SEVERITY.HIGH:\n        title = 'Serious Error'\n        type = 'error'\n        duration = 8000\n        break\n      case ERROR_SEVERITY.CRITICAL:\n        title = 'Critical Error'\n        type = 'error'\n        duration = 0 // Don't auto-hide\n        break\n    }\n    \n    uiStore.addNotification({\n      type,\n      title,\n      message: errorObj.message,\n      duration,\n      actions: errorObj.severity !== ERROR_SEVERITY.LOW ? [\n        {\n          text: 'Details',\n          action: () => showErrorDetails(errorObj.id)\n        },\n        {\n          text: 'Retry',\n          action: () => retryOperation(errorObj.id)\n        }\n      ] : undefined\n    })\n  }\n\n  // Show error details\n  const showErrorDetails = (errorId) => {\n    const error = errors.value.find(e => e.id === errorId)\n    if (!error) return\n    \n    uiStore.openModal('error-details', {\n      error,\n      title: 'Error Details',\n      component: 'ErrorDetailsModal'\n    })\n  }\n\n  // Retry operation\n  const retryOperation = async (errorId) => {\n    const error = errors.value.find(e => e.id === errorId)\n    if (!error || !error.context.retryFn) return\n    \n    const retryKey = `${error.type}_${error.message.substring(0, 30)}`\n    const retryCount = retryHistory.value.get(retryKey) || 0\n    \n    if (retryCount >= retryAttempts) {\n      uiStore.addNotification({\n        type: 'warning',\n        title: 'Retry Limit Reached',\n        message: 'Maximum retry attempts exceeded for this operation',\n        duration: 5000\n      })\n      return\n    }\n    \n    try {\n      // Increment retry count\n      retryHistory.value.set(retryKey, retryCount + 1)\n      error.retryCount++\n      \n      // Wait before retry with exponential backoff\n      const delay = retryDelay * Math.pow(2, retryCount)\n      await new Promise(resolve => setTimeout(resolve, delay))\n      \n      // Execute retry function\n      await error.context.retryFn()\n      \n      // Mark error as resolved\n      resolveError(errorId)\n      \n      uiStore.addNotification({\n        type: 'success',\n        title: 'Operation Successful',\n        message: 'The operation was completed successfully after retry',\n        duration: 3000\n      })\n      \n    } catch (retryError) {\n      handleError(retryError, {\n        ...error.context,\n        action: 'retry',\n        originalError: error.id\n      })\n    }\n  }\n\n  // Resolve error\n  const resolveError = (errorId) => {\n    const error = errors.value.find(e => e.id === errorId)\n    if (error) {\n      error.resolved = true\n      error.resolvedAt = new Date()\n      \n      // Clear global error if resolved\n      if (globalError.value && globalError.value.id === errorId) {\n        globalError.value = null\n      }\n      \n      updateErrorMetrics(error)\n    }\n  }\n\n  // Clear errors\n  const clearErrors = (filter = null) => {\n    if (filter) {\n      errors.value = errors.value.filter(error => !filter(error))\n    } else {\n      errors.value = []\n      globalError.value = null\n      errorCounts.value.clear()\n      retryHistory.value.clear()\n    }\n  }\n\n  // Persist error to local storage\n  const persistError = (errorObj) => {\n    try {\n      const persistedErrors = JSON.parse(\n        localStorage.getItem('d2-error-log') || '[]'\n      )\n      \n      persistedErrors.push({\n        ...errorObj,\n        stack: errorObj.stack.substring(0, 500) // Limit stack size\n      })\n      \n      // Keep only last 50 errors\n      const limitedErrors = persistedErrors.slice(-50)\n      \n      localStorage.setItem('d2-error-log', JSON.stringify(limitedErrors))\n    } catch (e) {\n      console.warn('Failed to persist error:', e)\n    }\n  }\n\n  // Load persisted errors\n  const loadPersistedErrors = () => {\n    try {\n      const persistedErrors = JSON.parse(\n        localStorage.getItem('d2-error-log') || '[]'\n      )\n      \n      return persistedErrors.map(error => ({\n        ...error,\n        timestamp: new Date(error.timestamp),\n        resolvedAt: error.resolvedAt ? new Date(error.resolvedAt) : null\n      }))\n    } catch (e) {\n      console.warn('Failed to load persisted errors:', e)\n      return []\n    }\n  }\n\n  // Async error wrapper with automatic retry\n  const wrapAsync = (asyncFn, context = {}) => {\n    return async (...args) => {\n      const { autoRetry = false, maxRetries = 3, retryDelay = 1000 } = context\n      let lastError = null\n      \n      for (let attempt = 0; attempt <= (autoRetry ? maxRetries : 0); attempt++) {\n        try {\n          return await asyncFn(...args)\n        } catch (error) {\n          lastError = error\n          \n          // Handle error on first attempt or if retries are disabled\n          if (attempt === 0 || !autoRetry) {\n            handleError(error, {\n              ...context,\n              retryFn: () => asyncFn(...args),\n              attempt: attempt + 1\n            })\n          }\n          \n          // If this is not the last attempt and auto-retry is enabled\n          if (attempt < maxRetries && autoRetry) {\n            console.log(`Retrying operation (attempt ${attempt + 2}/${maxRetries + 1})...`)\n            const delay = retryDelay * Math.pow(2, attempt) // Exponential backoff\n            await new Promise(resolve => setTimeout(resolve, delay))\n            continue\n          }\n          \n          break\n        }\n      }\n      \n      throw lastError\n    }\n  }\n\n  // Graceful degradation wrapper\n  const withGracefulDegradation = (asyncFn, fallbackValue = null, context = {}) => {\n    return async (...args) => {\n      try {\n        return await asyncFn(...args)\n      } catch (error) {\n        const errorObj = handleError(error, {\n          ...context,\n          degraded: true,\n          fallbackUsed: true\n        })\n        \n        // Log degradation\n        console.warn(`Graceful degradation activated for ${context.operation || 'operation'}:`, error.message)\n        \n        // Return fallback value\n        if (typeof fallbackValue === 'function') {\n          return fallbackValue(error, ...args)\n        }\n        \n        return fallbackValue\n      }\n    }\n  }\n\n  // Circuit breaker pattern for repeated failures\n  const createCircuitBreaker = (asyncFn, options = {}) => {\n    const {\n      failureThreshold = 5,\n      resetTimeout = 60000,\n      monitoringPeriod = 30000\n    } = options\n\n    let failureCount = 0\n    let lastFailureTime = null\n    let state = 'CLOSED' // CLOSED, OPEN, HALF_OPEN\n    let nextAttempt = Date.now()\n\n    return async (...args) => {\n      const now = Date.now()\n\n      // Reset failure count after monitoring period\n      if (lastFailureTime && (now - lastFailureTime) > monitoringPeriod && state === 'CLOSED') {\n        failureCount = 0\n      }\n\n      // Circuit is OPEN - check if we should attempt reset\n      if (state === 'OPEN') {\n        if (now < nextAttempt) {\n          throw new Error('Circuit breaker is OPEN - operation temporarily unavailable')\n        }\n        state = 'HALF_OPEN'\n      }\n\n      try {\n        const result = await asyncFn(...args)\n        \n        // Success - reset circuit breaker\n        if (state === 'HALF_OPEN') {\n          state = 'CLOSED'\n          failureCount = 0\n        }\n        \n        return result\n      } catch (error) {\n        failureCount++\n        lastFailureTime = now\n\n        if (failureCount >= failureThreshold) {\n          state = 'OPEN'\n          nextAttempt = now + resetTimeout\n          \n          handleError(new Error(`Circuit breaker OPEN: ${failureCount} failures detected`), {\n            component: 'circuit-breaker',\n            originalError: error.message,\n            action: 'circuit_open'\n          })\n        }\n\n        throw error\n      }\n    }\n  }\n\n  // Component error boundary\n  const createErrorBoundary = (component, fallbackComponent = null) => {\n    const boundaryError = ref(null)\n    \n    onErrorCaptured((error, instance, info) => {\n      boundaryError.value = handleError(error, {\n        component: component || instance?.$options.name || 'Unknown',\n        errorInfo: info,\n        instance\n      })\n      \n      // Return false to prevent error propagation\n      return false\n    })\n    \n    return {\n      boundaryError,\n      clearBoundaryError: () => { boundaryError.value = null }\n    }\n  }\n\n  // Error recovery suggestions\n  const getRecoverySuggestions = (errorObj) => {\n    const suggestions = []\n    \n    switch (errorObj.type) {\n      case ERROR_TYPES.NETWORK:\n        suggestions.push('Check your internet connection')\n        suggestions.push('Try refreshing the page')\n        suggestions.push('Wait a moment and try again')\n        break\n      case ERROR_TYPES.DATA:\n        suggestions.push('Verify the data format')\n        suggestions.push('Check if all required fields are present')\n        suggestions.push('Try loading different data')\n        break\n      case ERROR_TYPES.VISUALIZATION:\n        suggestions.push('Try resizing the window')\n        suggestions.push('Check if data is properly formatted')\n        suggestions.push('Try switching to a different visualization')\n        break\n      case ERROR_TYPES.PERMISSION:\n        suggestions.push('Check your access permissions')\n        suggestions.push('Try logging in again')\n        suggestions.push('Contact your administrator')\n        break\n      default:\n        suggestions.push('Try refreshing the page')\n        suggestions.push('Clear your browser cache')\n        suggestions.push('Contact support if the problem persists')\n    }\n    \n    return suggestions\n  }\n\n  // Initialize error handling\n  const initializeErrorHandling = () => {\n    // Global error handler\n    if (typeof window !== 'undefined') {\n      window.addEventListener('error', (event) => {\n        handleError(event.error || new Error(event.message), {\n          component: 'global',\n          action: 'unhandled_error',\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno\n        })\n      })\n      \n      window.addEventListener('unhandledrejection', (event) => {\n        handleError(event.reason || new Error('Unhandled promise rejection'), {\n          component: 'global',\n          action: 'unhandled_rejection'\n        })\n      })\n    }\n  }\n\n  return {\n    // State\n    errors,\n    globalError,\n    errorMetrics,\n    \n    // Computed\n    hasErrors,\n    hasGlobalError,\n    criticalErrors,\n    unresolvedErrors,\n    \n    // Error handling\n    handleError,\n    resolveError,\n    clearErrors,\n    \n    // Retry mechanism\n    retryOperation,\n    \n    // Utilities\n    wrapAsync,\n    withGracefulDegradation,\n    createCircuitBreaker,\n    createErrorBoundary,\n    getRecoverySuggestions,\n    showErrorDetails,\n    \n    // Persistence\n    loadPersistedErrors,\n    \n    // Constants\n    ERROR_TYPES,\n    ERROR_SEVERITY,\n    \n    // Initialization\n    initializeErrorHandling\n  }\n}","import { ref, onMounted, onUnmounted, nextTick, watch } from 'vue'\nimport * as d3 from 'd3'\n\n/**\n * Core D3.js lifecycle management composable\n * Provides reactive D3.js integration with Vue.js components\n */\nexport function useD3(containerRef, options = {}) {\n  const {\n    responsive = true,\n    debounceResize = 250,\n    cleanupSelectors = [],\n    autoResize = true\n  } = options\n\n  // Reactive state\n  const dimensions = ref({ width: 0, height: 0 })\n  const isReady = ref(false)\n  const isDestroyed = ref(false)\n\n  // Internal state\n  let resizeObserver = null\n  let resizeTimeout = null\n  let d3Selections = new Map()\n  let eventListeners = new Map()\n\n  /**\n   * Initialize D3.js container and setup\n   */\n  const initialize = async () => {\n    if (!containerRef.value || isDestroyed.value) return\n\n    await nextTick()\n\n    // Get initial dimensions\n    updateDimensions()\n\n    // Setup resize observer for responsive behavior\n    if (responsive && autoResize) {\n      setupResizeObserver()\n    }\n\n    isReady.value = true\n  }\n\n  /**\n   * Update container dimensions\n   */\n  const updateDimensions = () => {\n    if (!containerRef.value) return\n\n    const rect = containerRef.value.getBoundingClientRect()\n    dimensions.value = {\n      width: rect.width,\n      height: rect.height\n    }\n  }\n\n  /**\n   * Setup resize observer for responsive charts\n   */\n  const setupResizeObserver = () => {\n    if (!window.ResizeObserver || !containerRef.value) return\n\n    resizeObserver = new ResizeObserver(() => {\n      if (resizeTimeout) clearTimeout(resizeTimeout)\n      \n      resizeTimeout = setTimeout(() => {\n        updateDimensions()\n      }, debounceResize)\n    })\n\n    resizeObserver.observe(containerRef.value)\n  }\n\n  /**\n   * Create and register a D3.js selection\n   */\n  const createSelection = (selector, key = null) => {\n    if (!containerRef.value) return null\n\n    const selection = d3.select(containerRef.value).select(selector)\n    \n    if (key) {\n      d3Selections.set(key, selection)\n    }\n\n    return selection\n  }\n\n  /**\n   * Get a registered D3.js selection\n   */\n  const getSelection = (key) => {\n    return d3Selections.get(key)\n  }\n\n  /**\n   * Create SVG element with proper setup\n   */\n  const createSVG = (options = {}) => {\n    const {\n      width = dimensions.value.width,\n      height = dimensions.value.height,\n      margin = { top: 20, right: 20, bottom: 20, left: 20 },\n      className = 'chart-svg',\n      preserveAspectRatio = 'xMidYMid meet'\n    } = options\n\n    if (!containerRef.value) {\n      console.error('❌ useD3: No container reference available')\n      return null\n    }\n\n    // Remove existing SVG\n    const existingSvg = d3.select(containerRef.value).select('svg')\n    existingSvg.remove()\n\n    // Create new SVG\n    const svg = d3.select(containerRef.value)\n      .append('svg')\n      .attr('class', className)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('viewBox', `0 0 ${width} ${height}`)\n      .attr('preserveAspectRatio', preserveAspectRatio)\n\n    // Create main group with margins\n    const g = svg.append('g')\n      .attr('class', 'chart-container')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n    // Store selections\n    d3Selections.set('svg', svg)\n    d3Selections.set('container', g)\n\n    return { svg, g, width, height, margin }\n  }\n\n  /**\n   * Add event listener with cleanup tracking\n   */\n  const addEventListener = (element, event, handler, key = null) => {\n    if (!element || typeof handler !== 'function') return\n\n    element.addEventListener(event, handler)\n\n    // Track for cleanup\n    const listenerKey = key || `${event}_${Date.now()}`\n    eventListeners.set(listenerKey, { element, event, handler })\n\n    return listenerKey\n  }\n\n  /**\n   * Remove tracked event listener\n   */\n  const removeEventListener = (key) => {\n    const listener = eventListeners.get(key)\n    if (listener) {\n      listener.element.removeEventListener(listener.event, listener.handler)\n      eventListeners.delete(key)\n    }\n  }\n\n  /**\n   * Create transition with consistent settings\n   */\n  const createTransition = (options = {}) => {\n    const {\n      duration = 750,\n      ease = d3.easeQuadInOut,\n      delay = 0\n    } = options\n\n    return d3.transition()\n      .duration(duration)\n      .ease(ease)\n      .delay(delay)\n  }\n\n  /**\n   * Cleanup all D3.js resources\n   */\n  const cleanup = () => {\n    if (isDestroyed.value) return\n\n    // Mark as destroyed\n    isDestroyed.value = true\n    isReady.value = false\n\n    // Clear resize observer\n    if (resizeObserver) {\n      resizeObserver.disconnect()\n      resizeObserver = null\n    }\n\n    // Clear resize timeout\n    if (resizeTimeout) {\n      clearTimeout(resizeTimeout)\n      resizeTimeout = null\n    }\n\n    // Remove event listeners\n    eventListeners.forEach((listener, key) => {\n      removeEventListener(key)\n    })\n    eventListeners.clear()\n\n    // Clean up D3 selections\n    d3Selections.forEach((selection) => {\n      try {\n        selection.remove()\n      } catch (error) {\n        console.warn('Error removing D3 selection:', error)\n      }\n    })\n    d3Selections.clear()\n\n    // Clean up custom selectors\n    if (containerRef.value) {\n      cleanupSelectors.forEach(selector => {\n        try {\n          d3.select(containerRef.value).selectAll(selector).remove()\n        } catch (error) {\n          console.warn(`Error cleaning up selector ${selector}:`, error)\n        }\n      })\n\n      // Remove all SVG elements\n      d3.select(containerRef.value).selectAll('svg').remove()\n    }\n  }\n\n  // Lifecycle hooks\n  onMounted(() => {\n    initialize()\n  })\n\n  onUnmounted(() => {\n    cleanup()\n  })\n\n  return {\n    // Reactive state\n    dimensions,\n    isReady,\n    isDestroyed,\n\n    // Core methods\n    initialize,\n    updateDimensions,\n    cleanup,\n\n    // D3 utilities\n    createSelection,\n    getSelection,\n    createSVG,\n    createTransition,\n\n    // Event management\n    addEventListener,\n    removeEventListener,\n\n    // D3 library access\n    d3\n  }\n}\n\n/**\n * Reactive data binding composable for D3.js\n * Handles Vue reactivity with D3.js data updates with performance optimizations\n */\nexport function useD3Data(data, options = {}) {\n  const {\n    key = 'd3-data',\n    transform = null,\n    debounce = 50,\n    enableCaching = true,\n    maxCacheSize = 100,\n    enableVirtualization = false,\n    virtualPageSize = 1000\n  } = options\n\n  const processedData = ref([])\n  const isProcessing = ref(false)\n  const dataCache = ref(new Map())\n  const cacheHits = ref(0)\n  const cacheMisses = ref(0)\n  \n  let debounceTimeout = null\n  let lastDataHash = null\n\n  /**\n   * Generate hash for data caching\n   */\n  const generateDataHash = (data) => {\n    if (!data) return 'empty'\n    if (Array.isArray(data)) {\n      return `array_${data.length}_${JSON.stringify(data.slice(0, 3))}`\n    }\n    return JSON.stringify(data).substring(0, 100)\n  }\n\n  /**\n   * Get cached data or compute new result\n   */\n  const getCachedOrCompute = (data, transform) => {\n    if (!enableCaching) {\n      return transform ? transform(data) : data\n    }\n\n    const dataHash = generateDataHash(data)\n    const transformHash = transform ? transform.toString() : 'none'\n    const cacheKey = `${dataHash}_${transformHash}`\n\n    // Check cache\n    if (dataCache.value.has(cacheKey)) {\n      cacheHits.value++\n      return dataCache.value.get(cacheKey)\n    }\n\n    // Compute new result\n    cacheMisses.value++\n    const result = transform ? transform(data) : data\n\n    // Store in cache (with size limit)\n    if (dataCache.value.size >= maxCacheSize) {\n      const firstKey = dataCache.value.keys().next().value\n      dataCache.value.delete(firstKey)\n    }\n    dataCache.value.set(cacheKey, result)\n\n    return result\n  }\n\n  /**\n   * Apply virtualization to large datasets\n   */\n  const virtualizeData = (data, pageIndex = 0) => {\n    if (!enableVirtualization || !Array.isArray(data)) {\n      return data\n    }\n\n    if (data.length <= virtualPageSize) {\n      return data\n    }\n\n    const startIndex = pageIndex * virtualPageSize\n    const endIndex = Math.min(startIndex + virtualPageSize, data.length)\n    \n    return {\n      data: data.slice(startIndex, endIndex),\n      totalItems: data.length,\n      pageIndex,\n      pageSize: virtualPageSize,\n      totalPages: Math.ceil(data.length / virtualPageSize),\n      hasMore: endIndex < data.length\n    }\n  }\n\n  /**\n   * Process data with optional transformation and optimizations\n   */\n  const processData = (forceRefresh = false) => {\n    if (debounceTimeout) clearTimeout(debounceTimeout)\n\n    debounceTimeout = setTimeout(() => {\n      isProcessing.value = true\n\n      try {\n        const currentData = data.value\n        const currentHash = generateDataHash(currentData)\n\n        // Skip processing if data hasn't changed (unless forced)\n        if (!forceRefresh && currentHash === lastDataHash) {\n          isProcessing.value = false\n          return\n        }\n\n        lastDataHash = currentHash\n\n        let result = Array.isArray(currentData) ? [...currentData] : currentData\n\n        // Apply caching and transformation\n        result = getCachedOrCompute(result, transform)\n\n        // Apply virtualization if enabled\n        if (enableVirtualization && Array.isArray(result)) {\n          result = virtualizeData(result)\n        }\n\n        processedData.value = result\n\n        // Emit performance metrics\n        console.log(`D3 Data Processing: Cache hits: ${cacheHits.value}, misses: ${cacheMisses.value}`)\n        \n      } catch (error) {\n        console.error('Error processing D3 data:', error)\n        processedData.value = enableVirtualization ? { data: [], totalItems: 0 } : []\n      } finally {\n        isProcessing.value = false\n      }\n    }, debounce)\n  }\n\n  /**\n   * Load next page for virtualized data\n   */\n  const loadNextPage = () => {\n    if (!enableVirtualization || !processedData.value?.hasMore) return\n\n    const currentPageIndex = processedData.value.pageIndex || 0\n    const nextPageData = virtualizeData(data.value, currentPageIndex + 1)\n    \n    if (nextPageData.data.length > 0) {\n      processedData.value = {\n        ...nextPageData,\n        data: [...processedData.value.data, ...nextPageData.data]\n      }\n    }\n  }\n\n  /**\n   * Clear data cache\n   */\n  const clearCache = () => {\n    dataCache.value.clear()\n    cacheHits.value = 0\n    cacheMisses.value = 0\n  }\n\n  /**\n   * Get cache statistics\n   */\n  const getCacheStats = () => {\n    return {\n      size: dataCache.value.size,\n      hits: cacheHits.value,\n      misses: cacheMisses.value,\n      hitRate: cacheHits.value / (cacheHits.value + cacheMisses.value) || 0\n    }\n  }\n\n  // Watch for data changes with optimized comparison\n  watch(() => data.value, () => processData(), { \n    immediate: true,\n    deep: false // Use shallow watching for performance\n  })\n\n  onUnmounted(() => {\n    if (debounceTimeout) {\n      clearTimeout(debounceTimeout)\n    }\n    clearCache()\n  })\n\n  return {\n    processedData,\n    isProcessing,\n    processData,\n    loadNextPage,\n    clearCache,\n    getCacheStats,\n    // Virtualization helpers\n    isVirtualized: enableVirtualization,\n    virtualPageSize\n  }\n}\n\n/**\n * D3.js chart composable with common chart patterns\n * Provides reusable chart setup and update patterns\n */\nexport function useD3Chart(containerRef, options = {}) {\n  const {\n    margin = { top: 20, right: 20, bottom: 30, left: 40 },\n    responsive = true,\n    autoResize = true\n  } = options\n\n  const d3Instance = useD3(containerRef, { responsive, autoResize })\n  const chartState = ref({\n    scales: {},\n    axes: {},\n    elements: {}\n  })\n\n  /**\n   * Setup chart with scales and axes\n   */\n  const setupChart = (config = {}) => {\n    const {\n      xScale = null,\n      yScale = null,\n      colorScale = null,\n      xAxis = null,\n      yAxis = null\n    } = config\n\n    if (!d3Instance.isReady.value) return\n\n    const { width, height } = d3Instance.dimensions.value\n    const chartWidth = width - margin.left - margin.right\n    const chartHeight = height - margin.top - margin.bottom\n\n    // Create SVG if not exists\n    const { svg, g } = d3Instance.createSVG({ margin, width, height })\n\n    // Setup scales\n    if (xScale) {\n      chartState.value.scales.x = xScale.range([0, chartWidth])\n    }\n    if (yScale) {\n      chartState.value.scales.y = yScale.range([chartHeight, 0])\n    }\n    if (colorScale) {\n      chartState.value.scales.color = colorScale\n    }\n\n    // Setup axes\n    if (xAxis && chartState.value.scales.x) {\n      const xAxisGroup = g.append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', `translate(0, ${chartHeight})`)\n        .call(xAxis.scale(chartState.value.scales.x))\n\n      chartState.value.axes.x = xAxisGroup\n    }\n\n    if (yAxis && chartState.value.scales.y) {\n      const yAxisGroup = g.append('g')\n        .attr('class', 'y-axis')\n        .call(yAxis.scale(chartState.value.scales.y))\n\n      chartState.value.axes.y = yAxisGroup\n    }\n\n    return { svg, g, chartWidth, chartHeight }\n  }\n\n  /**\n   * Update chart with new data\n   */\n  const updateChart = (data, updateFn) => {\n    if (!d3Instance.isReady.value || typeof updateFn !== 'function') return\n\n    const container = d3Instance.getSelection('container')\n    if (container) {\n      updateFn(container, data, chartState.value)\n    }\n  }\n\n  /**\n   * Resize chart\n   */\n  const resizeChart = () => {\n    if (!d3Instance.isReady.value) return\n\n    const { width, height } = d3Instance.dimensions.value\n    const chartWidth = width - margin.left - margin.right\n    const chartHeight = height - margin.top - margin.bottom\n\n    // Update SVG dimensions\n    const svg = d3Instance.getSelection('svg')\n    if (svg) {\n      svg.attr('width', width)\n         .attr('height', height)\n         .attr('viewBox', `0 0 ${width} ${height}`)\n    }\n\n    // Update scales ranges\n    if (chartState.value.scales.x) {\n      chartState.value.scales.x.range([0, chartWidth])\n    }\n    if (chartState.value.scales.y) {\n      chartState.value.scales.y.range([chartHeight, 0])\n    }\n\n    // Update axes\n    if (chartState.value.axes.x && chartState.value.scales.x) {\n      chartState.value.axes.x\n        .attr('transform', `translate(0, ${chartHeight})`)\n        .call(d3.axisBottom(chartState.value.scales.x))\n    }\n    if (chartState.value.axes.y && chartState.value.scales.y) {\n      chartState.value.axes.y.call(d3.axisLeft(chartState.value.scales.y))\n    }\n  }\n\n  // Watch for dimension changes\n  watch(() => d3Instance.dimensions.value, resizeChart, { deep: true })\n\n  return {\n    ...d3Instance,\n    chartState,\n    setupChart,\n    updateChart,\n    resizeChart,\n    margin\n  }\n}","import { ref, computed, watch, nextTick } from 'vue'\nimport { useD3, useD3Data, useD3Chart } from './useD3.js'\nimport * as d3 from 'd3'\n\n/**\n * Enhanced visualization composable with reactive updates\n * Handles complex data transformations and update patterns\n */\nexport function useVisualization(containerRef, options = {}) {\n  const {\n    margin = { top: 20, right: 20, bottom: 30, left: 40 },\n    responsive = true,\n    autoResize = true,\n    updateStrategy = 'merge', // 'replace', 'merge', 'animate'\n    transitionDuration = 750,\n    debounceUpdate = 100\n  } = options\n\n  const d3Chart = useD3Chart(containerRef, { margin, responsive, autoResize })\n  \n  // Visualization state\n  const isUpdating = ref(false)\n  const lastUpdate = ref(null)\n  const updateQueue = ref([])\n  \n  let updateTimeout = null\n  let animationFrame = null\n\n  /**\n   * Queue an update operation\n   */\n  const queueUpdate = (updateFn, data = null, immediate = false) => {\n    \n    if (typeof updateFn !== 'function') {\n      console.error('❌ useVisualization: updateFn is not a function:', updateFn)\n      return\n    }\n\n    const update = {\n      fn: updateFn,\n      data: data,\n      timestamp: Date.now()\n    }\n\n    if (immediate) {\n      executeUpdate(update)\n    } else {\n      updateQueue.value.push(update)\n      scheduleUpdate()\n    }\n  }\n\n  /**\n   * Schedule batched updates\n   */\n  const scheduleUpdate = () => {\n    if (updateTimeout) clearTimeout(updateTimeout)\n    if (animationFrame) cancelAnimationFrame(animationFrame)\n\n    updateTimeout = setTimeout(() => {\n      animationFrame = requestAnimationFrame(processPendingUpdates)\n    }, debounceUpdate)\n  }\n\n  /**\n   * Process all pending updates\n   */\n  const processPendingUpdates = async () => {\n    if (updateQueue.value.length === 0 || isUpdating.value) return\n\n    isUpdating.value = true\n\n    try {\n      // Sort updates by timestamp\n      const sortedUpdates = [...updateQueue.value].sort((a, b) => a.timestamp - b.timestamp)\n      \n      // Execute updates in sequence\n      for (const update of sortedUpdates) {\n        await executeUpdate(update)\n      }\n\n      // Clear queue\n      updateQueue.value = []\n      lastUpdate.value = Date.now()\n    } catch (error) {\n      console.error('Error processing visualization updates:', error)\n    } finally {\n      isUpdating.value = false\n    }\n  }\n\n  /**\n   * Execute a single update operation\n   */\n  const executeUpdate = async (update) => {\n    if (!d3Chart.isReady.value) {\n      return\n    }\n\n    await nextTick()\n\n    try {\n      const container = d3Chart.getSelection('container')\n      \n      if (container) {\n        await update.fn(container, update.data, d3Chart.chartState.value)\n      }\n    } catch (error) {\n      console.error('❌ useVisualization: Error executing update:', error)\n    }\n  }\n\n  /**\n   * Create smooth transitions between data states\n   */\n  const createSmoothTransition = (selection, options = {}) => {\n    const {\n      duration = transitionDuration,\n      ease = d3.easeQuadInOut,\n      delay = 0,\n      stagger = 0\n    } = options\n\n    if (stagger > 0) {\n      return selection.transition()\n        .duration(duration)\n        .ease(ease)\n        .delay((d, i) => delay + (i * stagger))\n    }\n\n    return selection.transition()\n      .duration(duration)\n      .ease(ease)\n      .delay(delay)\n  }\n\n  /**\n   * Handle enter-update-exit pattern with transitions\n   */\n  const handleDataJoin = (container, selector, data, options = {}) => {\n    const {\n      keyFn = (d, i) => i,\n      enterFn = null,\n      updateFn = null,\n      exitFn = null,\n      transitionOptions = {}\n    } = options\n\n    const selection = container.selectAll(selector).data(data, keyFn)\n\n    // Handle entering elements\n    const enter = selection.enter()\n    if (enterFn) {\n      enterFn(enter, createSmoothTransition(enter, transitionOptions))\n    }\n\n    // Handle updating elements\n    const update = selection\n    if (updateFn) {\n      updateFn(update, createSmoothTransition(update, transitionOptions))\n    }\n\n    // Handle exiting elements\n    const exit = selection.exit()\n    if (exitFn) {\n      exitFn(exit, createSmoothTransition(exit, transitionOptions))\n    } else {\n      // Default exit behavior\n      createSmoothTransition(exit, transitionOptions)\n        .style('opacity', 0)\n        .remove()\n    }\n\n    return { enter, update, exit }\n  }\n\n  /**\n   * Optimize rendering for large datasets\n   */\n  const optimizedRender = (data, renderFn, options = {}) => {\n    const {\n      chunkSize = 1000,\n      batchDelay = 16 // ~60fps\n    } = options\n\n    if (!Array.isArray(data) || data.length <= chunkSize) {\n      return renderFn(data)\n    }\n\n    // Split data into chunks\n    const chunks = []\n    for (let i = 0; i < data.length; i += chunkSize) {\n      chunks.push(data.slice(i, i + chunkSize))\n    }\n\n    // Render chunks progressively\n    return new Promise((resolve) => {\n      let currentChunk = 0\n\n      const renderNextChunk = () => {\n        if (currentChunk >= chunks.length) {\n          resolve()\n          return\n        }\n\n        renderFn(chunks[currentChunk])\n        currentChunk++\n\n        setTimeout(renderNextChunk, batchDelay)\n      }\n\n      renderNextChunk()\n    })\n  }\n\n  /**\n   * Create responsive scales that update with container dimensions\n   */\n  const createResponsiveScales = (dataExtents, options = {}) => {\n    const {\n      xType = 'linear',\n      yType = 'linear',\n      padding = 0.1,\n      nice = true\n    } = options\n\n    const { width, height } = d3Chart.dimensions.value\n    const chartWidth = width - margin.left - margin.right\n    const chartHeight = height - margin.top - margin.bottom\n\n    const scales = {}\n\n    // X Scale\n    if (dataExtents.x) {\n      if (xType === 'linear') {\n        scales.x = d3.scaleLinear()\n          .domain(dataExtents.x)\n          .range([0, chartWidth])\n        \n        if (nice) scales.x.nice()\n      } else if (xType === 'time') {\n        scales.x = d3.scaleTime()\n          .domain(dataExtents.x)\n          .range([0, chartWidth])\n      } else if (xType === 'band') {\n        scales.x = d3.scaleBand()\n          .domain(dataExtents.x)\n          .range([0, chartWidth])\n          .padding(padding)\n      }\n    }\n\n    // Y Scale\n    if (dataExtents.y) {\n      if (yType === 'linear') {\n        scales.y = d3.scaleLinear()\n          .domain(dataExtents.y)\n          .range([chartHeight, 0])\n        \n        if (nice) scales.y.nice()\n      } else if (yType === 'band') {\n        scales.y = d3.scaleBand()\n          .domain(dataExtents.y)\n          .range([chartHeight, 0])\n          .padding(padding)\n      }\n    }\n\n    return scales\n  }\n\n  /**\n   * Add interactive features to visualizations\n   */\n  const addInteractivity = (selection, options = {}) => {\n    const {\n      tooltip = null,\n      click = null,\n      hover = null,\n      zoom = false,\n      brush = false\n    } = options\n\n    // Tooltip\n    if (tooltip) {\n      selection\n        .on('mouseover', (event, d) => {\n          if (typeof tooltip.show === 'function') {\n            tooltip.show(event, d)\n          }\n        })\n        .on('mousemove', (event, d) => {\n          if (typeof tooltip.move === 'function') {\n            tooltip.move(event, d)\n          }\n        })\n        .on('mouseout', (event, d) => {\n          if (typeof tooltip.hide === 'function') {\n            tooltip.hide(event, d)\n          }\n        })\n    }\n\n    // Click events\n    if (click && typeof click === 'function') {\n      selection.on('click', click)\n    }\n\n    // Hover effects\n    if (hover) {\n      selection\n        .on('mouseenter', hover.enter || null)\n        .on('mouseleave', hover.leave || null)\n    }\n\n    // Zoom behavior\n    if (zoom && typeof zoom === 'object') {\n      const zoomBehavior = d3.zoom()\n        .scaleExtent(zoom.scaleExtent || [0.1, 10])\n        .on('zoom', zoom.onZoom || null)\n\n      selection.call(zoomBehavior)\n    }\n\n    // Brush behavior\n    if (brush && typeof brush === 'object') {\n      const brushBehavior = d3.brush()\n        .on('brush end', brush.onBrush || null)\n\n      selection.call(brushBehavior)\n    }\n\n    return selection\n  }\n\n  /**\n   * Cleanup visualization resources\n   */\n  const cleanup = () => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout)\n      updateTimeout = null\n    }\n\n    if (animationFrame) {\n      cancelAnimationFrame(animationFrame)\n      animationFrame = null\n    }\n\n    updateQueue.value = []\n    \n    // Call parent cleanup\n    d3Chart.cleanup()\n  }\n\n  return {\n    // Inherit all d3Chart functionality\n    ...d3Chart,\n\n    // Visualization state\n    isUpdating,\n    lastUpdate,\n\n    // Update management\n    queueUpdate,\n    scheduleUpdate,\n    executeUpdate,\n\n    // Transition utilities\n    createSmoothTransition,\n    handleDataJoin,\n\n    // Performance optimization\n    optimizedRender,\n\n    // Responsive utilities\n    createResponsiveScales,\n\n    // Interactivity\n    addInteractivity,\n\n    // Cleanup\n    cleanup\n  }\n}\n\n/**\n * Tooltip composable for D3.js visualizations\n */\nexport function useTooltip(options = {}) {\n  const {\n    className = 'chart-tooltip',\n    offset = { x: 10, y: -10 },\n    fadeIn = 200,\n    fadeOut = 100,\n    followMouse = true\n  } = options\n\n  const tooltipRef = ref(null)\n  const isVisible = ref(false)\n  const content = ref('')\n  const position = ref({ x: 0, y: 0 })\n\n  /**\n   * Initialize tooltip element\n   */\n  const initTooltip = () => {\n    if (tooltipRef.value) return tooltipRef.value\n\n    const tooltip = d3.select('body')\n      .append('div')\n      .attr('class', className)\n      .style('opacity', 0)\n      .style('position', 'absolute')\n      .style('pointer-events', 'none')\n      .style('z-index', 9999)\n\n    tooltipRef.value = tooltip\n    return tooltip\n  }\n\n  /**\n   * Show tooltip\n   */\n  const show = (event, data, formatter = null) => {\n    const tooltip = initTooltip()\n    \n    let tooltipContent = data\n    if (formatter && typeof formatter === 'function') {\n      tooltipContent = formatter(data)\n    }\n\n    content.value = tooltipContent\n    \n    tooltip.html(tooltipContent)\n      .transition()\n      .duration(fadeIn)\n      .style('opacity', 1)\n\n    if (followMouse && event) {\n      updatePosition(event)\n    }\n\n    isVisible.value = true\n  }\n\n  /**\n   * Update tooltip position\n   */\n  const updatePosition = (event) => {\n    if (!tooltipRef.value || !event) return\n\n    const x = event.pageX + offset.x\n    const y = event.pageY + offset.y\n\n    position.value = { x, y }\n\n    tooltipRef.value\n      .style('left', `${x}px`)\n      .style('top', `${y}px`)\n  }\n\n  /**\n   * Hide tooltip\n   */\n  const hide = () => {\n    if (!tooltipRef.value) return\n\n    tooltipRef.value\n      .transition()\n      .duration(fadeOut)\n      .style('opacity', 0)\n\n    isVisible.value = false\n  }\n\n  /**\n   * Remove tooltip from DOM\n   */\n  const destroy = () => {\n    if (tooltipRef.value) {\n      tooltipRef.value.remove()\n      tooltipRef.value = null\n    }\n    isVisible.value = false\n  }\n\n  return {\n    // State\n    isVisible,\n    content,\n    position,\n\n    // Methods\n    show,\n    hide,\n    updatePosition,\n    destroy,\n\n    // Utilities\n    move: updatePosition\n  }\n}"],"names":["useErrorHandling","options","showNotifications","logToConsole","retryAttempts","retryDelay","persistErrors","uiStore","useUIStore","errors","ref","globalError","errorCounts","Map","retryHistory","errorMetrics","total","byType","byComponent","resolved","unresolved","ERROR_TYPES","NETWORK","VALIDATION","RUNTIME","PERMISSION","DATA","VISUALIZATION","STORE","UNKNOWN","ERROR_SEVERITY","LOW","MEDIUM","HIGH","CRITICAL","hasErrors","computed","value","length","hasGlobalError","criticalErrors","filter","error","severity","unresolvedErrors","createErrorObject","context","type","message","toString","stack","includes","_a","component","_b","store","TypeError","ReferenceError","RangeError","errorKey","substring","get","classifyError","id","Date","now","Math","random","timestamp","retryCount","userAgent","navigator","url","window","location","href","action","handleError","errorObj","set","push","updateErrorMetrics","showErrorNotification","persistError","slice","title","duration","addNotification","actions","text","showErrorDetails","retryOperation","errorId","find","e","openModal","async","retryFn","retryKey","delay","pow","Promise","resolve","setTimeout","resolveError","retryError","originalError","resolvedAt","persistedErrors","JSON","parse","localStorage","getItem","limitedErrors","setItem","stringify","clearErrors","clear","wrapAsync","asyncFn","args","autoRetry","maxRetries","lastError","attempt","withGracefulDegradation","fallbackValue","degraded","fallbackUsed","createCircuitBreaker","failureThreshold","resetTimeout","monitoringPeriod","failureCount","lastFailureTime","state","nextAttempt","Error","result","createErrorBoundary","fallbackComponent","boundaryError","onErrorCaptured","instance","info","$options","name","errorInfo","clearBoundaryError","getRecoverySuggestions","suggestions","loadPersistedErrors","map","initializeErrorHandling","addEventListener","event","filename","lineno","colno","reason","useD3","containerRef","responsive","debounceResize","cleanupSelectors","autoResize","dimensions","width","height","isReady","isDestroyed","resizeObserver","resizeTimeout","d3Selections","eventListeners","initialize","nextTick","updateDimensions","setupResizeObserver","rect","getBoundingClientRect","ResizeObserver","observe","removeEventListener","key","listener","element","handler","delete","cleanup","disconnect","clearTimeout","forEach","selection","remove","selector","d3.select","selectAll","onMounted","onUnmounted","createSelection","select","getSelection","createSVG","margin","top","right","bottom","left","className","preserveAspectRatio","svg","append","attr","g","createTransition","ease","d3.easeQuadInOut","d3.transition","listenerKey","d3","useVisualization","updateStrategy","transitionDuration","debounceUpdate","d3Chart","d3Instance","chartState","scales","axes","elements","resizeChart","chartWidth","chartHeight","x","range","y","call","d3.axisBottom","d3.axisLeft","watch","deep","setupChart","config","xScale","yScale","colorScale","xAxis","yAxis","color","xAxisGroup","scale","yAxisGroup","updateChart","data","updateFn","container","useD3Chart","isUpdating","lastUpdate","updateQueue","updateTimeout","animationFrame","scheduleUpdate","requestAnimationFrame","processPendingUpdates","sortedUpdates","sort","a","b","update","executeUpdate","fn","createSmoothTransition","stagger","transition","d","i","queueUpdate","immediate","handleDataJoin","keyFn","enterFn","exitFn","transitionOptions","enter","exit","style","optimizedRender","renderFn","chunkSize","batchDelay","Array","isArray","chunks","currentChunk","renderNextChunk","createResponsiveScales","dataExtents","xType","yType","padding","nice","d3.scaleLinear","domain","d3.scaleTime","d3.scaleBand","addInteractivity","tooltip","click","hover","zoom","brush","on","show","move","hide","leave","zoomBehavior","d3.zoom","scaleExtent","onZoom","brushBehavior","d3.brush","onBrush","cancelAnimationFrame","useTooltip","offset","fadeIn","fadeOut","followMouse","tooltipRef","isVisible","content","position","updatePosition","pageX","pageY","formatter","initTooltip","tooltipContent","html","destroy"],"mappings":"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"}
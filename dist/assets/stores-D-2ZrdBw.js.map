{"version":3,"file":"stores-D-2ZrdBw.js","sources":["../../src/schemas/validation.js","../../src/services/dataService.js","../../src/stores/useDataStore.js","../../src/stores/useUIStore.js","../../src/stores/useVisualizationStore.js"],"sourcesContent":["import { z } from 'zod'\n\n// Base schemas for common data types\nexport const countryCodeSchema = z.string().length(3, 'Country code must be exactly 3 characters')\nexport const yearSchema = z.number().int().min(1960).max(2030)\nexport const positiveNumberSchema = z.number().positive('Value must be positive')\nexport const percentageSchema = z.number().min(0).max(100)\n\n// Geographic data validation\nexport const coordinateSchema = z.number().min(-180).max(180)\nexport const latitudeSchema = z.number().min(-90).max(90)\nexport const longitudeSchema = z.number().min(-180).max(180)\n\nexport const geoPointSchema = z.object({\n  type: z.literal('Point'),\n  coordinates: z.tuple([longitudeSchema, latitudeSchema])\n})\n\nexport const geoFeatureSchema = z.object({\n  type: z.literal('Feature'),\n  properties: z.record(z.any()),\n  geometry: z.object({\n    type: z.enum(['Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon']),\n    coordinates: z.any() // Complex validation depends on geometry type\n  })\n})\n\nexport const geoJsonSchema = z.object({\n  type: z.literal('FeatureCollection'),\n  features: z.array(geoFeatureSchema)\n})\n\n// FAO data validation schemas\nexport const faoDataPointSchema = z.object({\n  area_code: countryCodeSchema,\n  area: z.string().min(1, 'Area name is required'),\n  item_code: z.number().int().positive(),\n  item: z.string().min(1, 'Item name is required'),\n  element_code: z.number().int().positive(),\n  element: z.string().min(1, 'Element name is required'),\n  year: yearSchema,\n  unit: z.string().min(1, 'Unit is required'),\n  value: z.number().nullable(),\n  flag: z.string().optional()\n})\n\n// Updated timeseries schema to match actual data structure\nexport const timeseriesYearDataSchema = z.object({\n  year: yearSchema,\n  production: z.number().nullable().optional(),\n  imports: z.number().nullable().optional(),\n  exports: z.number().nullable().optional(),\n  domestic_supply: z.number().nullable().optional(),\n  feed: z.number().nullable().optional(),\n  food: z.number().nullable().optional(),\n  other_uses: z.number().nullable().optional(),\n  processing: z.number().nullable().optional(),\n  seed: z.number().nullable().optional(),\n  stock_variation: z.number().nullable().optional(),\n  total_supply: z.number().nullable().optional()\n})\n\nexport const timeseriesItemSchema = z.object({\n  country: z.string().min(1, 'Country is required'),\n  item: z.string().min(1, 'Item is required'),\n  unit: z.string().min(1, 'Unit is required'),\n  data: z.array(timeseriesYearDataSchema)\n})\n\nexport const faoTimeseriesSchema = z.array(timeseriesItemSchema)\n\n// Production data validation\nexport const productionDataSchema = z.object({\n  country: z.string().min(1, 'Country is required'),\n  country_code: countryCodeSchema,\n  item: z.string().min(1, 'Item is required'),\n  year: yearSchema,\n  production: positiveNumberSchema.nullable(),\n  area_harvested: positiveNumberSchema.nullable(),\n  yield: positiveNumberSchema.nullable()\n})\n\n// ML prediction validation\nexport const mlPredictionSchema = z.object({\n  region: z.string().min(1, 'Region is required'),\n  item: z.string().min(1, 'Item is required'),\n  year: yearSchema,\n  predicted_value: z.number(),\n  confidence_interval: z.object({\n    lower: z.number(),\n    upper: z.number()\n  }),\n  model_accuracy: percentageSchema,\n  last_updated: z.string().datetime()\n})\n\n// Form validation schemas\nexport const searchFormSchema = z.object({\n  query: z.string().min(1, 'Search query is required').max(100, 'Query too long'),\n  filters: z.object({\n    countries: z.array(countryCodeSchema).optional(),\n    items: z.array(z.string()).optional(),\n    years: z.object({\n      start: yearSchema,\n      end: yearSchema\n    }).refine(data => data.start <= data.end, {\n      message: 'Start year must be before or equal to end year'\n    }).optional()\n  }).optional()\n})\n\nexport const exportFormSchema = z.object({\n  format: z.enum(['csv', 'json', 'xlsx'], 'Invalid export format'),\n  data_type: z.enum(['production', 'trade', 'prices', 'forecast'], 'Invalid data type'),\n  filters: z.object({\n    countries: z.array(countryCodeSchema).min(1, 'At least one country must be selected'),\n    years: z.object({\n      start: yearSchema,\n      end: yearSchema\n    }).refine(data => data.start <= data.end, {\n      message: 'Start year must be before or equal to end year'\n    }),\n    items: z.array(z.string()).min(1, 'At least one item must be selected')\n  })\n})\n\n// User preferences validation\nexport const userPreferencesSchema = z.object({\n  theme: z.enum(['light', 'dark', 'auto']).default('auto'),\n  language: z.enum(['en', 'es', 'fr', 'de']).default('en'),\n  default_view: z.enum(['dashboard', 'timeseries', 'map']).default('dashboard'),\n  chart_settings: z.object({\n    animation_duration: z.number().min(0).max(5000).default(750),\n    show_tooltips: z.boolean().default(true),\n    show_legend: z.boolean().default(true),\n    color_scheme: z.enum(['default', 'colorblind', 'high_contrast']).default('default')\n  }).default({}),\n  data_settings: z.object({\n    cache_duration: z.number().min(300).max(86400).default(3600), // 5 minutes to 24 hours\n    auto_refresh: z.boolean().default(false),\n    download_quality: z.enum(['low', 'medium', 'high']).default('medium')\n  }).default({})\n})\n\n// API response validation\nexport const apiResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.any().optional(),\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n    details: z.any().optional()\n  }).optional(),\n  metadata: z.object({\n    timestamp: z.string().datetime(),\n    version: z.string(),\n    total_records: z.number().int().min(0).optional(),\n    page: z.number().int().min(1).optional(),\n    limit: z.number().int().min(1).optional()\n  }).optional()\n})\n\n// Utility functions for validation\nexport const validateData = (schema, data) => {\n  try {\n    return {\n      success: true,\n      data: schema.parse(data),\n      errors: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      errors: error.errors || [{ message: error.message }]\n    }\n  }\n}\n\nexport const validateAsync = async (schema, data) => {\n  try {\n    const result = await schema.parseAsync(data)\n    return {\n      success: true,\n      data: result,\n      errors: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      errors: error.errors || [{ message: error.message }]\n    }\n  }\n}\n\n// Data completeness validation\nexport const validateDataCompleteness = (data, requiredFields = []) => {\n  const missing = []\n  const invalid = []\n  \n  requiredFields.forEach(field => {\n    const value = data[field]\n    if (value === undefined || value === null || value === '') {\n      missing.push(field)\n    } else if (typeof value === 'number' && (isNaN(value) || !isFinite(value))) {\n      invalid.push(field)\n    }\n  })\n  \n  return {\n    isComplete: missing.length === 0 && invalid.length === 0,\n    missing,\n    invalid,\n    completeness: ((requiredFields.length - missing.length - invalid.length) / requiredFields.length) * 100\n  }\n}\n\n// Boundary validation for numerical inputs\nexport const createBoundaryValidator = (min, max, fieldName = 'Value') => {\n  return z.number({\n    required_error: `${fieldName} is required`,\n    invalid_type_error: `${fieldName} must be a number`\n  })\n  .min(min, `${fieldName} must be at least ${min}`)\n  .max(max, `${fieldName} must be at most ${max}`)\n  .finite(`${fieldName} must be a finite number`)\n}\n\n// Custom validation for specific use cases\nexport const validateCountryData = (data) => {\n  const schema = z.object({\n    countries: z.array(z.object({\n      code: countryCodeSchema,\n      name: z.string().min(1),\n      region: z.string().min(1),\n      coordinates: z.object({\n        lat: latitudeSchema,\n        lng: longitudeSchema\n      }).optional()\n    })).min(1, 'At least one country is required')\n  })\n  \n  return validateData(schema, { countries: data })\n}\n\nexport const validateTimeRange = (startYear, endYear) => {\n  const schema = z.object({\n    start: yearSchema,\n    end: yearSchema\n  }).refine(data => data.start <= data.end, {\n    message: 'Start year must be before or equal to end year'\n  }).refine(data => data.end - data.start <= 50, {\n    message: 'Time range cannot exceed 50 years'\n  })\n  \n  return validateData(schema, { start: startYear, end: endYear })\n}","/**\n * Data Service for D2 Nutrition Vibes Vue.js Application\n * Handles loading and caching of FAO and geographic data with runtime validation\n */\n\nimport { \n  apiResponseSchema,\n  faoTimeseriesSchema,\n  geoJsonSchema,\n  mlPredictionSchema,\n  validateData,\n  validateAsync\n} from '@/schemas/validation'\n\nclass DataService {\n  constructor() {\n    this.cache = new Map()\n    this.baseUrl = ''\n    this.validationEnabled = true\n  }\n\n  /**\n   * Generic data loading function with caching and validation\n   */\n  async loadData(url, cacheKey = null, schema = null, options = {}) {\n    const key = cacheKey || url\n    const { validateResponse = this.validationEnabled, throwOnValidationError = false } = options\n    \n    console.log(`🔄 DataService: Loading data from ${url} (cache key: ${key})`)\n    \n    if (this.cache.has(key)) {\n      console.log(`📦 DataService: Cache hit for ${key}`)\n      return this.cache.get(key)\n    }\n\n    try {\n      console.log(`🌐 DataService: Fetching ${url}...`)\n      const response = await fetch(url)\n      console.log(`🌐 DataService: Response status: ${response.status} ${response.statusText}`)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n      \n      console.log(`📄 DataService: Parsing JSON...`)\n      const data = await response.json()\n      console.log(`✅ DataService: Data loaded successfully, size:`, Object.keys(data).length || data.length || 'unknown')\n      \n      // Runtime validation if schema is provided\n      if (schema && validateResponse) {\n        console.log(`🔍 DataService: Validating data with schema...`)\n        const validation = await validateAsync(schema, data)\n        if (!validation.success) {\n          console.warn(`⚠️ DataService: Data validation failed for ${url}:`, validation.errors)\n          \n          if (throwOnValidationError) {\n            throw new Error(`Data validation failed: ${validation.errors.map(e => e.message).join(', ')}`)\n          }\n          \n          // Add validation metadata to data\n          data._validation = {\n            valid: false,\n            errors: validation.errors,\n            timestamp: new Date().toISOString()\n          }\n        } else {\n          data._validation = {\n            valid: true,\n            errors: null,\n            timestamp: new Date().toISOString()\n          }\n        }\n      }\n      \n      this.cache.set(key, data)\n      return data\n    } catch (error) {\n      console.error(`Error loading data from ${url}:`, error)\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        url: url,\n        response: error.response\n      })\n      throw error\n    }\n  }\n\n  /**\n   * Validate cached data against schema\n   */\n  async validateCachedData(cacheKey, schema) {\n    if (!this.cache.has(cacheKey)) {\n      throw new Error(`No cached data found for key: ${cacheKey}`)\n    }\n    \n    const data = this.cache.get(cacheKey)\n    return await validateAsync(schema, data)\n  }\n\n  /**\n   * Enable/disable validation\n   */\n  setValidationEnabled(enabled) {\n    this.validationEnabled = enabled\n  }\n\n  /**\n   * Load main data index\n   */\n  async loadDataIndex() {\n    console.log('📂 DataService: loadDataIndex called')\n    return this.loadData('/data/index.json', 'main-index')\n  }\n\n  /**\n   * Load FAO data index\n   */\n  async loadFAOIndex() {\n    return this.loadData('/data/fao/index.json', 'fao-index')\n  }\n\n  /**\n   * Load FAO metadata\n   */\n  async loadFAOMetadata() {\n    console.log('📊 DataService: loadFAOMetadata called')\n    return this.loadData('/data/fao/metadata.json', 'fao-metadata')\n  }\n\n  /**\n   * Load geographic data with GeoJSON validation\n   */\n  async loadGeoData(type = 'geo') {\n    console.log(`🗺️ DataService: loadGeoData called with type: ${type}`)\n    const geoFiles = {\n      world: '/data/geo.json',\n      world_simplified: '/data/geo.json',\n      geo: '/data/geo.json'\n    }\n    \n    const url = geoFiles[type] || geoFiles.geo\n    console.log(`🗺️ DataService: Using URL: ${url}`)\n    return this.loadData(url, `geo-${type}`, geoJsonSchema, { \n      throwOnValidationError: false \n    })\n  }\n\n  /**\n   * Load production data for specific product and year\n   */\n  async loadProductionData(product, year) {\n    console.log(`📊 DataService: loadProductionData called with product: ${product}, year: ${year}`)\n    const filename = `${product}_production_${year}.json`\n    const url = `/data/fao/geo/${filename}`\n    console.log(`📊 DataService: Using production URL: ${url}`)\n    return this.loadData(url, `production-${product}-${year}`)\n  }\n\n  /**\n   * Load ML forecast data\n   */\n  async loadMLForecast(forecastKey) {\n    console.log(`🔮 DataService: loadMLForecast called with key: ${forecastKey}`)\n    // Ensure we don't double-add .json extension\n    const cleanKey = forecastKey.replace('.json', '')\n    const url = `/data/fao/ml/${cleanKey}.json`\n    console.log(`🔮 DataService: Loading ML forecast from URL: ${url}`)\n    return this.loadData(url, `ml-${cleanKey}`)\n  }\n\n  /**\n   * Load timeseries data with FAO schema validation\n   */\n  async loadTimeseriesData() {\n    return this.loadData('/data/fao/timeseries.json', 'timeseries', faoTimeseriesSchema, {\n      throwOnValidationError: false\n    })\n  }\n\n  /**\n   * Load production rankings\n   */\n  async loadProductionRankings() {\n    return this.loadData('/data/fao/production_rankings.json', 'production-rankings')\n  }\n\n  /**\n   * Load trade balance data\n   */\n  async loadTradeBalance() {\n    return this.loadData('/data/fao/trade_balance.json', 'trade-balance')\n  }\n\n  /**\n   * Load network analysis data\n   */\n  async loadNetworkData() {\n    return this.loadData('/data/fao/network.json', 'network')\n  }\n\n  /**\n   * Load summary statistics\n   */\n  async loadSummaryData() {\n    return this.loadData('/data/fao/summary.json', 'summary')\n  }\n\n  /**\n   * Load ML forecasts index\n   */\n  async loadMLIndex() {\n    console.log('🤖 DataService: loadMLIndex called')\n    return this.loadData('/data/fao/ml/index.json', 'ml-index')\n  }\n\n  /**\n   * Load comprehensive ML forecasts index with metadata\n   */\n  async loadMLComprehensiveIndex() {\n    console.log('🤖 DataService: loadMLComprehensiveIndex called')\n    return this.loadData('/data/fao/ml/comprehensive_index.json', 'ml-comprehensive-index')\n  }\n\n  /**\n   * Load global ML forecasts index\n   */\n  async loadMLGlobalIndex() {\n    console.log('🤖 DataService: loadMLGlobalIndex called')\n    return this.loadData('/data/fao/ml/global_forecasts_index.json', 'ml-global-index')\n  }\n\n  /**\n   * Load regional ML forecasts index\n   */\n  async loadMLRegionalIndex() {\n    console.log('🤖 DataService: loadMLRegionalIndex called')\n    return this.loadData('/data/fao/ml/regional_forecasts_index.json', 'ml-regional-index')\n  }\n\n  /**\n   * Load country ML forecasts index\n   */\n  async loadMLCountryIndex() {\n    console.log('🤖 DataService: loadMLCountryIndex called')\n    return this.loadData('/data/fao/ml/country_forecasts_index.json', 'ml-country-index')\n  }\n\n  /**\n   * Get available products from index\n   */\n  async getAvailableProducts() {\n    const index = await this.loadDataIndex()\n    return index.products || []\n  }\n\n  /**\n   * Get available years from index\n   */\n  async getAvailableYears() {\n    const index = await this.loadDataIndex()\n    return index.years || []\n  }\n\n  /**\n   * Clear cache\n   */\n  clearCache() {\n    this.cache.clear()\n  }\n\n  /**\n   * Get cache stats for debugging\n   */\n  getCacheStats() {\n    return {\n      size: this.cache.size,\n      keys: Array.from(this.cache.keys())\n    }\n  }\n}\n\n// Export singleton instance\nexport default new DataService()","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\nimport dataService from '@/services/dataService'\n\nexport const useDataStore = defineStore('data', () => {\n  // State\n  const geoData = ref(null)\n  const productionData = ref(new Map())\n  const forecastData = ref(new Map())\n  const timeseriesData = ref(null)\n  const networkData = ref(null)\n  const summaryData = ref(null)\n  const dataIndex = ref(null)\n  const faoMetadata = ref(null)\n  \n  // ML-specific state\n  const mlIndex = ref(null)\n  const mlComprehensiveIndex = ref(null)\n  const mlGlobalIndex = ref(null)\n  const mlRegionalIndex = ref(null)\n  const mlCountryIndex = ref(null)\n  \n  // Enhanced state for Phase 5\n  const selectedProduct = ref('maize_and_products')\n  const selectedRegion = ref('global')\n  const selectedYears = ref({ start: 2018, end: 2023 })\n  const dataFilters = ref({\n    countries: [],\n    elements: [],\n    items: []\n  })\n  const currentData = ref([])\n  const dataCache = ref(new Map())\n  const lastUpdated = ref(null)\n  \n  // Loading states\n  const loading = ref(false)\n  const loadingStates = ref(new Map())\n  const errors = ref(new Map())\n\n  // Enhanced computed properties for Phase 5\n  const isLoading = computed(() => loading.value)\n  const hasGeoData = computed(() => geoData.value !== null)\n  const hasData = computed(() => {\n    return Object.keys(productionData.value).length > 0 || currentData.value.length > 0\n  })\n  const isDataLoaded = computed(() => hasData.value)\n  \n  const filteredData = computed(() => {\n    if (!currentData.value.length) return []\n    \n    return currentData.value.filter(item => {\n      // Filter by selected years\n      if (item.Year < selectedYears.value.start || item.Year > selectedYears.value.end) {\n        return false\n      }\n      \n      // Filter by selected countries\n      if (dataFilters.value.countries.length > 0 && \n          !dataFilters.value.countries.includes(item.Area)) {\n        return false\n      }\n      \n      // Filter by selected elements\n      if (dataFilters.value.elements.length > 0 && \n          !dataFilters.value.elements.includes(item.Element)) {\n        return false\n      }\n      \n      // Filter by selected items\n      if (dataFilters.value.items.length > 0 && \n          !dataFilters.value.items.includes(item.Item)) {\n        return false\n      }\n      \n      return true\n    })\n  })\n\n  const dataByProduct = computed(() => {\n    const grouped = {}\n    filteredData.value.forEach(item => {\n      if (!grouped[item.Item]) {\n        grouped[item.Item] = []\n      }\n      grouped[item.Item].push(item)\n    })\n    return grouped\n  })\n\n  const dataByRegion = computed(() => {\n    const grouped = {}\n    filteredData.value.forEach(item => {\n      if (!grouped[item.Area]) {\n        grouped[item.Area] = []\n      }\n      grouped[item.Area].push(item)\n    })\n    return grouped\n  })\n\n  const availableProducts = computed(() => {\n    // First try to get products from timeseries data\n    if (timeseriesData.value && Object.keys(timeseriesData.value).length > 0) {\n      return Object.keys(timeseriesData.value).sort()\n    }\n    \n    // Then try FAO metadata\n    if (faoMetadata.value?.data_summary?.food_items) {\n      return faoMetadata.value.data_summary.food_items.sort()\n    }\n    \n    // Fallback to current data or index\n    const indexProducts = dataIndex.value?.products || []\n    const currentProducts = [...new Set(currentData.value.map(item => item.Item))].sort()\n    return currentProducts.length > 0 ? currentProducts : indexProducts\n  })\n  \n  const availableRegions = computed(() => {\n    return [...new Set(currentData.value.map(item => item.Area))].sort()\n  })\n  \n  const availableYears = computed(() => {\n    const indexYears = dataIndex.value?.years || []\n    const currentYears = [...new Set(currentData.value.map(item => item.Year))].sort()\n    return currentYears.length > 0 ? currentYears : indexYears\n  })\n\n  const dataStats = computed(() => {\n    if (!filteredData.value.length) return null\n    \n    const values = filteredData.value\n      .map(item => parseFloat(item.Value))\n      .filter(val => !isNaN(val))\n    \n    if (!values.length) return null\n    \n    const sum = values.reduce((acc, val) => acc + val, 0)\n    const avg = sum / values.length\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n    \n    return {\n      count: values.length,\n      sum,\n      average: avg,\n      min,\n      max,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)]\n    }\n  })\n\n  // Helper function to set loading state\n  const setLoading = (key, isLoading) => {\n    loadingStates.value.set(key, isLoading)\n    loading.value = Array.from(loadingStates.value.values()).some(Boolean)\n  }\n\n  // Helper function to set error\n  const setError = (key, error) => {\n    errors.value.set(key, error)\n    console.error(`Data store error for ${key}:`, error)\n  }\n\n  // Actions\n  const loadDataIndex = async () => {\n    const key = 'data-index'\n    console.log('📂 DataStore: Starting loadDataIndex...')\n    setLoading(key, true)\n    try {\n      console.log('📂 DataStore: Calling dataService.loadDataIndex()...')\n      const data = await dataService.loadDataIndex()\n      console.log('📂 DataStore: DataIndex response:', data)\n      dataIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error('❌ DataStore: Error loading data index:', error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadFAOMetadata = async () => {\n    const key = 'fao-metadata'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadFAOMetadata()\n      faoMetadata.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadGeoData = async (type = 'geo') => {\n    const key = `geo-${type}`\n    console.log(`🗺️ DataStore: Starting loadGeoData with type: ${type}`)\n    setLoading(key, true)\n    try {\n      console.log(`🗺️ DataStore: Calling dataService.loadGeoData(${type})...`)\n      const data = await dataService.loadGeoData(type)\n      console.log('🗺️ DataStore: GeoData response:', data ? 'Success' : 'No data')\n      console.log('🗺️ DataStore: GeoData features count:', data?.features?.length || 'N/A')\n      geoData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading geo data (${type}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadProductionData = async (product, year) => {\n    const key = `production-${product}-${year}`\n    console.log(`📊 DataStore: Starting loadProductionData for ${product} (${year})`)\n    setLoading(key, true)\n    try {\n      console.log(`📊 DataStore: Calling dataService.loadProductionData(${product}, ${year})...`)\n      const data = await dataService.loadProductionData(product, year)\n      console.log('📊 DataStore: ProductionData response:', data ? 'Success' : 'No data')\n      console.log('📊 DataStore: ProductionData items count:', data?.data?.length || data?.length || 'N/A')\n      productionData.value.set(key, data)\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading production data (${product}, ${year}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadForecastData = async (forecastKey) => {\n    const key = `forecast-${forecastKey}`\n    console.log(`🔮 DataStore: Starting loadForecastData for ${forecastKey}`)\n    setLoading(key, true)\n    try {\n      console.log(`🔮 DataStore: Calling dataService.loadMLForecast(${forecastKey})...`)\n      const data = await dataService.loadMLForecast(forecastKey)\n      console.log('🔮 DataStore: ForecastData response:', data ? 'Success' : 'No data')\n      forecastData.value.set(key, data)\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading forecast data (${forecastKey}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // Alias for compatibility\n  const loadMLForecast = loadForecastData\n\n  const loadTimeseriesData = async () => {\n    const key = 'timeseries'\n    console.log('📊 DataStore: Starting loadTimeseriesData...')\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadTimeseriesData()\n      console.log('📊 DataStore: Raw timeseries data:', Array.isArray(data) ? `Array with ${data.length} entries` : typeof data)\n      \n      // Transform array structure to nested object structure\n      // Expected: { product: { country: [yearData] } }\n      const transformedData = {}\n      \n      if (Array.isArray(data)) {\n        data.forEach(entry => {\n          const { item: product, country, data: yearData } = entry\n          \n          if (!transformedData[product]) {\n            transformedData[product] = {}\n          }\n          \n          transformedData[product][country] = yearData\n        })\n        \n        console.log('📊 DataStore: Transformed timeseries data structure:', {\n          products: Object.keys(transformedData).length,\n          sampleProduct: Object.keys(transformedData)[0],\n          sampleCountries: transformedData[Object.keys(transformedData)[0]] ? \n            Object.keys(transformedData[Object.keys(transformedData)[0]]).slice(0, 3) : []\n        })\n      }\n      \n      timeseriesData.value = transformedData\n      errors.value.delete(key)\n      return transformedData\n    } catch (error) {\n      console.error('❌ DataStore: Error loading timeseries data:', error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadNetworkData = async () => {\n    const key = 'network'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadNetworkData()\n      networkData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadSummaryData = async () => {\n    const key = 'summary'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadSummaryData()\n      summaryData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // ML-specific actions\n  const loadMLIndex = async () => {\n    const key = 'ml-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLIndex()\n      mlIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLComprehensiveIndex = async () => {\n    const key = 'ml-comprehensive-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLComprehensiveIndex()\n      mlComprehensiveIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLGlobalIndex = async () => {\n    const key = 'ml-global-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLGlobalIndex()\n      mlGlobalIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLRegionalIndex = async () => {\n    const key = 'ml-regional-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLRegionalIndex()\n      mlRegionalIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLCountryIndex = async () => {\n    const key = 'ml-country-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLCountryIndex()\n      mlCountryIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // Get available ML forecasts by type\n  const getAvailableMLForecasts = (type = 'all') => {\n    switch (type) {\n      case 'global':\n        return mlGlobalIndex.value?.forecasts || []\n      case 'regional':\n        return mlRegionalIndex.value?.forecasts || []\n      case 'country':\n        return mlCountryIndex.value?.forecasts || []\n      case 'all':\n      default:\n        return mlComprehensiveIndex.value?.forecast_categories || {}\n    }\n  }\n\n  // Initialize critical data\n  const initializeApp = async () => {\n    console.log('🚀 DataStore: Starting app initialization...')\n    try {\n      console.log('📂 DataStore: Loading data index...')\n      const indexResult = await loadDataIndex()\n      console.log('✅ DataStore: Data index loaded:', indexResult)\n      \n      console.log('📊 DataStore: Loading FAO metadata...')\n      const metadataResult = await loadFAOMetadata()\n      console.log('✅ DataStore: FAO metadata loaded:', metadataResult)\n      \n      console.log('🗺️ DataStore: Loading geo data...')\n      const geoResult = await loadGeoData('geo')\n      console.log('✅ DataStore: Geo data loaded:', geoResult)\n      \n      console.log('📈 DataStore: Loading timeseries data...')\n      const timeseriesResult = await loadTimeseriesData()\n      console.log('✅ DataStore: Timeseries data loaded:', timeseriesResult ? 'Success' : 'Failed')\n      \n      console.log('🎉 DataStore: App initialization completed successfully!')\n    } catch (error) {\n      console.error('❌ DataStore: Failed to initialize app data:', error)\n      console.error('❌ DataStore: Error details:', error.stack)\n    }\n  }\n\n  // Get production data from cache\n  const getProductionData = (product, year) => {\n    const key = `production-${product}-${year}`\n    return productionData.value.get(key)\n  }\n\n  // Get forecast data from cache\n  const getForecastData = (forecastKey) => {\n    const key = `forecast-${forecastKey}`\n    return forecastData.value.get(key)\n  }\n\n  // Clear cache\n  const clearCache = () => {\n    productionData.value.clear()\n    forecastData.value.clear()\n    errors.value.clear()\n    loadingStates.value.clear()\n    dataService.clearCache()\n  }\n\n  // Get error for specific key\n  const getError = (key) => {\n    return errors.value.get(key)\n  }\n\n  // Enhanced actions for Phase 5\n  const setSelectedProduct = (product) => {\n    selectedProduct.value = product\n  }\n\n  const setSelectedRegion = (region) => {\n    selectedRegion.value = region\n  }\n\n  const setSelectedYears = (years) => {\n    selectedYears.value = { ...years }\n  }\n\n  const setDataFilters = (filters) => {\n    dataFilters.value = { ...filters }\n  }\n\n  const addCountryFilter = (country) => {\n    if (!dataFilters.value.countries.includes(country)) {\n      dataFilters.value.countries.push(country)\n    }\n  }\n\n  const removeCountryFilter = (country) => {\n    const index = dataFilters.value.countries.indexOf(country)\n    if (index > -1) {\n      dataFilters.value.countries.splice(index, 1)\n    }\n  }\n\n  const clearFilters = () => {\n    dataFilters.value = {\n      countries: [],\n      elements: [],\n      items: []\n    }\n  }\n\n  const transformDataForVisualization = (type = 'timeseries') => {\n    if (!filteredData.value.length) return []\n    \n    switch (type) {\n      case 'timeseries':\n        return filteredData.value.map(item => ({\n          date: new Date(item.Year, 0, 1),\n          value: parseFloat(item.Value) || 0,\n          year: item.Year,\n          country: item.Area,\n          product: item.Item,\n          element: item.Element\n        }))\n      \n      case 'geographic':\n        return filteredData.value.reduce((acc, item) => {\n          const country = item.Area\n          if (!acc[country]) {\n            acc[country] = {\n              country,\n              total: 0,\n              items: []\n            }\n          }\n          acc[country].total += parseFloat(item.Value) || 0\n          acc[country].items.push(item)\n          return acc\n        }, {})\n      \n      case 'comparative':\n        return availableProducts.value.map(product => {\n          const productData = dataByProduct.value[product] || []\n          const total = productData.reduce((sum, item) => sum + (parseFloat(item.Value) || 0), 0)\n          return {\n            product,\n            value: total,\n            count: productData.length\n          }\n        })\n      \n      default:\n        return filteredData.value\n    }\n  }\n\n  const getDataForProduct = (product) => {\n    return dataByProduct.value[product] || []\n  }\n\n  const getDataForRegion = (region) => {\n    return dataByRegion.value[region] || []\n  }\n\n  const getTrendData = (product, region = null) => {\n    let data = getDataForProduct(product)\n    \n    if (region) {\n      data = data.filter(item => item.Area === region)\n    }\n    \n    return data\n      .sort((a, b) => a.Year - b.Year)\n      .map(item => ({\n        year: item.Year,\n        value: parseFloat(item.Value) || 0\n      }))\n  }\n\n  // Get data for a specific product from timeseries\n  const getTimeseriesDataForProduct = (product, year = null) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return null\n    }\n    \n    const productData = timeseriesData.value[product]\n    \n    if (year) {\n      // Return data for specific year across all countries\n      const yearData = {}\n      Object.entries(productData).forEach(([country, countryData]) => {\n        const yearEntry = countryData.find(entry => entry.year === year)\n        if (yearEntry) {\n          yearData[country] = yearEntry\n        }\n      })\n      return yearData\n    }\n    \n    return productData\n  }\n\n  // Get available countries for a specific product\n  const getAvailableCountriesForProduct = (product) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return []\n    }\n    \n    return Object.keys(timeseriesData.value[product]).sort()\n  }\n\n  // Get available years for a specific product\n  const getAvailableYearsForProduct = (product) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return []\n    }\n    \n    const yearsSet = new Set()\n    Object.values(timeseriesData.value[product]).forEach(countryData => {\n      countryData.forEach(entry => yearsSet.add(entry.year))\n    })\n    \n    return Array.from(yearsSet).sort((a, b) => a - b)\n  }\n\n  const syncCurrentData = (data) => {\n    currentData.value = data\n    lastUpdated.value = new Date()\n  }\n\n  // Check if specific data is loading\n  const isLoadingData = (key) => {\n    return loadingStates.value.get(key) || false\n  }\n\n  // Watchers for reactive updates\n  watch([selectedProduct, selectedRegion], () => {\n    if (isDataLoaded.value) {\n      // Trigger data refresh when selection changes\n      console.log('Selection changed, refreshing data')\n    }\n  })\n\n  return {\n    // State\n    geoData,\n    productionData,\n    forecastData,\n    timeseriesData,\n    networkData,\n    summaryData,\n    dataIndex,\n    faoMetadata,\n    loading,\n    errors,\n    \n    // ML state\n    mlIndex,\n    mlComprehensiveIndex,\n    mlGlobalIndex,\n    mlRegionalIndex,\n    mlCountryIndex,\n    \n    // Enhanced state\n    selectedProduct,\n    selectedRegion,\n    selectedYears,\n    dataFilters,\n    currentData,\n    lastUpdated,\n\n    // Computed\n    isLoading,\n    hasGeoData,\n    hasData,\n    isDataLoaded,\n    filteredData,\n    dataByProduct,\n    dataByRegion,\n    availableProducts,\n    availableRegions,\n    availableYears,\n    dataStats,\n\n    // Actions\n    loadDataIndex,\n    loadFAOMetadata,\n    loadGeoData,\n    loadProductionData,\n    loadForecastData,\n    loadMLForecast,\n    loadTimeseriesData,\n    loadNetworkData,\n    loadSummaryData,\n    initializeApp,\n    getProductionData,\n    getForecastData,\n    clearCache,\n    getError,\n    isLoadingData,\n    \n    // ML actions\n    loadMLIndex,\n    loadMLComprehensiveIndex,\n    loadMLGlobalIndex,\n    loadMLRegionalIndex,\n    loadMLCountryIndex,\n    getAvailableMLForecasts,\n    \n    // Enhanced actions\n    setSelectedProduct,\n    setSelectedRegion,\n    setSelectedYears,\n    setDataFilters,\n    addCountryFilter,\n    removeCountryFilter,\n    clearFilters,\n    transformDataForVisualization,\n    getDataForProduct,\n    getDataForRegion,\n    getTrendData,\n    getTimeseriesDataForProduct,\n    getAvailableCountriesForProduct,\n    getAvailableYearsForProduct,\n    syncCurrentData\n  }\n})","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\n\nexport const useUIStore = defineStore('ui', () => {\n  // Enhanced state for Phase 5\n  const theme = ref('light')\n  const sidebarOpen = ref(false)\n  const currentPanel = ref('dashboard')\n  const activePanel = ref('dashboard')\n  const selectedCountry = ref('')\n  const selectedProduct = ref('Wheat and products')\n  const selectedMetric = ref('production')\n  const selectedYear = ref(2022)\n  const showAnalysisMenu = ref(false)\n  const mapZoom = ref(1)\n  const mapCenter = ref([0, 0])\n  const darkMode = ref(false)\n  const notifications = ref([])\n  const loadingMessages = ref([])\n  \n  // Enhanced UI state\n  const loading = ref(false)\n  const modals = ref({})\n  const tooltips = ref({})\n  const currentView = ref('overview')\n  const layoutMode = ref('default')\n  const compactMode = ref(false)\n  const showDebugInfo = ref(false)\n  \n  // Navigation state\n  const navigationHistory = ref([])\n  const currentRoute = ref('/')\n  const breadcrumbs = ref([])\n  \n  // Enhanced panel states\n  const panelStates = ref({\n    dashboard: { visible: true, minimized: false, expanded: true, loading: false, error: null },\n    timeseries: { visible: false, minimized: false, expanded: true, loading: false, error: null },\n    simulation: { visible: false, minimized: false, expanded: false, loading: false, error: null },\n    ml: { visible: false, minimized: false, expanded: false, loading: false, error: null },\n    structural: { visible: false, minimized: false, expanded: false, loading: false, error: null },\n    process: { visible: false, minimized: false, expanded: false, loading: false, error: null }\n  })\n  \n  // UI preferences\n  const preferences = ref({\n    language: 'de',\n    dateFormat: 'DD.MM.YYYY',\n    numberFormat: 'de-DE',\n    currency: 'EUR',\n    timezone: 'Europe/Berlin',\n    animationsEnabled: true,\n    soundEnabled: false,\n    highContrast: false,\n    reducedMotion: false\n  })\n  \n  // Responsive breakpoints\n  const breakpoints = ref({\n    xs: 480,\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    xxl: 1536\n  })\n  \n  const viewport = ref({\n    width: typeof window !== 'undefined' ? window.innerWidth : 1024,\n    height: typeof window !== 'undefined' ? window.innerHeight : 768,\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true\n  })\n\n  // Enhanced computed properties for Phase 5\n  const getCurrentPanel = computed(() => currentPanel.value)\n  const getSelectedFilters = computed(() => ({\n    country: selectedCountry.value,\n    product: selectedProduct.value,\n    metric: selectedMetric.value,\n    year: selectedYear.value\n  }))\n  \n  const isDarkMode = computed(() => theme.value === 'dark' || darkMode.value)\n  const isMobile = computed(() => viewport.value.width < breakpoints.value.md)\n  const isTablet = computed(() => \n    viewport.value.width >= breakpoints.value.md && \n    viewport.value.width < breakpoints.value.lg\n  )\n  const isDesktop = computed(() => viewport.value.width >= breakpoints.value.lg)\n  \n  const availablePanels = computed(() => Object.keys(panelStates.value))\n  const visiblePanels = computed(() => \n    Object.entries(panelStates.value)\n      .filter(([_, state]) => state.visible)\n      .map(([panel]) => panel)\n  )\n  const expandedPanels = computed(() => \n    Object.entries(panelStates.value)\n      .filter(([_, state]) => state.expanded)\n      .map(([panel]) => panel)\n  )\n  \n  const isPanelVisible = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.visible || false\n  })\n  const isPanelMinimized = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.minimized || false\n  })\n  const isPanelExpanded = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.expanded || false\n  })\n  const isPanelLoading = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.loading || false\n  })\n  const getPanelError = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.error || null\n  })\n  \n  const hasNotifications = computed(() => notifications.value.length > 0)\n  const unreadNotifications = computed(() => \n    notifications.value.filter(n => !n.read).length\n  )\n  const isLoading = computed(() => \n    loading.value || \n    loadingMessages.value.length > 0 || \n    Object.values(panelStates.value).some(state => state.loading)\n  )\n  const hasErrors = computed(() => \n    Object.values(panelStates.value).some(state => state.error)\n  )\n\n  // Actions\n  const toggleSidebar = () => {\n    sidebarOpen.value = !sidebarOpen.value\n  }\n\n  const setSidebarOpen = (open) => {\n    sidebarOpen.value = open\n  }\n\n  const setCurrentPanel = (panel) => {\n    currentPanel.value = panel\n    // Show the selected panel\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].visible = true\n      panelStates.value[panel].minimized = false\n    }\n  }\n\n  const toggleAnalysisMenu = () => {\n    showAnalysisMenu.value = !showAnalysisMenu.value\n  }\n\n  const setSelectedCountry = (country) => {\n    selectedCountry.value = country\n  }\n\n  const setSelectedProduct = (product) => {\n    selectedProduct.value = product\n  }\n\n  const setSelectedMetric = (metric) => {\n    selectedMetric.value = metric\n  }\n\n  const setSelectedYear = (year) => {\n    selectedYear.value = year\n  }\n\n  const setMapView = (zoom, center) => {\n    mapZoom.value = zoom\n    mapCenter.value = center\n  }\n\n  const toggleDarkMode = () => {\n    darkMode.value = !darkMode.value\n    // Apply dark mode class to document\n    if (darkMode.value) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }\n\n  const showPanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = true\n      panelStates.value[panelName].minimized = false\n      currentPanel.value = panelName\n    }\n  }\n\n  const hidePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = false\n    }\n  }\n\n  const togglePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = !panelStates.value[panelName].visible\n    }\n  }\n\n  const minimizePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].minimized = true\n    }\n  }\n\n  const maximizePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].minimized = false\n    }\n  }\n\n  const addNotification = (notification) => {\n    const id = Date.now() + Math.random()\n    const notif = {\n      id,\n      type: 'info',\n      duration: 5000,\n      ...notification\n    }\n    notifications.value.push(notif)\n\n    // Auto-remove after duration\n    if (notif.duration > 0) {\n      setTimeout(() => {\n        removeNotification(id)\n      }, notif.duration)\n    }\n\n    return id\n  }\n\n  const removeNotification = (id) => {\n    const index = notifications.value.findIndex(n => n.id === id)\n    if (index > -1) {\n      notifications.value.splice(index, 1)\n    }\n  }\n\n  const clearNotifications = () => {\n    notifications.value = []\n  }\n\n  const addLoadingMessage = (message) => {\n    const id = Date.now() + Math.random()\n    loadingMessages.value.push({ id, message })\n    return id\n  }\n\n  const removeLoadingMessage = (id) => {\n    const index = loadingMessages.value.findIndex(m => m.id === id)\n    if (index > -1) {\n      loadingMessages.value.splice(index, 1)\n    }\n  }\n\n  const clearLoadingMessages = () => {\n    loadingMessages.value = []\n  }\n\n  // Batch update filters\n  const updateFilters = (filters) => {\n    if (filters.country !== undefined) selectedCountry.value = filters.country\n    if (filters.product !== undefined) selectedProduct.value = filters.product\n    if (filters.metric !== undefined) selectedMetric.value = filters.metric\n    if (filters.year !== undefined) selectedYear.value = filters.year\n  }\n\n  // Reset UI state\n  const resetUI = () => {\n    currentPanel.value = 'dashboard'\n    selectedCountry.value = ''\n    selectedProduct.value = 'Wheat and products'\n    selectedMetric.value = 'production'\n    selectedYear.value = 2022\n    showAnalysisMenu.value = false\n    mapZoom.value = 1\n    mapCenter.value = [0, 0]\n    notifications.value = []\n    loadingMessages.value = []\n    \n    // Reset panel states\n    Object.keys(panelStates.value).forEach(key => {\n      panelStates.value[key] = { visible: key === 'dashboard', minimized: false }\n    })\n  }\n\n  // Initialize UI with saved preferences\n  const initializeUI = () => {\n    // Load dark mode preference\n    const savedDarkMode = localStorage.getItem('darkMode')\n    if (savedDarkMode === 'true') {\n      darkMode.value = true\n      document.documentElement.classList.add('dark')\n    }\n\n    // Load other preferences from localStorage\n    const savedFilters = localStorage.getItem('uiFilters')\n    if (savedFilters) {\n      try {\n        const filters = JSON.parse(savedFilters)\n        updateFilters(filters)\n      } catch (error) {\n        console.warn('Failed to load UI filters from localStorage:', error)\n      }\n    }\n  }\n\n  // Save preferences to localStorage\n  const savePreferences = () => {\n    localStorage.setItem('darkMode', darkMode.value.toString())\n    localStorage.setItem('theme', theme.value)\n    localStorage.setItem('uiFilters', JSON.stringify(getSelectedFilters.value))\n    localStorage.setItem('uiPreferences', JSON.stringify(preferences.value))\n  }\n\n  // Enhanced actions for Phase 5\n  const toggleTheme = () => {\n    theme.value = theme.value === 'light' ? 'dark' : 'light'\n    darkMode.value = theme.value === 'dark'\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', isDarkMode.value)\n    }\n  }\n  \n  const setTheme = (newTheme) => {\n    theme.value = newTheme\n    darkMode.value = newTheme === 'dark'\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', isDarkMode.value)\n    }\n  }\n  \n  const setActivePanel = (panel) => {\n    if (availablePanels.value.includes(panel)) {\n      activePanel.value = panel\n      currentPanel.value = panel\n      // Add to navigation history\n      navigationHistory.value.push({\n        panel,\n        timestamp: new Date(),\n        path: currentRoute.value\n      })\n      \n      // Limit history size\n      if (navigationHistory.value.length > 50) {\n        navigationHistory.value = navigationHistory.value.slice(-50)\n      }\n    }\n  }\n  \n  const expandPanel = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].expanded = true\n    }\n  }\n  \n  const collapsePanel = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].expanded = false\n    }\n  }\n  \n  const setPanelLoading = (panel, isLoading) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].loading = isLoading\n    }\n  }\n  \n  const setPanelError = (panel, error) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].error = error\n    }\n  }\n  \n  const clearPanelError = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].error = null\n    }\n  }\n  \n  const openModal = (modalId, config = {}) => {\n    modals.value[modalId] = {\n      open: true,\n      config,\n      timestamp: new Date()\n    }\n  }\n  \n  const closeModal = (modalId) => {\n    if (modals.value[modalId]) {\n      modals.value[modalId].open = false\n    }\n  }\n  \n  const isModalOpen = (modalId) => {\n    return modals.value[modalId]?.open || false\n  }\n  \n  const showTooltip = (tooltipId, config) => {\n    tooltips.value[tooltipId] = {\n      visible: true,\n      config,\n      timestamp: new Date()\n    }\n  }\n  \n  const hideTooltip = (tooltipId) => {\n    if (tooltips.value[tooltipId]) {\n      tooltips.value[tooltipId].visible = false\n    }\n  }\n  \n  const setCurrentView = (view) => {\n    currentView.value = view\n  }\n  \n  const setLayoutMode = (mode) => {\n    layoutMode.value = mode\n  }\n  \n  const setCompactMode = (isCompact) => {\n    compactMode.value = isCompact\n  }\n  \n  const updateViewport = () => {\n    if (typeof window !== 'undefined') {\n      viewport.value = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        isMobile: window.innerWidth < breakpoints.value.md,\n        isTablet: window.innerWidth >= breakpoints.value.md && window.innerWidth < breakpoints.value.lg,\n        isDesktop: window.innerWidth >= breakpoints.value.lg\n      }\n      \n      // Auto-close sidebar on mobile\n      if (viewport.value.isMobile && sidebarOpen.value) {\n        sidebarOpen.value = false\n      }\n    }\n  }\n  \n  const setPreference = (key, value) => {\n    if (preferences.value.hasOwnProperty(key)) {\n      preferences.value[key] = value\n    }\n  }\n  \n  const updateBreadcrumbs = (crumbs) => {\n    breadcrumbs.value = crumbs\n  }\n  \n  const setGlobalLoading = (isLoading) => {\n    loading.value = isLoading\n  }\n\n  // Initialize viewport on client side\n  if (typeof window !== 'undefined') {\n    updateViewport()\n    window.addEventListener('resize', updateViewport)\n  }\n\n  return {\n    // State\n    theme,\n    sidebarOpen,\n    currentPanel,\n    activePanel,\n    selectedCountry,\n    selectedProduct,\n    selectedMetric,\n    selectedYear,\n    showAnalysisMenu,\n    mapZoom,\n    mapCenter,\n    darkMode,\n    notifications,\n    loadingMessages,\n    panelStates,\n    loading,\n    modals,\n    tooltips,\n    currentView,\n    layoutMode,\n    compactMode,\n    showDebugInfo,\n    navigationHistory,\n    currentRoute,\n    breadcrumbs,\n    preferences,\n    viewport,\n    breakpoints,\n\n    // Computed\n    getCurrentPanel,\n    getSelectedFilters,\n    isDarkMode,\n    isMobile,\n    isTablet,\n    isDesktop,\n    availablePanels,\n    visiblePanels,\n    expandedPanels,\n    isPanelVisible,\n    isPanelMinimized,\n    isPanelExpanded,\n    isPanelLoading,\n    getPanelError,\n    hasNotifications,\n    unreadNotifications,\n    isLoading,\n    hasErrors,\n\n    // Actions\n    toggleSidebar,\n    setSidebarOpen,\n    setCurrentPanel,\n    setActivePanel,\n    toggleAnalysisMenu,\n    setSelectedCountry,\n    setSelectedProduct,\n    setSelectedMetric,\n    setSelectedYear,\n    setMapView,\n    toggleDarkMode,\n    toggleTheme,\n    setTheme,\n    showPanel,\n    hidePanel,\n    togglePanel,\n    minimizePanel,\n    maximizePanel,\n    expandPanel,\n    collapsePanel,\n    setPanelLoading,\n    setPanelError,\n    clearPanelError,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n    addLoadingMessage,\n    removeLoadingMessage,\n    clearLoadingMessages,\n    updateFilters,\n    resetUI,\n    initializeUI,\n    savePreferences,\n    openModal,\n    closeModal,\n    isModalOpen,\n    showTooltip,\n    hideTooltip,\n    setCurrentView,\n    setLayoutMode,\n    setCompactMode,\n    updateViewport,\n    setPreference,\n    updateBreadcrumbs,\n    setGlobalLoading\n  }\n})","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\n\nexport const useVisualizationStore = defineStore('visualization', () => {\n  // Enhanced state for Phase 5\n  const mapInstance = ref(null)\n  const chartInstances = ref(new Map())\n  const activeVisualizations = ref(new Set())\n  const visualizationStates = ref(new Map())\n  const interactionHistory = ref([])\n  const selectedElements = ref(new Map())\n  const filters = ref(new Map())\n  const brushSelections = ref(new Map())\n  const zoomStates = ref(new Map())\n  \n  const visualizationConfigs = ref({\n    worldMap: {\n      width: 800,\n      height: 500,\n      projection: 'geoNaturalEarth1',\n      colorScheme: 'viridis',\n      showLegend: true,\n      showTooltips: true\n    },\n    timeseries: {\n      width: 600,\n      height: 400,\n      margin: { top: 20, right: 30, bottom: 40, left: 40 },\n      lineColor: '#3b82f6',\n      showPoints: true,\n      showGrid: true\n    },\n    barChart: {\n      width: 500,\n      height: 300,\n      margin: { top: 20, right: 30, bottom: 40, left: 60 },\n      colorScheme: 'category10',\n      orientation: 'vertical'\n    },\n    scatterPlot: {\n      width: 500,\n      height: 400,\n      margin: { top: 20, right: 30, bottom: 40, left: 40 },\n      pointSize: 4,\n      pointOpacity: 0.7\n    },\n    networkGraph: {\n      width: 700,\n      height: 500,\n      linkDistance: 100,\n      nodeRadius: 8,\n      charge: -300,\n      showLabels: true\n    },\n    ml: {\n      width: 800,\n      height: 500,\n      margin: { top: 20, right: 120, bottom: 40, left: 60 },\n      historicalColor: '#3b82f6',\n      predictionColor: '#ef4444',\n      confidenceColor: '#f59e0b'\n    },\n    simulation: {\n      width: 800,\n      height: 500,\n      margin: { top: 20, right: 30, bottom: 40, left: 60 },\n      baselineColor: '#6b7280',\n      scenarioColor: '#ef4444'\n    },\n    structural: {\n      width: 800,\n      height: 600,\n      margin: { top: 20, right: 20, bottom: 20, left: 20 },\n      nodeColor: '#3b82f6',\n      linkColor: '#6b7280',\n      highlightColor: '#ef4444'\n    },\n    process: {\n      width: 800,\n      height: 500,\n      margin: { top: 40, right: 40, bottom: 40, left: 40 },\n      primaryColor: '#3b82f6',\n      secondaryColor: '#10b981',\n      accentColor: '#f59e0b'\n    }\n  })\n\n  // Animation settings\n  const animationSettings = ref({\n    duration: 750,\n    ease: 'd3.easeQuadInOut',\n    enabled: true\n  })\n\n  // Enhanced color scales and themes for Phase 5\n  const colorSchemes = ref({\n    production: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    forecast: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    trade: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    regions: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'],\n    analysis: ['#3b82f6', '#ef4444', '#f59e0b', '#10b981', '#8b5cf6', '#f97316', '#06b6d4', '#84cc16'],\n    simulation: ['#6b7280', '#ef4444', '#f59e0b', '#10b981'],\n    structural: ['#3b82f6', '#6b7280', '#ef4444', '#10b981'],\n    process: ['#3b82f6', '#10b981', '#f59e0b', '#ef4444'],\n    ml: ['#3b82f6', '#ef4444', '#f59e0b']\n  })\n\n  // Data transformation cache\n  const transformationCache = ref(new Map())\n  const updateQueue = ref([])\n  const isUpdating = ref(false)\n\n  // Enhanced computed properties for Phase 5\n  const getVisualizationConfig = computed(() => (type) => {\n    return visualizationConfigs.value[type] || {}\n  })\n\n  const getColorScheme = computed(() => (type) => {\n    return colorSchemes.value[type] || colorSchemes.value.production\n  })\n\n  const isAnimationEnabled = computed(() => animationSettings.value.enabled)\n  \n  const getVisualizationState = computed(() => (vizId) => {\n    return visualizationStates.value.get(vizId) || {\n      initialized: false,\n      data: null,\n      error: null,\n      lastUpdate: null\n    }\n  })\n  \n  const getSelectedElements = computed(() => (vizId) => {\n    return selectedElements.value.get(vizId) || []\n  })\n  \n  const getFilters = computed(() => (vizId) => {\n    return filters.value.get(vizId) || {}\n  })\n  \n  const getBrushSelection = computed(() => (vizId) => {\n    return brushSelections.value.get(vizId) || null\n  })\n  \n  const getZoomState = computed(() => (vizId) => {\n    return zoomStates.value.get(vizId) || { k: 1, x: 0, y: 0 }\n  })\n  \n  const isVisualizationActive = computed(() => (vizId) => {\n    return activeVisualizations.value.has(vizId)\n  })\n  \n  const hasActiveFilters = computed(() => (vizId) => {\n    const vizFilters = filters.value.get(vizId) || {}\n    return Object.keys(vizFilters).length > 0\n  })\n  \n  const getInteractionHistory = computed(() => {\n    return interactionHistory.value.slice(-100) // Keep last 100 interactions\n  })\n\n  // Actions\n  const setMapInstance = (instance) => {\n    mapInstance.value = instance\n  }\n\n  const getMapInstance = () => {\n    return mapInstance.value\n  }\n\n  const setChartInstance = (chartId, instance) => {\n    chartInstances.value.set(chartId, instance)\n  }\n\n  const getChartInstance = (chartId) => {\n    return chartInstances.value.get(chartId)\n  }\n\n  const removeChartInstance = (chartId) => {\n    const instance = chartInstances.value.get(chartId)\n    if (instance && typeof instance.destroy === 'function') {\n      instance.destroy()\n    }\n    chartInstances.value.delete(chartId)\n  }\n\n  const updateVisualizationConfig = (type, config) => {\n    if (visualizationConfigs.value[type]) {\n      visualizationConfigs.value[type] = {\n        ...visualizationConfigs.value[type],\n        ...config\n      }\n    }\n  }\n\n  const setAnimationSettings = (settings) => {\n    animationSettings.value = {\n      ...animationSettings.value,\n      ...settings\n    }\n  }\n\n  const toggleAnimation = () => {\n    animationSettings.value.enabled = !animationSettings.value.enabled\n  }\n\n  // Map-specific actions\n  const updateMapConfig = (config) => {\n    updateVisualizationConfig('worldMap', config)\n  }\n\n  const setMapProjection = (projection) => {\n    updateVisualizationConfig('worldMap', { projection })\n  }\n\n  const setMapColorScheme = (colorScheme) => {\n    updateVisualizationConfig('worldMap', { colorScheme })\n  }\n\n  const setMapDimensions = (width, height) => {\n    updateVisualizationConfig('worldMap', { width, height })\n  }\n\n  // Chart-specific actions\n  const updateChartConfig = (chartType, config) => {\n    updateVisualizationConfig(chartType, config)\n  }\n\n  const setChartDimensions = (chartType, width, height) => {\n    updateVisualizationConfig(chartType, { width, height })\n  }\n\n  const setChartMargin = (chartType, margin) => {\n    updateVisualizationConfig(chartType, { margin })\n  }\n\n  // Utility actions\n  const getResponsiveDimensions = (containerEl, aspectRatio = 1.6) => {\n    if (!containerEl) return { width: 800, height: 500 }\n    \n    const containerWidth = containerEl.clientWidth\n    const width = Math.max(300, containerWidth - 40) // Min width with padding\n    const height = Math.max(200, width / aspectRatio) // Maintain aspect ratio\n    \n    return { width, height }\n  }\n\n  const updateResponsiveConfig = (chartType, containerEl, aspectRatio) => {\n    const { width, height } = getResponsiveDimensions(containerEl, aspectRatio)\n    setChartDimensions(chartType, width, height)\n    return { width, height }\n  }\n\n  // D3 utility functions\n  const createColorScale = (domain, schemeType = 'production') => {\n    const colors = getColorScheme.value(schemeType)\n    const scale = d3.scaleQuantize()\n      .domain(domain)\n      .range(colors)\n    return scale\n  }\n\n  const createLinearScale = (domain, range) => {\n    return d3.scaleLinear()\n      .domain(domain)\n      .range(range)\n  }\n\n  const createTimeScale = (domain, range) => {\n    return d3.scaleTime()\n      .domain(domain)\n      .range(range)\n  }\n\n  const formatValue = (value, type = 'number') => {\n    if (value === null || value === undefined) return 'N/A'\n    \n    switch (type) {\n      case 'number':\n        return d3.format(',.0f')(value)\n      case 'percentage':\n        return d3.format('.1%')(value)\n      case 'currency':\n        return d3.format('$,.0f')(value)\n      case 'compact':\n        return d3.format('.2s')(value)\n      default:\n        return value.toString()\n    }\n  }\n\n  // Export/Save functionality\n  const exportVisualization = (chartId, format = 'png') => {\n    const instance = getChartInstance(chartId)\n    if (!instance) return null\n\n    const svgElement = instance.node ? instance.node() : instance\n    if (!svgElement) return null\n\n    switch (format) {\n      case 'png':\n        return exportToPNG(svgElement)\n      case 'svg':\n        return exportToSVG(svgElement)\n      case 'pdf':\n        return exportToPDF(svgElement)\n      default:\n        return null\n    }\n  }\n\n  const exportToPNG = (svgElement) => {\n    // Implementation for PNG export\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    const data = new XMLSerializer().serializeToString(svgElement)\n    const img = new Image()\n    \n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        canvas.width = img.width\n        canvas.height = img.height\n        ctx.drawImage(img, 0, 0)\n        resolve(canvas.toDataURL('image/png'))\n      }\n      img.onerror = reject\n      img.src = 'data:image/svg+xml;base64,' + btoa(data)\n    })\n  }\n\n  const exportToSVG = (svgElement) => {\n    const serializer = new XMLSerializer()\n    const svgString = serializer.serializeToString(svgElement)\n    return 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgString)\n  }\n\n  // Cleanup function\n  const cleanup = () => {\n    // Clean up all chart instances\n    chartInstances.value.forEach((instance, chartId) => {\n      removeChartInstance(chartId)\n    })\n    \n    // Reset map instance\n    mapInstance.value = null\n  }\n\n  // Reset to defaults\n  // Enhanced actions for Phase 5\n  const setVisualizationState = (vizId, state) => {\n    visualizationStates.value.set(vizId, {\n      ...getVisualizationState.value(vizId),\n      ...state,\n      lastUpdate: new Date()\n    })\n  }\n  \n  const activateVisualization = (vizId) => {\n    activeVisualizations.value.add(vizId)\n  }\n  \n  const deactivateVisualization = (vizId) => {\n    activeVisualizations.value.delete(vizId)\n  }\n  \n  const setSelectedElements = (vizId, elements) => {\n    selectedElements.value.set(vizId, elements)\n    recordInteraction(vizId, 'selection', { elements })\n  }\n  \n  const addSelectedElement = (vizId, element) => {\n    const current = getSelectedElements.value(vizId)\n    setSelectedElements(vizId, [...current, element])\n  }\n  \n  const removeSelectedElement = (vizId, element) => {\n    const current = getSelectedElements.value(vizId)\n    setSelectedElements(vizId, current.filter(el => el !== element))\n  }\n  \n  const clearSelection = (vizId) => {\n    selectedElements.value.set(vizId, [])\n    recordInteraction(vizId, 'clear_selection')\n  }\n  \n  const setFilter = (vizId, filterKey, filterValue) => {\n    const currentFilters = getFilters.value(vizId)\n    filters.value.set(vizId, {\n      ...currentFilters,\n      [filterKey]: filterValue\n    })\n    recordInteraction(vizId, 'filter', { key: filterKey, value: filterValue })\n  }\n  \n  const removeFilter = (vizId, filterKey) => {\n    const currentFilters = getFilters.value(vizId)\n    const { [filterKey]: removed, ...remaining } = currentFilters\n    filters.value.set(vizId, remaining)\n    recordInteraction(vizId, 'remove_filter', { key: filterKey })\n  }\n  \n  const clearFilters = (vizId) => {\n    filters.value.set(vizId, {})\n    recordInteraction(vizId, 'clear_filters')\n  }\n  \n  const setBrushSelection = (vizId, selection) => {\n    brushSelections.value.set(vizId, selection)\n    recordInteraction(vizId, 'brush', { selection })\n  }\n  \n  const setZoomState = (vizId, zoomState) => {\n    zoomStates.value.set(vizId, zoomState)\n    recordInteraction(vizId, 'zoom', { state: zoomState })\n  }\n  \n  const recordInteraction = (vizId, type, data = {}) => {\n    interactionHistory.value.push({\n      id: Date.now() + Math.random(),\n      vizId,\n      type,\n      data,\n      timestamp: new Date()\n    })\n    \n    // Keep only last 100 interactions\n    if (interactionHistory.value.length > 100) {\n      interactionHistory.value = interactionHistory.value.slice(-100)\n    }\n  }\n  \n  const queueUpdate = (vizId, updateFn, priority = 'normal') => {\n    updateQueue.value.push({\n      vizId,\n      updateFn,\n      priority,\n      timestamp: Date.now()\n    })\n    \n    processUpdateQueue()\n  }\n  \n  const processUpdateQueue = async () => {\n    if (isUpdating.value || updateQueue.value.length === 0) return\n    \n    isUpdating.value = true\n    \n    // Sort by priority: high, normal, low\n    updateQueue.value.sort((a, b) => {\n      const priorityOrder = { high: 0, normal: 1, low: 2 }\n      return priorityOrder[a.priority] - priorityOrder[b.priority]\n    })\n    \n    while (updateQueue.value.length > 0) {\n      const update = updateQueue.value.shift()\n      try {\n        await update.updateFn()\n      } catch (error) {\n        console.error('Visualization update error:', error)\n        setVisualizationState(update.vizId, { error: error.message })\n      }\n    }\n    \n    isUpdating.value = false\n  }\n  \n  const cacheTransformation = (key, data) => {\n    transformationCache.value.set(key, {\n      data,\n      timestamp: Date.now()\n    })\n    \n    // Limit cache size\n    if (transformationCache.value.size > 100) {\n      const entries = Array.from(transformationCache.value.entries())\n      entries.sort((a, b) => a[1].timestamp - b[1].timestamp)\n      const toRemove = entries.slice(0, 20)\n      toRemove.forEach(([key]) => transformationCache.value.delete(key))\n    }\n  }\n  \n  const getCachedTransformation = (key) => {\n    const cached = transformationCache.value.get(key)\n    if (cached && Date.now() - cached.timestamp < 300000) { // 5 minutes\n      return cached.data\n    }\n    return null\n  }\n  \n  const clearCache = () => {\n    transformationCache.value.clear()\n  }\n\n  const resetToDefaults = () => {\n    cleanup()\n    \n    // Reset enhanced state\n    activeVisualizations.value.clear()\n    visualizationStates.value.clear()\n    selectedElements.value.clear()\n    filters.value.clear()\n    brushSelections.value.clear()\n    zoomStates.value.clear()\n    interactionHistory.value = []\n    transformationCache.value.clear()\n    updateQueue.value = []\n    \n    visualizationConfigs.value = {\n      worldMap: {\n        width: 800,\n        height: 500,\n        projection: 'geoNaturalEarth1',\n        colorScheme: 'viridis',\n        showLegend: true,\n        showTooltips: true\n      },\n      timeseries: {\n        width: 600,\n        height: 400,\n        margin: { top: 20, right: 30, bottom: 40, left: 40 },\n        lineColor: '#3b82f6',\n        showPoints: true,\n        showGrid: true\n      },\n      barChart: {\n        width: 500,\n        height: 300,\n        margin: { top: 20, right: 30, bottom: 40, left: 60 },\n        colorScheme: 'category10',\n        orientation: 'vertical'\n      },\n      scatterPlot: {\n        width: 500,\n        height: 400,\n        margin: { top: 20, right: 30, bottom: 40, left: 40 },\n        pointSize: 4,\n        pointOpacity: 0.7\n      },\n      networkGraph: {\n        width: 700,\n        height: 500,\n        linkDistance: 100,\n        nodeRadius: 8,\n        charge: -300,\n        showLabels: true\n      },\n      ml: {\n        width: 800,\n        height: 500,\n        margin: { top: 20, right: 120, bottom: 40, left: 60 },\n        historicalColor: '#3b82f6',\n        predictionColor: '#ef4444',\n        confidenceColor: '#f59e0b'\n      },\n      simulation: {\n        width: 800,\n        height: 500,\n        margin: { top: 20, right: 30, bottom: 40, left: 60 },\n        baselineColor: '#6b7280',\n        scenarioColor: '#ef4444'\n      },\n      structural: {\n        width: 800,\n        height: 600,\n        margin: { top: 20, right: 20, bottom: 20, left: 20 },\n        nodeColor: '#3b82f6',\n        linkColor: '#6b7280',\n        highlightColor: '#ef4444'\n      },\n      process: {\n        width: 800,\n        height: 500,\n        margin: { top: 40, right: 40, bottom: 40, left: 40 },\n        primaryColor: '#3b82f6',\n        secondaryColor: '#10b981',\n        accentColor: '#f59e0b'\n      }\n    }\n\n    animationSettings.value = {\n      duration: 750,\n      ease: 'd3.easeQuadInOut',\n      enabled: true\n    }\n  }\n\n  return {\n    // State\n    mapInstance,\n    chartInstances,\n    visualizationConfigs,\n    animationSettings,\n    colorSchemes,\n    activeVisualizations,\n    visualizationStates,\n    selectedElements,\n    filters,\n    brushSelections,\n    zoomStates,\n    interactionHistory,\n    transformationCache,\n    updateQueue,\n    isUpdating,\n\n    // Computed\n    getVisualizationConfig,\n    getColorScheme,\n    isAnimationEnabled,\n    getVisualizationState,\n    getSelectedElements,\n    getFilters,\n    getBrushSelection,\n    getZoomState,\n    isVisualizationActive,\n    hasActiveFilters,\n    getInteractionHistory,\n\n    // Actions\n    setMapInstance,\n    getMapInstance,\n    setChartInstance,\n    getChartInstance,\n    removeChartInstance,\n    updateVisualizationConfig,\n    setAnimationSettings,\n    toggleAnimation,\n    updateMapConfig,\n    setMapProjection,\n    setMapColorScheme,\n    setMapDimensions,\n    updateChartConfig,\n    setChartDimensions,\n    setChartMargin,\n    getResponsiveDimensions,\n    updateResponsiveConfig,\n    createColorScale,\n    createLinearScale,\n    createTimeScale,\n    formatValue,\n    exportVisualization,\n    exportToPNG,\n    exportToSVG,\n    cleanup,\n    resetToDefaults,\n    \n    // Enhanced actions\n    setVisualizationState,\n    activateVisualization,\n    deactivateVisualization,\n    setSelectedElements,\n    addSelectedElement,\n    removeSelectedElement,\n    clearSelection,\n    setFilter,\n    removeFilter,\n    clearFilters,\n    setBrushSelection,\n    setZoomState,\n    recordInteraction,\n    queueUpdate,\n    processUpdateQueue,\n    cacheTransformation,\n    getCachedTransformation,\n    clearCache\n  }\n})"],"names":["countryCodeSchema","z.string","length","yearSchema","z.number","int","min","max","positiveNumberSchema","positive","percentageSchema","latitudeSchema","longitudeSchema","z.object","type","z.literal","coordinates","z.tuple","geoFeatureSchema","properties","z.record","z.any","geometry","z.enum","geoJsonSchema","features","z.array","area_code","area","item_code","item","element_code","element","year","unit","value","nullable","flag","optional","timeseriesYearDataSchema","production","imports","exports","domestic_supply","feed","food","other_uses","processing","seed","stock_variation","total_supply","timeseriesItemSchema","country","data","faoTimeseriesSchema","country_code","area_harvested","yield","region","predicted_value","confidence_interval","lower","upper","model_accuracy","last_updated","datetime","query","filters","countries","items","years","start","end","refine","message","format","data_type","theme","default","language","default_view","chart_settings","animation_duration","show_tooltips","z.boolean","show_legend","color_scheme","data_settings","cache_duration","auto_refresh","download_quality","success","error","code","details","metadata","timestamp","version","total_records","page","limit","validateAsync","async","schema","parseAsync","errors","dataService","constructor","this","cache","Map","baseUrl","validationEnabled","loadData","url","cacheKey","options","key","validateResponse","throwOnValidationError","has","get","response","fetch","ok","Error","status","json","validation","_validation","valid","Date","toISOString","map","e","join","set","validateCachedData","setValidationEnabled","enabled","loadDataIndex","loadFAOIndex","loadFAOMetadata","loadGeoData","geoFiles","world","world_simplified","geo","loadProductionData","product","loadMLForecast","forecastKey","cleanKey","replace","loadTimeseriesData","loadProductionRankings","loadTradeBalance","loadNetworkData","loadSummaryData","loadMLIndex","loadMLComprehensiveIndex","loadMLGlobalIndex","loadMLRegionalIndex","loadMLCountryIndex","getAvailableProducts","products","getAvailableYears","clearCache","clear","getCacheStats","size","keys","Array","from","useDataStore","defineStore","geoData","ref","productionData","forecastData","timeseriesData","networkData","summaryData","dataIndex","faoMetadata","mlIndex","mlComprehensiveIndex","mlGlobalIndex","mlRegionalIndex","mlCountryIndex","selectedProduct","selectedRegion","selectedYears","dataFilters","elements","currentData","lastUpdated","loading","loadingStates","isLoading","computed","hasGeoData","hasData","Object","isDataLoaded","filteredData","filter","Year","includes","Area","Element","Item","dataByProduct","grouped","forEach","push","dataByRegion","availableProducts","sort","_b","_a","data_summary","food_items","indexProducts","_c","currentProducts","Set","availableRegions","availableYears","indexYears","currentYears","dataStats","values","parseFloat","Value","val","isNaN","sum","reduce","acc","avg","Math","count","average","median","a","b","floor","setLoading","some","Boolean","setError","delete","loadForecastData","transformedData","isArray","entry","yearData","getDataForProduct","watch","initializeApp","getProductionData","getForecastData","getError","isLoadingData","getAvailableMLForecasts","forecasts","_d","forecast_categories","setSelectedProduct","setSelectedRegion","setSelectedYears","setDataFilters","addCountryFilter","removeCountryFilter","index","indexOf","splice","clearFilters","transformDataForVisualization","date","total","productData","getDataForRegion","getTrendData","getTimeseriesDataForProduct","entries","countryData","yearEntry","find","getAvailableCountriesForProduct","getAvailableYearsForProduct","yearsSet","add","syncCurrentData","useUIStore","sidebarOpen","currentPanel","activePanel","selectedCountry","selectedMetric","selectedYear","showAnalysisMenu","mapZoom","mapCenter","darkMode","notifications","loadingMessages","modals","tooltips","currentView","layoutMode","compactMode","showDebugInfo","navigationHistory","currentRoute","breadcrumbs","panelStates","dashboard","visible","minimized","expanded","timeseries","simulation","ml","structural","process","preferences","dateFormat","numberFormat","currency","timezone","animationsEnabled","soundEnabled","highContrast","reducedMotion","breakpoints","xs","sm","md","lg","xl","xxl","viewport","width","window","innerWidth","height","innerHeight","isMobile","isTablet","isDesktop","getCurrentPanel","getSelectedFilters","metric","isDarkMode","availablePanels","visiblePanels","_","state","panel","expandedPanels","isPanelVisible","panelName","isPanelMinimized","isPanelExpanded","isPanelLoading","getPanelError","hasNotifications","unreadNotifications","n","read","hasErrors","removeNotification","id","findIndex","updateFilters","updateViewport","addEventListener","toggleSidebar","setSidebarOpen","open","setCurrentPanel","setActivePanel","path","slice","toggleAnalysisMenu","setSelectedCountry","setSelectedMetric","setSelectedYear","setMapView","zoom","center","toggleDarkMode","document","documentElement","classList","remove","toggleTheme","toggle","setTheme","newTheme","showPanel","hidePanel","togglePanel","minimizePanel","maximizePanel","expandPanel","collapsePanel","setPanelLoading","setPanelError","clearPanelError","addNotification","notification","now","random","notif","duration","setTimeout","clearNotifications","addLoadingMessage","removeLoadingMessage","m","clearLoadingMessages","resetUI","initializeUI","localStorage","getItem","savedFilters","JSON","parse","savePreferences","setItem","toString","stringify","openModal","modalId","config","closeModal","isModalOpen","showTooltip","tooltipId","hideTooltip","setCurrentView","view","setLayoutMode","mode","setCompactMode","isCompact","setPreference","hasOwnProperty","updateBreadcrumbs","crumbs","setGlobalLoading","useVisualizationStore","mapInstance","chartInstances","activeVisualizations","visualizationStates","interactionHistory","selectedElements","brushSelections","zoomStates","visualizationConfigs","worldMap","projection","colorScheme","showLegend","showTooltips","margin","top","right","bottom","left","lineColor","showPoints","showGrid","barChart","orientation","scatterPlot","pointSize","pointOpacity","networkGraph","linkDistance","nodeRadius","charge","showLabels","historicalColor","predictionColor","confidenceColor","baselineColor","scenarioColor","nodeColor","linkColor","highlightColor","primaryColor","secondaryColor","accentColor","animationSettings","ease","colorSchemes","forecast","trade","regions","analysis","transformationCache","updateQueue","isUpdating","getVisualizationConfig","getColorScheme","isAnimationEnabled","getVisualizationState","vizId","initialized","lastUpdate","getSelectedElements","getFilters","getBrushSelection","getZoomState","k","x","y","isVisualizationActive","hasActiveFilters","vizFilters","getInteractionHistory","getChartInstance","chartId","removeChartInstance","instance","destroy","updateVisualizationConfig","setChartDimensions","chartType","getResponsiveDimensions","containerEl","aspectRatio","containerWidth","clientWidth","exportToPNG","svgElement","canvas","createElement","ctx","getContext","XMLSerializer","serializeToString","img","Image","Promise","resolve","reject","onload","drawImage","toDataURL","onerror","src","btoa","exportToSVG","svgString","encodeURIComponent","cleanup","setVisualizationState","setSelectedElements","recordInteraction","processUpdateQueue","priorityOrder","high","normal","low","priority","update","shift","updateFn","setMapInstance","getMapInstance","setChartInstance","setAnimationSettings","settings","toggleAnimation","updateMapConfig","setMapProjection","setMapColorScheme","setMapDimensions","updateChartConfig","setChartMargin","updateResponsiveConfig","createColorScale","domain","schemeType","colors","d3","scaleQuantize","range","createLinearScale","scaleLinear","createTimeScale","scaleTime","formatValue","exportVisualization","node","exportToPDF","resetToDefaults","activateVisualization","deactivateVisualization","addSelectedElement","current","removeSelectedElement","el","clearSelection","setFilter","filterKey","filterValue","currentFilters","removeFilter","removed","remaining","setBrushSelection","selection","setZoomState","zoomState","queueUpdate","cacheTransformation","getCachedTransformation","cached"],"mappings":"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"}
{"version":3,"file":"stores-D-HQzOOg.js","sources":["../../src/schemas/validation.js","../../src/utils/lazyDataLoader.js","../../src/services/dataService.js","../../src/stores/useDataStore.js","../../src/stores/useUIStore.js","../../src/tour/stores/useTourStore.js","../../src/stores/useVisualizationStore.js"],"sourcesContent":["import { z } from 'zod'\n\n// Base schemas for common data types\nexport const countryCodeSchema = z.string().length(3, 'Country code must be exactly 3 characters')\nexport const yearSchema = z.number().int().min(1960).max(2030)\nexport const positiveNumberSchema = z.number().positive('Value must be positive')\nexport const percentageSchema = z.number().min(0).max(100)\n\n// Geographic data validation\nexport const coordinateSchema = z.number().min(-180).max(180)\nexport const latitudeSchema = z.number().min(-90).max(90)\nexport const longitudeSchema = z.number().min(-180).max(180)\n\nexport const geoPointSchema = z.object({\n  type: z.literal('Point'),\n  coordinates: z.tuple([longitudeSchema, latitudeSchema])\n})\n\nexport const geoFeatureSchema = z.object({\n  type: z.literal('Feature'),\n  properties: z.record(z.any()),\n  geometry: z.object({\n    type: z.enum(['Point', 'LineString', 'Polygon', 'MultiPoint', 'MultiLineString', 'MultiPolygon']),\n    coordinates: z.any() // Complex validation depends on geometry type\n  })\n})\n\nexport const geoJsonSchema = z.object({\n  type: z.literal('FeatureCollection'),\n  features: z.array(geoFeatureSchema)\n})\n\n// FAO data validation schemas\nexport const faoDataPointSchema = z.object({\n  area_code: countryCodeSchema,\n  area: z.string().min(1, 'Area name is required'),\n  item_code: z.number().int().positive(),\n  item: z.string().min(1, 'Item name is required'),\n  element_code: z.number().int().positive(),\n  element: z.string().min(1, 'Element name is required'),\n  year: yearSchema,\n  unit: z.string().min(1, 'Unit is required'),\n  value: z.number().nullable(),\n  flag: z.string().optional()\n})\n\n// Updated timeseries schema to match actual data structure\nexport const timeseriesYearDataSchema = z.object({\n  year: yearSchema,\n  production: z.number().nullable().optional(),\n  imports: z.number().nullable().optional(),\n  exports: z.number().nullable().optional(),\n  domestic_supply: z.number().nullable().optional(),\n  feed: z.number().nullable().optional(),\n  food: z.number().nullable().optional(),\n  other_uses: z.number().nullable().optional(),\n  processing: z.number().nullable().optional(),\n  seed: z.number().nullable().optional(),\n  stock_variation: z.number().nullable().optional(),\n  total_supply: z.number().nullable().optional()\n})\n\nexport const timeseriesItemSchema = z.object({\n  country: z.string().min(1, 'Country is required'),\n  item: z.string().min(1, 'Item is required'),\n  unit: z.string().min(1, 'Unit is required'),\n  data: z.array(timeseriesYearDataSchema)\n})\n\nexport const faoTimeseriesSchema = z.array(timeseriesItemSchema)\n\n// Production data validation\nexport const productionDataSchema = z.object({\n  country: z.string().min(1, 'Country is required'),\n  country_code: countryCodeSchema,\n  item: z.string().min(1, 'Item is required'),\n  year: yearSchema,\n  production: positiveNumberSchema.nullable(),\n  area_harvested: positiveNumberSchema.nullable(),\n  yield: positiveNumberSchema.nullable()\n})\n\n// ML prediction validation\nexport const mlPredictionSchema = z.object({\n  region: z.string().min(1, 'Region is required'),\n  item: z.string().min(1, 'Item is required'),\n  year: yearSchema,\n  predicted_value: z.number(),\n  confidence_interval: z.object({\n    lower: z.number(),\n    upper: z.number()\n  }),\n  model_accuracy: percentageSchema,\n  last_updated: z.string().datetime()\n})\n\n// Form validation schemas\nexport const searchFormSchema = z.object({\n  query: z.string().min(1, 'Search query is required').max(100, 'Query too long'),\n  filters: z.object({\n    countries: z.array(countryCodeSchema).optional(),\n    items: z.array(z.string()).optional(),\n    years: z.object({\n      start: yearSchema,\n      end: yearSchema\n    }).refine(data => data.start <= data.end, {\n      message: 'Start year must be before or equal to end year'\n    }).optional()\n  }).optional()\n})\n\nexport const exportFormSchema = z.object({\n  format: z.enum(['csv', 'json', 'xlsx'], 'Invalid export format'),\n  data_type: z.enum(['production', 'trade', 'prices', 'forecast'], 'Invalid data type'),\n  filters: z.object({\n    countries: z.array(countryCodeSchema).min(1, 'At least one country must be selected'),\n    years: z.object({\n      start: yearSchema,\n      end: yearSchema\n    }).refine(data => data.start <= data.end, {\n      message: 'Start year must be before or equal to end year'\n    }),\n    items: z.array(z.string()).min(1, 'At least one item must be selected')\n  })\n})\n\n// User preferences validation\nexport const userPreferencesSchema = z.object({\n  theme: z.enum(['light', 'dark', 'auto']).default('auto'),\n  language: z.enum(['en', 'es', 'fr', 'de']).default('en'),\n  default_view: z.enum(['dashboard', 'timeseries', 'map']).default('dashboard'),\n  chart_settings: z.object({\n    animation_duration: z.number().min(0).max(5000).default(750),\n    show_tooltips: z.boolean().default(true),\n    show_legend: z.boolean().default(true),\n    color_scheme: z.enum(['default', 'colorblind', 'high_contrast']).default('default')\n  }).default({}),\n  data_settings: z.object({\n    cache_duration: z.number().min(300).max(86400).default(3600), // 5 minutes to 24 hours\n    auto_refresh: z.boolean().default(false),\n    download_quality: z.enum(['low', 'medium', 'high']).default('medium')\n  }).default({})\n})\n\n// API response validation\nexport const apiResponseSchema = z.object({\n  success: z.boolean(),\n  data: z.any().optional(),\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n    details: z.any().optional()\n  }).optional(),\n  metadata: z.object({\n    timestamp: z.string().datetime(),\n    version: z.string(),\n    total_records: z.number().int().min(0).optional(),\n    page: z.number().int().min(1).optional(),\n    limit: z.number().int().min(1).optional()\n  }).optional()\n})\n\n// Utility functions for validation\nexport const validateData = (schema, data) => {\n  try {\n    return {\n      success: true,\n      data: schema.parse(data),\n      errors: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      errors: error.errors || [{ message: error.message }]\n    }\n  }\n}\n\nexport const validateAsync = async (schema, data) => {\n  try {\n    const result = await schema.parseAsync(data)\n    return {\n      success: true,\n      data: result,\n      errors: null\n    }\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      errors: error.errors || [{ message: error.message }]\n    }\n  }\n}\n\n// Data completeness validation\nexport const validateDataCompleteness = (data, requiredFields = []) => {\n  const missing = []\n  const invalid = []\n  \n  requiredFields.forEach(field => {\n    const value = data[field]\n    if (value === undefined || value === null || value === '') {\n      missing.push(field)\n    } else if (typeof value === 'number' && (isNaN(value) || !isFinite(value))) {\n      invalid.push(field)\n    }\n  })\n  \n  return {\n    isComplete: missing.length === 0 && invalid.length === 0,\n    missing,\n    invalid,\n    completeness: ((requiredFields.length - missing.length - invalid.length) / requiredFields.length) * 100\n  }\n}\n\n// Boundary validation for numerical inputs\nexport const createBoundaryValidator = (min, max, fieldName = 'Value') => {\n  return z.number({\n    required_error: `${fieldName} is required`,\n    invalid_type_error: `${fieldName} must be a number`\n  })\n  .min(min, `${fieldName} must be at least ${min}`)\n  .max(max, `${fieldName} must be at most ${max}`)\n  .finite(`${fieldName} must be a finite number`)\n}\n\n// Custom validation for specific use cases\nexport const validateCountryData = (data) => {\n  const schema = z.object({\n    countries: z.array(z.object({\n      code: countryCodeSchema,\n      name: z.string().min(1),\n      region: z.string().min(1),\n      coordinates: z.object({\n        lat: latitudeSchema,\n        lng: longitudeSchema\n      }).optional()\n    })).min(1, 'At least one country is required')\n  })\n  \n  return validateData(schema, { countries: data })\n}\n\nexport const validateTimeRange = (startYear, endYear) => {\n  const schema = z.object({\n    start: yearSchema,\n    end: yearSchema\n  }).refine(data => data.start <= data.end, {\n    message: 'Start year must be before or equal to end year'\n  }).refine(data => data.end - data.start <= 50, {\n    message: 'Time range cannot exceed 50 years'\n  })\n  \n  return validateData(schema, { start: startYear, end: endYear })\n}","// Lazy Data Loader - Implements progressive loading for large JSON files\nimport { ref } from 'vue'\n\nclass LazyDataLoader {\n  constructor() {\n    this.cache = new Map()\n    this.loadingStates = new Map()\n    this.abortControllers = new Map()\n  }\n\n  /**\n   * Load data with chunked streaming for large files\n   * @param {string} url - URL to load\n   * @param {Object} options - Loading options\n   * @returns {Promise<any>} Loaded data\n   */\n  async loadData(url, options = {}) {\n    const {\n      onProgress = () => {},\n      chunkSize = 1024 * 1024, // 1MB chunks\n      parseAsStream = true,\n      cacheKey = url,\n      forceReload = false\n    } = options\n\n    // Check cache first\n    if (!forceReload && this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey)\n    }\n\n    // Check if already loading\n    if (this.loadingStates.has(cacheKey)) {\n      return this.loadingStates.get(cacheKey)\n    }\n\n    // Create abort controller for cancellation\n    const abortController = new AbortController()\n    this.abortControllers.set(cacheKey, abortController)\n\n    const loadPromise = this._performLoad(url, {\n      onProgress,\n      chunkSize,\n      parseAsStream,\n      signal: abortController.signal\n    })\n\n    this.loadingStates.set(cacheKey, loadPromise)\n\n    try {\n      const data = await loadPromise\n      this.cache.set(cacheKey, data)\n      return data\n    } finally {\n      this.loadingStates.delete(cacheKey)\n      this.abortControllers.delete(cacheKey)\n    }\n  }\n\n  async _performLoad(url, options) {\n    const { onProgress, chunkSize, parseAsStream, signal } = options\n\n    try {\n      const response = await fetch(url, { signal })\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const contentLength = response.headers.get('content-length')\n      const total = contentLength ? parseInt(contentLength, 10) : 0\n\n      // For smaller files, use regular JSON parsing\n      if (total < chunkSize || !parseAsStream) {\n        const text = await response.text()\n        onProgress({ loaded: total, total, percentage: 100 })\n        return JSON.parse(text)\n      }\n\n      // For large files, use streaming\n      return this._streamParseJSON(response.body, total, onProgress, signal)\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Data loading cancelled:', url)\n        throw error\n      }\n      console.error('Error loading data:', error)\n      throw error\n    }\n  }\n\n  async _streamParseJSON(body, total, onProgress, signal) {\n    const reader = body.getReader()\n    const decoder = new TextDecoder()\n    let chunks = ''\n    let loaded = 0\n\n    try {\n      while (true) {\n        if (signal.aborted) {\n          throw new Error('Aborted')\n        }\n\n        const { done, value } = await reader.read()\n        \n        if (done) break\n\n        loaded += value.length\n        chunks += decoder.decode(value, { stream: true })\n        \n        const percentage = total ? Math.round((loaded / total) * 100) : 0\n        onProgress({ loaded, total, percentage })\n      }\n\n      // Parse the complete JSON\n      return JSON.parse(chunks)\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  /**\n   * Load data in pages for very large datasets\n   * @param {string} baseUrl - Base URL for paginated requests\n   * @param {Object} options - Pagination options\n   * @returns {AsyncGenerator} Async generator yielding data pages\n   */\n  async *loadPaginated(baseUrl, options = {}) {\n    const {\n      pageSize = 1000,\n      startPage = 0,\n      pageParam = 'page',\n      sizeParam = 'size',\n      onPageLoad = () => {}\n    } = options\n\n    let currentPage = startPage\n    let hasMore = true\n\n    while (hasMore) {\n      const url = new URL(baseUrl)\n      url.searchParams.set(pageParam, currentPage)\n      url.searchParams.set(sizeParam, pageSize)\n\n      try {\n        const data = await this.loadData(url.toString(), {\n          cacheKey: `${baseUrl}_page_${currentPage}`,\n          parseAsStream: false\n        })\n\n        onPageLoad({ page: currentPage, data })\n        yield data\n\n        // Check if there's more data (customize based on API response)\n        hasMore = data.length === pageSize\n        currentPage++\n      } catch (error) {\n        console.error(`Error loading page ${currentPage}:`, error)\n        hasMore = false\n      }\n    }\n  }\n\n  /**\n   * Cancel ongoing data loading\n   * @param {string} cacheKey - Cache key of the loading operation\n   */\n  cancelLoad(cacheKey) {\n    const controller = this.abortControllers.get(cacheKey)\n    if (controller) {\n      controller.abort()\n      this.abortControllers.delete(cacheKey)\n      this.loadingStates.delete(cacheKey)\n    }\n  }\n\n  /**\n   * Clear cache\n   * @param {string} cacheKey - Specific key to clear, or null to clear all\n   */\n  clearCache(cacheKey = null) {\n    if (cacheKey) {\n      this.cache.delete(cacheKey)\n    } else {\n      this.cache.clear()\n    }\n  }\n\n  /**\n   * Get cache size\n   * @returns {number} Number of cached items\n   */\n  getCacheSize() {\n    return this.cache.size\n  }\n}\n\n// Export singleton instance\nexport const lazyDataLoader = new LazyDataLoader()\n\n// Composable for Vue components\nexport function useLazyDataLoader() {\n  const loading = ref(false)\n  const progress = ref(0)\n  const error = ref(null)\n\n  const loadData = async (url, options = {}) => {\n    loading.value = true\n    error.value = null\n    progress.value = 0\n\n    try {\n      const data = await lazyDataLoader.loadData(url, {\n        ...options,\n        onProgress: (state) => {\n          progress.value = state.percentage\n          if (options.onProgress) {\n            options.onProgress(state)\n          }\n        }\n      })\n      return data\n    } catch (err) {\n      error.value = err\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return {\n    loading,\n    progress,\n    error,\n    loadData,\n    cancelLoad: (key) => lazyDataLoader.cancelLoad(key),\n    clearCache: (key) => lazyDataLoader.clearCache(key)\n  }\n}","/**\n * Data Service for D2 Nutrition Vibes Vue.js Application\n * Handles loading and caching of FAO and geographic data with runtime validation\n */\n\nimport { \n  apiResponseSchema,\n  faoTimeseriesSchema,\n  geoJsonSchema,\n  mlPredictionSchema,\n  validateData,\n  validateAsync\n} from '@/schemas/validation'\nimport { lazyDataLoader } from '@/utils/lazyDataLoader'\n\nclass DataService {\n  constructor() {\n    this.cache = new Map()\n    this.baseUrl = ''\n    this.validationEnabled = true\n  }\n\n  /**\n   * Generic data loading function with caching and validation\n   */\n  async loadData(url, cacheKey = null, schema = null, options = {}) {\n    const key = cacheKey || url\n    const { validateResponse = this.validationEnabled, throwOnValidationError = false } = options\n    \n    console.log(`🔄 DataService: Loading data from ${url} (cache key: ${key})`)\n    \n    if (this.cache.has(key)) {\n      console.log(`📦 DataService: Cache hit for ${key}`)\n      return this.cache.get(key)\n    }\n\n    try {\n      console.log(`🌐 DataService: Fetching ${url}...`)\n      const response = await fetch(url)\n      console.log(`🌐 DataService: Response status: ${response.status} ${response.statusText}`)\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n      \n      console.log(`📄 DataService: Parsing JSON...`)\n      const data = await response.json()\n      console.log(`✅ DataService: Data loaded successfully, size:`, Object.keys(data).length || data.length || 'unknown')\n      \n      // Runtime validation if schema is provided\n      if (schema && validateResponse) {\n        console.log(`🔍 DataService: Validating data with schema...`)\n        const validation = await validateAsync(schema, data)\n        if (!validation.success) {\n          console.warn(`⚠️ DataService: Data validation failed for ${url}:`, validation.errors)\n          \n          if (throwOnValidationError) {\n            throw new Error(`Data validation failed: ${validation.errors.map(e => e.message).join(', ')}`)\n          }\n          \n          // Add validation metadata to data\n          data._validation = {\n            valid: false,\n            errors: validation.errors,\n            timestamp: new Date().toISOString()\n          }\n        } else {\n          data._validation = {\n            valid: true,\n            errors: null,\n            timestamp: new Date().toISOString()\n          }\n        }\n      }\n      \n      this.cache.set(key, data)\n      return data\n    } catch (error) {\n      console.error(`Error loading data from ${url}:`, error)\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        url,\n        response: error.response\n      })\n      throw error\n    }\n  }\n\n  /**\n   * Validate cached data against schema\n   */\n  async validateCachedData(cacheKey, schema) {\n    if (!this.cache.has(cacheKey)) {\n      throw new Error(`No cached data found for key: ${cacheKey}`)\n    }\n    \n    const data = this.cache.get(cacheKey)\n    return await validateAsync(schema, data)\n  }\n\n  /**\n   * Enable/disable validation\n   */\n  setValidationEnabled(enabled) {\n    this.validationEnabled = enabled\n  }\n\n  /**\n   * Load main data index\n   */\n  async loadDataIndex() {\n    console.log('📂 DataService: loadDataIndex called')\n    return this.loadData('/data/index.json', 'main-index')\n  }\n\n  /**\n   * Load FAO data index\n   */\n  async loadFAOIndex() {\n    return this.loadData('/data/fao/index.json', 'fao-index')\n  }\n\n  /**\n   * Load FAO metadata\n   */\n  async loadFAOMetadata() {\n    console.log('📊 DataService: loadFAOMetadata called')\n    return this.loadData('/data/fao/metadata.json', 'fao-metadata')\n  }\n\n  /**\n   * Load geographic data with GeoJSON validation\n   */\n  async loadGeoData(type = 'geo') {\n    console.log(`🗺️ DataService: loadGeoData called with type: ${type}`)\n    const geoFiles = {\n      world: '/data/geo.json',\n      world_simplified: '/data/geo.json',\n      geo: '/data/geo.json'\n    }\n    \n    const url = geoFiles[type] || geoFiles.geo\n    console.log(`🗺️ DataService: Using URL: ${url}`)\n    return this.loadData(url, `geo-${type}`, geoJsonSchema, { \n      throwOnValidationError: false \n    })\n  }\n\n  /**\n   * Load production data for specific product and year\n   */\n  async loadProductionData(product, year) {\n    console.log(`📊 DataService: loadProductionData called with product: ${product}, year: ${year}`)\n    const filename = `${product}_production_${year}.json`\n    const url = `/data/fao/geo/${filename}`\n    console.log(`📊 DataService: Using production URL: ${url}`)\n    return this.loadData(url, `production-${product}-${year}`)\n  }\n\n  /**\n   * Load ML forecast data\n   */\n  async loadMLForecast(forecastKey) {\n    console.log(`🔮 DataService: loadMLForecast called with key: ${forecastKey}`)\n    // Ensure we don't double-add .json extension\n    const cleanKey = forecastKey.replace('.json', '')\n    const url = `/data/fao/ml/${cleanKey}.json`\n    console.log(`🔮 DataService: Loading ML forecast from URL: ${url}`)\n    return this.loadData(url, `ml-${cleanKey}`)\n  }\n\n  /**\n   * Load timeseries data with FAO schema validation\n   * Uses lazy loader for this large file (50+ MB)\n   */\n  async loadTimeseriesData(onProgress = null) {\n    const url = '/data/fao/timeseries.json'\n    const cacheKey = 'timeseries'\n    \n    // Check cache first\n    if (this.cache.has(cacheKey)) {\n      console.log(`📦 DataService: Cache hit for ${cacheKey}`)\n      return this.cache.get(cacheKey)\n    }\n    \n    try {\n      // Use lazy loader for large file\n      const data = await lazyDataLoader.loadData(url, {\n        onProgress,\n        cacheKey,\n        chunkSize: 2 * 1024 * 1024 // 2MB chunks\n      })\n      \n      // Validate if enabled\n      if (this.validationEnabled && faoTimeseriesSchema) {\n        console.log('🔍 DataService: Validating timeseries data...')\n        const validation = await validateAsync(data, faoTimeseriesSchema)\n        if (!validation.valid) {\n          console.warn('⚠️ DataService: Validation failed for timeseries data:', validation.errors)\n        }\n        data._validation = validation\n      }\n      \n      // Cache the result\n      this.cache.set(cacheKey, data)\n      return data\n    } catch (error) {\n      console.error(`Error loading timeseries data:`, error)\n      throw error\n    }\n  }\n\n  /**\n   * Load production rankings\n   */\n  async loadProductionRankings() {\n    return this.loadData('/data/fao/production_rankings.json', 'production-rankings')\n  }\n\n  /**\n   * Load trade balance data\n   */\n  async loadTradeBalance() {\n    return this.loadData('/data/fao/trade_balance.json', 'trade-balance')\n  }\n\n  /**\n   * Load network analysis data\n   */\n  async loadNetworkData() {\n    return this.loadData('/data/fao/network.json', 'network')\n  }\n\n  /**\n   * Load summary statistics\n   */\n  async loadSummaryData() {\n    return this.loadData('/data/fao/summary.json', 'summary')\n  }\n\n  /**\n   * Load ML forecasts index\n   */\n  async loadMLIndex() {\n    console.log('🤖 DataService: loadMLIndex called')\n    return this.loadData('/data/fao/ml/index.json', 'ml-index')\n  }\n\n  /**\n   * Load comprehensive ML forecasts index with metadata\n   */\n  async loadMLComprehensiveIndex() {\n    console.log('🤖 DataService: loadMLComprehensiveIndex called')\n    return this.loadData('/data/fao/ml/comprehensive_index.json', 'ml-comprehensive-index')\n  }\n\n  /**\n   * Load global ML forecasts index\n   */\n  async loadMLGlobalIndex() {\n    console.log('🤖 DataService: loadMLGlobalIndex called')\n    return this.loadData('/data/fao/ml/global_forecasts_index.json', 'ml-global-index')\n  }\n\n  /**\n   * Load regional ML forecasts index\n   */\n  async loadMLRegionalIndex() {\n    console.log('🤖 DataService: loadMLRegionalIndex called')\n    return this.loadData('/data/fao/ml/regional_forecasts_index.json', 'ml-regional-index')\n  }\n\n  /**\n   * Load country ML forecasts index\n   */\n  async loadMLCountryIndex() {\n    console.log('🤖 DataService: loadMLCountryIndex called')\n    return this.loadData('/data/fao/ml/country_forecasts_index.json', 'ml-country-index')\n  }\n\n  /**\n   * Get available products from index\n   */\n  async getAvailableProducts() {\n    const index = await this.loadDataIndex()\n    return index.products || []\n  }\n\n  /**\n   * Get available years from index\n   */\n  async getAvailableYears() {\n    const index = await this.loadDataIndex()\n    return index.years || []\n  }\n\n  /**\n   * Clear cache\n   */\n  clearCache() {\n    this.cache.clear()\n  }\n\n  /**\n   * Get cache stats for debugging\n   */\n  getCacheStats() {\n    return {\n      size: this.cache.size,\n      keys: Array.from(this.cache.keys())\n    }\n  }\n}\n\n// Export singleton instance\nexport default new DataService()","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\n\nimport dataService from '@/services/dataService'\n\nexport const useDataStore = defineStore('data', () => {\n  // State\n  const geoData = ref(null)\n  const productionData = ref(new Map())\n  const forecastData = ref(new Map())\n  const timeseriesData = ref(null)\n  const networkData = ref(null)\n  const summaryData = ref(null)\n  const dataIndex = ref(null)\n  const faoMetadata = ref(null)\n  const calorieData = ref(null)\n  \n  // ML-specific state\n  const mlIndex = ref(null)\n  const mlComprehensiveIndex = ref(null)\n  const mlGlobalIndex = ref(null)\n  const mlRegionalIndex = ref(null)\n  const mlCountryIndex = ref(null)\n  \n  // Enhanced state for Phase 5\n  const selectedProduct = ref('maize_and_products')\n  const selectedRegion = ref('global')\n  const selectedYears = ref({ start: 2018, end: 2023 })\n  const dataFilters = ref({\n    countries: [],\n    elements: [],\n    items: []\n  })\n  const currentData = ref([])\n  const dataCache = ref(new Map())\n  const lastUpdated = ref(null)\n  \n  // Loading states\n  const loading = ref(false)\n  const loadingStates = ref(new Map())\n  const errors = ref(new Map())\n\n  // Enhanced computed properties for Phase 5\n  const isLoading = computed(() => loading.value)\n  const hasGeoData = computed(() => geoData.value !== null)\n  const hasData = computed(() => {\n    return Object.keys(productionData.value).length > 0 || currentData.value.length > 0\n  })\n  const isDataLoaded = computed(() => hasData.value)\n  \n  const filteredData = computed(() => {\n    if (!currentData.value.length) return []\n    \n    return currentData.value.filter(item => {\n      // Filter by selected years\n      if (item.Year < selectedYears.value.start || item.Year > selectedYears.value.end) {\n        return false\n      }\n      \n      // Filter by selected countries\n      if (dataFilters.value.countries.length > 0 && \n          !dataFilters.value.countries.includes(item.Area)) {\n        return false\n      }\n      \n      // Filter by selected elements\n      if (dataFilters.value.elements.length > 0 && \n          !dataFilters.value.elements.includes(item.Element)) {\n        return false\n      }\n      \n      // Filter by selected items\n      if (dataFilters.value.items.length > 0 && \n          !dataFilters.value.items.includes(item.Item)) {\n        return false\n      }\n      \n      return true\n    })\n  })\n\n  const dataByProduct = computed(() => {\n    const grouped = {}\n    filteredData.value.forEach(item => {\n      if (!grouped[item.Item]) {\n        grouped[item.Item] = []\n      }\n      grouped[item.Item].push(item)\n    })\n    return grouped\n  })\n\n  const dataByRegion = computed(() => {\n    const grouped = {}\n    filteredData.value.forEach(item => {\n      if (!grouped[item.Area]) {\n        grouped[item.Area] = []\n      }\n      grouped[item.Area].push(item)\n    })\n    return grouped\n  })\n\n  const availableProducts = computed(() => {\n    // First try to get products from timeseries data\n    if (timeseriesData.value && Object.keys(timeseriesData.value).length > 0) {\n      return Object.keys(timeseriesData.value).sort()\n    }\n    \n    // Then try FAO metadata\n    if (faoMetadata.value?.data_summary?.food_items) {\n      return faoMetadata.value.data_summary.food_items.sort()\n    }\n    \n    // Fallback to current data or index\n    const indexProducts = dataIndex.value?.products || []\n    const currentProducts = [...new Set(currentData.value.map(item => item.Item))].sort()\n    return currentProducts.length > 0 ? currentProducts : indexProducts\n  })\n  \n  const availableRegions = computed(() => {\n    return [...new Set(currentData.value.map(item => item.Area))].sort()\n  })\n  \n  const availableYears = computed(() => {\n    const indexYears = dataIndex.value?.years || []\n    const currentYears = [...new Set(currentData.value.map(item => item.Year))].sort()\n    return currentYears.length > 0 ? currentYears : indexYears\n  })\n\n  const dataStats = computed(() => {\n    if (!filteredData.value.length) return null\n    \n    const values = filteredData.value\n      .map(item => parseFloat(item.Value))\n      .filter(val => !isNaN(val))\n    \n    if (!values.length) return null\n    \n    const sum = values.reduce((acc, val) => acc + val, 0)\n    const avg = sum / values.length\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n    \n    return {\n      count: values.length,\n      sum,\n      average: avg,\n      min,\n      max,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)]\n    }\n  })\n\n  // Helper function to set loading state\n  const setLoading = (key, isLoading) => {\n    loadingStates.value.set(key, isLoading)\n    loading.value = Array.from(loadingStates.value.values()).some(Boolean)\n  }\n\n  // Helper function to set error\n  const setError = (key, error) => {\n    errors.value.set(key, error)\n    console.error(`Data store error for ${key}:`, error)\n  }\n\n  // Actions\n  const loadDataIndex = async () => {\n    const key = 'data-index'\n    console.log('📂 DataStore: Starting loadDataIndex...')\n    setLoading(key, true)\n    try {\n      console.log('📂 DataStore: Calling dataService.loadDataIndex()...')\n      const data = await dataService.loadDataIndex()\n      console.log('📂 DataStore: DataIndex response:', data)\n      dataIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error('❌ DataStore: Error loading data index:', error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadFAOMetadata = async () => {\n    const key = 'fao-metadata'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadFAOMetadata()\n      faoMetadata.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadGeoData = async (type = 'geo') => {\n    const key = `geo-${type}`\n    console.log(`🗺️ DataStore: Starting loadGeoData with type: ${type}`)\n    setLoading(key, true)\n    try {\n      console.log(`🗺️ DataStore: Calling dataService.loadGeoData(${type})...`)\n      const data = await dataService.loadGeoData(type)\n      console.log('🗺️ DataStore: GeoData response:', data ? 'Success' : 'No data')\n      console.log('🗺️ DataStore: GeoData features count:', data?.features?.length || 'N/A')\n      geoData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading geo data (${type}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadProductionData = async (product, year) => {\n    const key = `production-${product}-${year}`\n    console.log(`📊 DataStore: Starting loadProductionData for ${product} (${year})`)\n    setLoading(key, true)\n    try {\n      console.log(`📊 DataStore: Calling dataService.loadProductionData(${product}, ${year})...`)\n      const data = await dataService.loadProductionData(product, year)\n      console.log('📊 DataStore: ProductionData response:', data ? 'Success' : 'No data')\n      console.log('📊 DataStore: ProductionData items count:', data?.data?.length || data?.length || 'N/A')\n      productionData.value.set(key, data)\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading production data (${product}, ${year}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadForecastData = async (forecastKey) => {\n    const key = `forecast-${forecastKey}`\n    console.log(`🔮 DataStore: Starting loadForecastData for ${forecastKey}`)\n    setLoading(key, true)\n    try {\n      console.log(`🔮 DataStore: Calling dataService.loadMLForecast(${forecastKey})...`)\n      const data = await dataService.loadMLForecast(forecastKey)\n      console.log('🔮 DataStore: ForecastData response:', data ? 'Success' : 'No data')\n      forecastData.value.set(key, data)\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error(`❌ DataStore: Error loading forecast data (${forecastKey}):`, error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // Alias for compatibility\n  const loadMLForecast = loadForecastData\n\n  const loadTimeseriesData = async (onProgress = null) => {\n    const key = 'timeseries'\n    console.log('📊 DataStore: Starting loadTimeseriesData with lazy loading...')\n    setLoading(key, true)\n    try {\n      // Use dataService with progress callback\n      const data = await dataService.loadTimeseriesData(onProgress)\n      console.log('📊 DataStore: Raw timeseries data:', Array.isArray(data) ? `Array with ${data.length} entries` : typeof data)\n      \n      // Transform array structure to nested object structure\n      // Expected: { product: { country: [yearData] } }\n      const transformedData = {}\n      \n      if (Array.isArray(data)) {\n        data.forEach(entry => {\n          const { item: product, country, data: yearData } = entry\n          \n          if (!transformedData[product]) {\n            transformedData[product] = {}\n          }\n          \n          transformedData[product][country] = yearData\n        })\n        \n        console.log('📊 DataStore: Transformed timeseries data structure:', {\n          products: Object.keys(transformedData).length,\n          sampleProduct: Object.keys(transformedData)[0],\n          sampleCountries: transformedData[Object.keys(transformedData)[0]] ? \n            Object.keys(transformedData[Object.keys(transformedData)[0]]).slice(0, 3) : []\n        })\n      }\n      \n      timeseriesData.value = transformedData\n      errors.value.delete(key)\n      return transformedData\n    } catch (error) {\n      console.error('❌ DataStore: Error loading timeseries data:', error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadNetworkData = async () => {\n    const key = 'network'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadNetworkData()\n      networkData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadSummaryData = async () => {\n    const key = 'summary'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadSummaryData()\n      summaryData.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // ML-specific actions\n  const loadMLIndex = async () => {\n    const key = 'ml-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLIndex()\n      mlIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLComprehensiveIndex = async () => {\n    const key = 'ml-comprehensive-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLComprehensiveIndex()\n      mlComprehensiveIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLGlobalIndex = async () => {\n    const key = 'ml-global-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLGlobalIndex()\n      mlGlobalIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLRegionalIndex = async () => {\n    const key = 'ml-regional-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLRegionalIndex()\n      mlRegionalIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  const loadMLCountryIndex = async () => {\n    const key = 'ml-country-index'\n    setLoading(key, true)\n    try {\n      const data = await dataService.loadMLCountryIndex()\n      mlCountryIndex.value = data\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // Get available ML forecasts by type\n  const getAvailableMLForecasts = (type = 'all') => {\n    switch (type) {\n      case 'global':\n        return mlGlobalIndex.value?.forecasts || []\n      case 'regional':\n        return mlRegionalIndex.value?.forecasts || []\n      case 'country':\n        return mlCountryIndex.value?.forecasts || []\n      case 'all':\n      default:\n        return mlComprehensiveIndex.value?.forecast_categories || {}\n    }\n  }\n\n  // Load calorie data\n  const loadCalorieData = async () => {\n    const key = 'calorie-data'\n    console.log('🍎 DataStore: Loading calorie data...')\n    setLoading(key, true)\n    try {\n      const response = await fetch('/data/processed/calorie_supply.json')\n      if (!response.ok) {\n        throw new Error(`Failed to load calorie data: ${response.statusText}`)\n      }\n      const data = await response.json()\n      calorieData.value = data.data\n      console.log('✅ DataStore: Calorie data loaded successfully')\n      errors.value.delete(key)\n      return data\n    } catch (error) {\n      console.error('❌ DataStore: Error loading calorie data:', error)\n      setError(key, error.message)\n      throw error\n    } finally {\n      setLoading(key, false)\n    }\n  }\n\n  // Initialize critical data\n  const initializeApp = async () => {\n    console.log('🚀 DataStore: Starting app initialization...')\n    try {\n      console.log('📂 DataStore: Loading data index...')\n      const indexResult = await loadDataIndex()\n      console.log('✅ DataStore: Data index loaded:', indexResult)\n      \n      console.log('📊 DataStore: Loading FAO metadata...')\n      const metadataResult = await loadFAOMetadata()\n      console.log('✅ DataStore: FAO metadata loaded:', metadataResult)\n      \n      console.log('🗺️ DataStore: Loading geo data...')\n      const geoResult = await loadGeoData('geo')\n      console.log('✅ DataStore: Geo data loaded:', geoResult)\n      \n      console.log('📈 DataStore: Loading timeseries data with progress tracking...')\n      const timeseriesResult = await loadTimeseriesData((progress) => {\n        console.log(`📈 Timeseries loading: ${progress.percentage}%`)\n      })\n      console.log('✅ DataStore: Timeseries data loaded:', timeseriesResult ? 'Success' : 'Failed')\n      \n      console.log('🍎 DataStore: Loading calorie data...')\n      const calorieResult = await loadCalorieData()\n      console.log('✅ DataStore: Calorie data loaded:', calorieResult ? 'Success' : 'Failed')\n      \n      console.log('🎉 DataStore: App initialization completed successfully!')\n    } catch (error) {\n      console.error('❌ DataStore: Failed to initialize app data:', error)\n      console.error('❌ DataStore: Error details:', error.stack)\n    }\n  }\n\n  // Get production data from cache\n  const getProductionData = (product, year) => {\n    const key = `production-${product}-${year}`\n    return productionData.value.get(key)\n  }\n\n  // Get forecast data from cache\n  const getForecastData = (forecastKey) => {\n    const key = `forecast-${forecastKey}`\n    return forecastData.value.get(key)\n  }\n\n  // Clear cache\n  const clearCache = () => {\n    productionData.value.clear()\n    forecastData.value.clear()\n    errors.value.clear()\n    loadingStates.value.clear()\n    dataService.clearCache()\n  }\n\n  // Get error for specific key\n  const getError = (key) => {\n    return errors.value.get(key)\n  }\n\n  // Enhanced actions for Phase 5\n  const setSelectedProduct = (product) => {\n    selectedProduct.value = product\n  }\n\n  const setSelectedRegion = (region) => {\n    selectedRegion.value = region\n  }\n\n  const setSelectedYears = (years) => {\n    selectedYears.value = { ...years }\n  }\n\n  const setDataFilters = (filters) => {\n    dataFilters.value = { ...filters }\n  }\n\n  const addCountryFilter = (country) => {\n    if (!dataFilters.value.countries.includes(country)) {\n      dataFilters.value.countries.push(country)\n    }\n  }\n\n  const removeCountryFilter = (country) => {\n    const index = dataFilters.value.countries.indexOf(country)\n    if (index > -1) {\n      dataFilters.value.countries.splice(index, 1)\n    }\n  }\n\n  const clearFilters = () => {\n    dataFilters.value = {\n      countries: [],\n      elements: [],\n      items: []\n    }\n  }\n\n  const transformDataForVisualization = (type = 'timeseries') => {\n    if (!filteredData.value.length) return []\n    \n    switch (type) {\n      case 'timeseries':\n        return filteredData.value.map(item => ({\n          date: new Date(item.Year, 0, 1),\n          value: parseFloat(item.Value) || 0,\n          year: item.Year,\n          country: item.Area,\n          product: item.Item,\n          element: item.Element\n        }))\n      \n      case 'geographic':\n        return filteredData.value.reduce((acc, item) => {\n          const country = item.Area\n          if (!acc[country]) {\n            acc[country] = {\n              country,\n              total: 0,\n              items: []\n            }\n          }\n          acc[country].total += parseFloat(item.Value) || 0\n          acc[country].items.push(item)\n          return acc\n        }, {})\n      \n      case 'comparative':\n        return availableProducts.value.map(product => {\n          const productData = dataByProduct.value[product] || []\n          const total = productData.reduce((sum, item) => sum + (parseFloat(item.Value) || 0), 0)\n          return {\n            product,\n            value: total,\n            count: productData.length\n          }\n        })\n      \n      default:\n        return filteredData.value\n    }\n  }\n\n  const getDataForProduct = (product) => {\n    return dataByProduct.value[product] || []\n  }\n\n  const getDataForRegion = (region) => {\n    return dataByRegion.value[region] || []\n  }\n\n  const getTrendData = (product, region = null) => {\n    let data = getDataForProduct(product)\n    \n    if (region) {\n      data = data.filter(item => item.Area === region)\n    }\n    \n    return data\n      .sort((a, b) => a.Year - b.Year)\n      .map(item => ({\n        year: item.Year,\n        value: parseFloat(item.Value) || 0\n      }))\n  }\n\n  // Get data for a specific product from timeseries\n  const getTimeseriesDataForProduct = (product, year = null) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return null\n    }\n    \n    const productData = timeseriesData.value[product]\n    \n    if (year) {\n      // Return data for specific year across all countries\n      const yearData = {}\n      Object.entries(productData).forEach(([country, countryData]) => {\n        const yearEntry = countryData.find(entry => entry.year === year)\n        if (yearEntry) {\n          yearData[country] = yearEntry\n        }\n      })\n      return yearData\n    }\n    \n    return productData\n  }\n\n  // Get available countries for a specific product\n  const getAvailableCountriesForProduct = (product) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return []\n    }\n    \n    return Object.keys(timeseriesData.value[product]).sort()\n  }\n\n  // Get available years for a specific product\n  const getAvailableYearsForProduct = (product) => {\n    if (!timeseriesData.value || !timeseriesData.value[product]) {\n      return []\n    }\n    \n    const yearsSet = new Set()\n    Object.values(timeseriesData.value[product]).forEach(countryData => {\n      countryData.forEach(entry => yearsSet.add(entry.year))\n    })\n    \n    return Array.from(yearsSet).sort((a, b) => a - b)\n  }\n\n  const syncCurrentData = (data) => {\n    currentData.value = data\n    lastUpdated.value = new Date()\n  }\n\n  // Check if specific data is loading\n  const isLoadingData = (key) => {\n    return loadingStates.value.get(key) || false\n  }\n\n  // Watchers for reactive updates\n  watch([selectedProduct, selectedRegion], () => {\n    if (isDataLoaded.value) {\n      // Trigger data refresh when selection changes\n      console.log('Selection changed, refreshing data')\n    }\n  })\n\n  return {\n    // State\n    geoData,\n    productionData,\n    forecastData,\n    timeseriesData,\n    networkData,\n    summaryData,\n    dataIndex,\n    faoMetadata,\n    calorieData,\n    loading,\n    errors,\n    \n    // ML state\n    mlIndex,\n    mlComprehensiveIndex,\n    mlGlobalIndex,\n    mlRegionalIndex,\n    mlCountryIndex,\n    \n    // Enhanced state\n    selectedProduct,\n    selectedRegion,\n    selectedYears,\n    dataFilters,\n    currentData,\n    lastUpdated,\n\n    // Computed\n    isLoading,\n    hasGeoData,\n    hasData,\n    isDataLoaded,\n    filteredData,\n    dataByProduct,\n    dataByRegion,\n    availableProducts,\n    availableRegions,\n    availableYears,\n    dataStats,\n\n    // Actions\n    loadDataIndex,\n    loadFAOMetadata,\n    loadGeoData,\n    loadProductionData,\n    loadForecastData,\n    loadMLForecast,\n    loadTimeseriesData,\n    loadNetworkData,\n    loadSummaryData,\n    loadCalorieData,\n    initializeApp,\n    getProductionData,\n    getForecastData,\n    clearCache,\n    getError,\n    isLoadingData,\n    \n    // ML actions\n    loadMLIndex,\n    loadMLComprehensiveIndex,\n    loadMLGlobalIndex,\n    loadMLRegionalIndex,\n    loadMLCountryIndex,\n    getAvailableMLForecasts,\n    \n    // Enhanced actions\n    setSelectedProduct,\n    setSelectedRegion,\n    setSelectedYears,\n    setDataFilters,\n    addCountryFilter,\n    removeCountryFilter,\n    clearFilters,\n    transformDataForVisualization,\n    getDataForProduct,\n    getDataForRegion,\n    getTrendData,\n    getTimeseriesDataForProduct,\n    getAvailableCountriesForProduct,\n    getAvailableYearsForProduct,\n    syncCurrentData\n  }\n})","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\n\nexport const useUIStore = defineStore('ui', () => {\n  // Enhanced state for Phase 5\n  const theme = ref('light')\n  const sidebarOpen = ref(false)\n  const currentPanel = ref('dashboard')\n  const activePanel = ref('dashboard')\n  const selectedCountry = ref('')\n  const selectedProduct = ref('Wheat and products')\n  const selectedMetric = ref('production')\n  const selectedYear = ref(2022)\n  const showAnalysisMenu = ref(false)\n  const mapZoom = ref(1)\n  const mapCenter = ref([0, 0])\n  const darkMode = ref(false)\n  const loadingMessages = ref([])\n  const isUserInteraction = ref(false) // Track if changes come from user actions\n  \n  // Enhanced UI state\n  const loading = ref(false)\n  const modals = ref({})\n  const tooltips = ref({})\n  const currentView = ref('overview')\n  const layoutMode = ref('default')\n  const compactMode = ref(false)\n  const showDebugInfo = ref(false)\n  \n  // Navigation state\n  const navigationHistory = ref([])\n  const currentRoute = ref('/')\n  const breadcrumbs = ref([])\n  \n  // Enhanced panel states\n  const panelStates = ref({\n    dashboard: { visible: true, minimized: false, expanded: true, loading: false, error: null },\n    timeseries: { visible: false, minimized: false, expanded: true, loading: false, error: null },\n    simulation: { visible: false, minimized: false, expanded: false, loading: false, error: null },\n    ml: { visible: false, minimized: false, expanded: false, loading: false, error: null },\n  })\n  \n  // UI preferences\n  const preferences = ref({\n    language: 'de',\n    dateFormat: 'DD.MM.YYYY',\n    numberFormat: 'de-DE',\n    currency: 'EUR',\n    timezone: 'Europe/Berlin',\n    animationsEnabled: true,\n    soundEnabled: false,\n    highContrast: false,\n    reducedMotion: false\n  })\n  \n  // Responsive breakpoints\n  const breakpoints = ref({\n    xs: 480,\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    xxl: 1536\n  })\n  \n  const viewport = ref({\n    width: typeof window !== 'undefined' ? window.innerWidth : 1024,\n    height: typeof window !== 'undefined' ? window.innerHeight : 768,\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true\n  })\n\n  // Enhanced computed properties for Phase 5\n  const getCurrentPanel = computed(() => currentPanel.value)\n  const getSelectedFilters = computed(() => ({\n    country: selectedCountry.value,\n    product: selectedProduct.value,\n    metric: selectedMetric.value,\n    year: selectedYear.value\n  }))\n  \n  const isDarkMode = computed(() => theme.value === 'dark' || darkMode.value)\n  const isMobile = computed(() => viewport.value.width < breakpoints.value.md)\n  const isTablet = computed(() => \n    viewport.value.width >= breakpoints.value.md && \n    viewport.value.width < breakpoints.value.lg\n  )\n  const isDesktop = computed(() => viewport.value.width >= breakpoints.value.lg)\n  \n  const availablePanels = computed(() => Object.keys(panelStates.value))\n  const visiblePanels = computed(() => \n    Object.entries(panelStates.value)\n      .filter(([_, state]) => state.visible)\n      .map(([panel]) => panel)\n  )\n  const expandedPanels = computed(() => \n    Object.entries(panelStates.value)\n      .filter(([_, state]) => state.expanded)\n      .map(([panel]) => panel)\n  )\n  \n  const isPanelVisible = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.visible || false\n  })\n  const isPanelMinimized = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.minimized || false\n  })\n  const isPanelExpanded = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.expanded || false\n  })\n  const isPanelLoading = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.loading || false\n  })\n  const getPanelError = computed(() => (panelName) => {\n    return panelStates.value[panelName]?.error || null\n  })\n  \n  const isLoading = computed(() => \n    loading.value || \n    loadingMessages.value.length > 0 || \n    Object.values(panelStates.value).some(state => state.loading)\n  )\n  const hasErrors = computed(() => \n    Object.values(panelStates.value).some(state => state.error)\n  )\n\n  // Actions\n  const toggleSidebar = () => {\n    sidebarOpen.value = !sidebarOpen.value\n  }\n\n  const setSidebarOpen = (open) => {\n    sidebarOpen.value = open\n  }\n\n  const setCurrentPanel = (panel) => {\n    currentPanel.value = panel\n    // Show the selected panel\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].visible = true\n      panelStates.value[panel].minimized = false\n    }\n  }\n\n  const toggleAnalysisMenu = () => {\n    showAnalysisMenu.value = !showAnalysisMenu.value\n  }\n\n  const setSelectedCountry = (country, isUser = true) => {\n    isUserInteraction.value = isUser\n    selectedCountry.value = country\n    // Reset after a short delay to avoid affecting other operations\n    if (isUser) {\n      setTimeout(() => { isUserInteraction.value = false }, 100)\n    }\n  }\n\n  const setSelectedProduct = (product, isUser = true) => {\n    isUserInteraction.value = isUser\n    selectedProduct.value = product\n    if (isUser) {\n      setTimeout(() => { isUserInteraction.value = false }, 100)\n    }\n  }\n\n  const setSelectedMetric = (metric, isUser = true) => {\n    isUserInteraction.value = isUser\n    selectedMetric.value = metric\n    if (isUser) {\n      setTimeout(() => { isUserInteraction.value = false }, 100)\n    }\n  }\n\n  const setSelectedYear = (year, isUser = true) => {\n    isUserInteraction.value = isUser\n    selectedYear.value = year\n    if (isUser) {\n      setTimeout(() => { isUserInteraction.value = false }, 100)\n    }\n  }\n\n  const setMapView = (zoom, center) => {\n    mapZoom.value = zoom\n    mapCenter.value = center\n  }\n\n  const toggleDarkMode = () => {\n    darkMode.value = !darkMode.value\n    // Apply dark mode class to document\n    if (darkMode.value) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }\n\n  const showPanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = true\n      panelStates.value[panelName].minimized = false\n      currentPanel.value = panelName\n    }\n  }\n\n  const hidePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = false\n    }\n  }\n\n  const togglePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].visible = !panelStates.value[panelName].visible\n    }\n  }\n\n  const minimizePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].minimized = true\n    }\n  }\n\n  const maximizePanel = (panelName) => {\n    if (panelStates.value[panelName]) {\n      panelStates.value[panelName].minimized = false\n    }\n  }\n\n\n  const addLoadingMessage = (message) => {\n    const id = Date.now() + Math.random()\n    loadingMessages.value.push({ id, message })\n    return id\n  }\n\n  const removeLoadingMessage = (id) => {\n    const index = loadingMessages.value.findIndex(m => m.id === id)\n    if (index > -1) {\n      loadingMessages.value.splice(index, 1)\n    }\n  }\n\n  const clearLoadingMessages = () => {\n    loadingMessages.value = []\n  }\n\n  // Batch update filters\n  const updateFilters = (filters) => {\n    if (filters.country !== undefined) selectedCountry.value = filters.country\n    if (filters.product !== undefined) selectedProduct.value = filters.product\n    if (filters.metric !== undefined) selectedMetric.value = filters.metric\n    if (filters.year !== undefined) selectedYear.value = filters.year\n  }\n\n  // Reset UI state\n  const resetUI = () => {\n    currentPanel.value = 'dashboard'\n    selectedCountry.value = ''\n    selectedProduct.value = 'Wheat and products'\n    selectedMetric.value = 'production'\n    selectedYear.value = 2022\n    showAnalysisMenu.value = false\n    mapZoom.value = 1\n    mapCenter.value = [0, 0]\n    loadingMessages.value = []\n    \n    // Reset panel states\n    Object.keys(panelStates.value).forEach(key => {\n      panelStates.value[key] = { visible: key === 'dashboard', minimized: false }\n    })\n  }\n\n  // Initialize UI with saved preferences\n  const initializeUI = () => {\n    // Load dark mode preference\n    const savedDarkMode = localStorage.getItem('darkMode')\n    if (savedDarkMode === 'true') {\n      darkMode.value = true\n      document.documentElement.classList.add('dark')\n    }\n\n    // Load other preferences from localStorage\n    const savedFilters = localStorage.getItem('uiFilters')\n    if (savedFilters) {\n      try {\n        const filters = JSON.parse(savedFilters)\n        updateFilters(filters)\n      } catch (error) {\n        console.warn('Failed to load UI filters from localStorage:', error)\n      }\n    }\n\n  }\n\n  // Save preferences to localStorage\n  const savePreferences = () => {\n    localStorage.setItem('darkMode', darkMode.value.toString())\n    localStorage.setItem('theme', theme.value)\n    localStorage.setItem('uiFilters', JSON.stringify(getSelectedFilters.value))\n    localStorage.setItem('uiPreferences', JSON.stringify(preferences.value))\n  }\n\n  // Enhanced actions for Phase 5\n  const toggleTheme = () => {\n    theme.value = theme.value === 'light' ? 'dark' : 'light'\n    darkMode.value = theme.value === 'dark'\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', isDarkMode.value)\n    }\n  }\n  \n  const setTheme = (newTheme) => {\n    theme.value = newTheme\n    darkMode.value = newTheme === 'dark'\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', isDarkMode.value)\n    }\n  }\n  \n  const setActivePanel = (panel) => {\n    if (availablePanels.value.includes(panel)) {\n      activePanel.value = panel\n      currentPanel.value = panel\n      // Add to navigation history\n      navigationHistory.value.push({\n        panel,\n        timestamp: new Date(),\n        path: currentRoute.value\n      })\n      \n      // Limit history size\n      if (navigationHistory.value.length > 50) {\n        navigationHistory.value = navigationHistory.value.slice(-50)\n      }\n    }\n  }\n  \n  const expandPanel = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].expanded = true\n    }\n  }\n  \n  const collapsePanel = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].expanded = false\n    }\n  }\n  \n  const setPanelLoading = (panel, isLoading) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].loading = isLoading\n    }\n  }\n  \n  const setPanelError = (panel, error) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].error = error\n    }\n  }\n  \n  const clearPanelError = (panel) => {\n    if (panelStates.value[panel]) {\n      panelStates.value[panel].error = null\n    }\n  }\n  \n  const openModal = (modalId, config = {}) => {\n    modals.value[modalId] = {\n      open: true,\n      config,\n      timestamp: new Date()\n    }\n  }\n  \n  const closeModal = (modalId) => {\n    if (modals.value[modalId]) {\n      modals.value[modalId].open = false\n    }\n  }\n  \n  const isModalOpen = (modalId) => {\n    return modals.value[modalId]?.open || false\n  }\n  \n  const showTooltip = (tooltipId, config) => {\n    tooltips.value[tooltipId] = {\n      visible: true,\n      config,\n      timestamp: new Date()\n    }\n  }\n  \n  const hideTooltip = (tooltipId) => {\n    if (tooltips.value[tooltipId]) {\n      tooltips.value[tooltipId].visible = false\n    }\n  }\n  \n  const setCurrentView = (view) => {\n    currentView.value = view\n  }\n  \n  const setLayoutMode = (mode) => {\n    layoutMode.value = mode\n  }\n  \n  const setCompactMode = (isCompact) => {\n    compactMode.value = isCompact\n  }\n  \n  const updateViewport = () => {\n    if (typeof window !== 'undefined') {\n      viewport.value = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        isMobile: window.innerWidth < breakpoints.value.md,\n        isTablet: window.innerWidth >= breakpoints.value.md && window.innerWidth < breakpoints.value.lg,\n        isDesktop: window.innerWidth >= breakpoints.value.lg\n      }\n      \n      // Auto-close sidebar on mobile\n      if (viewport.value.isMobile && sidebarOpen.value) {\n        sidebarOpen.value = false\n      }\n    }\n  }\n  \n  const setPreference = (key, value) => {\n    if (preferences.value.hasOwnProperty(key)) {\n      preferences.value[key] = value\n    }\n  }\n  \n  const updateBreadcrumbs = (crumbs) => {\n    breadcrumbs.value = crumbs\n  }\n  \n  const setGlobalLoading = (isLoading) => {\n    loading.value = isLoading\n  }\n\n\n  // Initialize viewport on client side\n  if (typeof window !== 'undefined') {\n    updateViewport()\n    window.addEventListener('resize', updateViewport)\n  }\n\n  return {\n    // State\n    theme,\n    sidebarOpen,\n    currentPanel,\n    activePanel,\n    selectedCountry,\n    selectedProduct,\n    selectedMetric,\n    selectedYear,\n    showAnalysisMenu,\n    mapZoom,\n    mapCenter,\n    darkMode,\n    loadingMessages,\n    isUserInteraction,\n    panelStates,\n    loading,\n    modals,\n    tooltips,\n    currentView,\n    layoutMode,\n    compactMode,\n    showDebugInfo,\n    navigationHistory,\n    currentRoute,\n    breadcrumbs,\n    preferences,\n    viewport,\n    breakpoints,\n\n    // Computed\n    getCurrentPanel,\n    getSelectedFilters,\n    isDarkMode,\n    isMobile,\n    isTablet,\n    isDesktop,\n    availablePanels,\n    visiblePanels,\n    expandedPanels,\n    isPanelVisible,\n    isPanelMinimized,\n    isPanelExpanded,\n    isPanelLoading,\n    getPanelError,\n    isLoading,\n    hasErrors,\n\n    // Actions\n    toggleSidebar,\n    setSidebarOpen,\n    setCurrentPanel,\n    setActivePanel,\n    toggleAnalysisMenu,\n    setSelectedCountry,\n    setSelectedProduct,\n    setSelectedMetric,\n    setSelectedYear,\n    setMapView,\n    toggleDarkMode,\n    toggleTheme,\n    setTheme,\n    showPanel,\n    hidePanel,\n    togglePanel,\n    minimizePanel,\n    maximizePanel,\n    expandPanel,\n    collapsePanel,\n    setPanelLoading,\n    setPanelError,\n    clearPanelError,\n    addLoadingMessage,\n    removeLoadingMessage,\n    clearLoadingMessages,\n    updateFilters,\n    resetUI,\n    initializeUI,\n    savePreferences,\n    openModal,\n    closeModal,\n    isModalOpen,\n    showTooltip,\n    hideTooltip,\n    setCurrentView,\n    setLayoutMode,\n    setCompactMode,\n    updateViewport,\n    setPreference,\n    updateBreadcrumbs,\n    setGlobalLoading\n  }\n})","import { defineStore } from 'pinia'\nimport { ref, computed, watch } from 'vue'\n\nexport const useTourStore = defineStore('tour', () => {\n  // Tour-Status\n  const isActive = ref(false)\n  const currentTourId = ref(null)\n  const currentStepIndex = ref(0)\n  const totalSteps = ref(0)\n  const isPaused = ref(false)\n  const isLoading = ref(false)\n  \n  // Tour-Daten\n  const availableTours = ref([])\n  const currentTour = ref(null)\n  const currentStep = ref(null)\n  const stepHistory = ref([])\n  \n  // UI-State\n  const overlayVisible = ref(false)\n  const tooltipVisible = ref(false)\n  const highlightedElement = ref(null)\n  const tooltipPosition = ref({ top: 0, left: 0 })\n  const spotlightBounds = ref(null)\n  \n  // Neue Tooltip-Positionierungs-States\n  const tooltipDimensions = ref({ width: 400, height: 'auto' })\n  const tooltipConstraints = ref({ \n    minWidth: 300, \n    maxWidth: 600, \n    minHeight: 200,\n    maxHeight: 500 \n  })\n  const floatingMode = ref(false) // Wenn keine Position ohne Überlappung möglich\n  const positioningMetadata = ref(null) // Debug-Informationen zur letzten Positionierung\n  \n  // User-Präferenzen (persistent)\n  const hasSeenIntro = ref(localStorage.getItem('tour-seen-intro') === 'true')\n  const completedTours = ref(JSON.parse(localStorage.getItem('tour-completed') || '[]'))\n  const skipAnimations = ref(localStorage.getItem('tour-skip-animations') === 'true')\n  const userPreferences = ref(JSON.parse(localStorage.getItem('tour-preferences') || '{}'))\n  \n  // Computed Properties\n  const progress = computed(() => \n    totalSteps.value ? ((currentStepIndex.value + 1) / totalSteps.value) * 100 : 0\n  )\n  \n  const canGoPrevious = computed(() => \n    currentStepIndex.value > 0 && !isLoading.value\n  )\n  \n  const canGoNext = computed(() => \n    currentStepIndex.value < totalSteps.value - 1 && !isLoading.value\n  )\n  \n  const isLastStep = computed(() => \n    currentStepIndex.value === totalSteps.value - 1\n  )\n  \n  const isFirstStep = computed(() => \n    currentStepIndex.value === 0\n  )\n  \n  const hasCompletedCurrentTour = computed(() => \n    currentTourId.value && completedTours.value.includes(currentTourId.value)\n  )\n  \n  // Actions\n  const startTour = (tourId, options = {}) => {\n    const tour = availableTours.value.find(t => t.id === tourId)\n    if (!tour) {\n      console.error(`Tour with id '${tourId}' not found`)\n      return false\n    }\n    \n    currentTourId.value = tourId\n    currentTour.value = tour\n    totalSteps.value = tour.steps.length\n    currentStepIndex.value = options.startStep || 0\n    currentStep.value = tour.steps[currentStepIndex.value]\n    \n    isActive.value = true\n    overlayVisible.value = true\n    tooltipVisible.value = true\n    isPaused.value = false\n    stepHistory.value = []\n    \n    // Track tour start\n    trackEvent('tour_started', { tourId, totalSteps: totalSteps.value })\n    \n    return true\n  }\n  \n  const stopTour = (reason = 'user_action') => {\n    // Track tour completion/exit\n    const completionRate = progress.value\n    trackEvent('tour_stopped', { \n      tourId: currentTourId.value, \n      completionRate,\n      reason,\n      stepIndex: currentStepIndex.value\n    })\n    \n    // Mark as completed if finished\n    if (reason === 'completed' && currentTourId.value) {\n      markTourCompleted(currentTourId.value)\n    }\n    \n    // Reset state\n    isActive.value = false\n    overlayVisible.value = false\n    tooltipVisible.value = false\n    currentTourId.value = null\n    currentTour.value = null\n    currentStep.value = null\n    currentStepIndex.value = 0\n    totalSteps.value = 0\n    highlightedElement.value = null\n    spotlightBounds.value = null\n    stepHistory.value = []\n    isPaused.value = false\n    isLoading.value = false\n    \n    // Reset neue Tooltip-States\n    tooltipDimensions.value = { width: 400, height: 'auto' }\n    floatingMode.value = false\n    positioningMetadata.value = null\n  }\n  \n  const pauseTour = () => {\n    isPaused.value = true\n    overlayVisible.value = false\n    tooltipVisible.value = false\n    trackEvent('tour_paused', { tourId: currentTourId.value, stepIndex: currentStepIndex.value })\n  }\n  \n  const resumeTour = () => {\n    isPaused.value = false\n    overlayVisible.value = true\n    tooltipVisible.value = true\n    trackEvent('tour_resumed', { tourId: currentTourId.value, stepIndex: currentStepIndex.value })\n  }\n  \n  const goToStep = (stepIndex) => {\n    if (stepIndex < 0 || stepIndex >= totalSteps.value) {\n      return false\n    }\n    \n    stepHistory.value.push(currentStepIndex.value)\n    currentStepIndex.value = stepIndex\n    currentStep.value = currentTour.value.steps[stepIndex]\n    \n    trackEvent('tour_step_changed', { \n      tourId: currentTourId.value, \n      fromStep: stepHistory.value[stepHistory.value.length - 1],\n      toStep: stepIndex\n    })\n    \n    return true\n  }\n  \n  const nextStep = () => {\n    if (canGoNext.value) {\n      return goToStep(currentStepIndex.value + 1)\n    } else if (isLastStep.value) {\n      stopTour('completed')\n      return true\n    }\n    return false\n  }\n  \n  const previousStep = () => {\n    if (canGoPrevious.value) {\n      return goToStep(currentStepIndex.value - 1)\n    }\n    return false\n  }\n  \n  const registerTour = (tour) => {\n    const existingIndex = availableTours.value.findIndex(t => t.id === tour.id)\n    if (existingIndex >= 0) {\n      availableTours.value[existingIndex] = tour\n    } else {\n      availableTours.value.push(tour)\n    }\n  }\n  \n  const setHighlightedElement = (selector, bounds = null) => {\n    highlightedElement.value = selector\n    spotlightBounds.value = bounds\n  }\n  \n  const setTooltipPosition = (position) => {\n    tooltipPosition.value = position\n  }\n  \n  const setTooltipDimensions = (dimensions) => {\n    tooltipDimensions.value = dimensions\n  }\n  \n  const setTooltipConstraints = (constraints) => {\n    tooltipConstraints.value = { ...tooltipConstraints.value, ...constraints }\n  }\n  \n  const setFloatingMode = (isFloating) => {\n    floatingMode.value = isFloating\n  }\n  \n  const setPositioningMetadata = (metadata) => {\n    positioningMetadata.value = metadata\n  }\n  \n  const markTourCompleted = (tourId) => {\n    if (!completedTours.value.includes(tourId)) {\n      completedTours.value.push(tourId)\n      localStorage.setItem('tour-completed', JSON.stringify(completedTours.value))\n    }\n  }\n  \n  const markIntroSeen = () => {\n    hasSeenIntro.value = true\n    localStorage.setItem('tour-seen-intro', 'true')\n  }\n  \n  const setUserPreference = (key, value) => {\n    userPreferences.value[key] = value\n    localStorage.setItem('tour-preferences', JSON.stringify(userPreferences.value))\n  }\n  \n  const setSkipAnimations = (skip) => {\n    skipAnimations.value = skip\n    localStorage.setItem('tour-skip-animations', skip.toString())\n  }\n  \n  const resetTourData = () => {\n    localStorage.removeItem('tour-completed')\n    localStorage.removeItem('tour-seen-intro')\n    localStorage.removeItem('tour-preferences')\n    localStorage.removeItem('tour-skip-animations')\n    \n    hasSeenIntro.value = false\n    completedTours.value = []\n    skipAnimations.value = false\n    userPreferences.value = {}\n  }\n  \n  // Simple event tracking (can be extended with analytics)\n  const trackEvent = (eventName, data = {}) => {\n    console.log(`[Tour Analytics] ${eventName}:`, data)\n    \n    // Extend with real analytics service\n    if (window.gtag) {\n      window.gtag('event', eventName, {\n        custom_parameter_1: data.tourId,\n        custom_parameter_2: data.stepIndex\n      })\n    }\n  }\n  \n  // Watch for step changes to trigger actions\n  watch(currentStep, (newStep, oldStep) => {\n    if (newStep && newStep !== oldStep) {\n      // Execute step-specific actions\n      if (newStep.actions?.onEnter) {\n        newStep.actions.onEnter()\n      }\n    }\n  })\n  \n  // Watch for tour completion\n  watch(progress, (newProgress) => {\n    if (newProgress === 100 && isActive.value) {\n      // Auto-complete tour\n      setTimeout(() => {\n        if (isActive.value) {\n          stopTour('completed')\n        }\n      }, 2000)\n    }\n  })\n  \n  return {\n    // State\n    isActive,\n    currentTourId,\n    currentStepIndex,\n    totalSteps,\n    isPaused,\n    isLoading,\n    availableTours,\n    currentTour,\n    currentStep,\n    stepHistory,\n    overlayVisible,\n    tooltipVisible,\n    highlightedElement,\n    tooltipPosition,\n    spotlightBounds,\n    hasSeenIntro,\n    completedTours,\n    skipAnimations,\n    userPreferences,\n    \n    // Neue Tooltip-Positionierungs-States\n    tooltipDimensions,\n    tooltipConstraints,\n    floatingMode,\n    positioningMetadata,\n    \n    // Computed\n    progress,\n    canGoPrevious,\n    canGoNext,\n    isLastStep,\n    isFirstStep,\n    hasCompletedCurrentTour,\n    \n    // Actions\n    startTour,\n    stopTour,\n    pauseTour,\n    resumeTour,\n    goToStep,\n    nextStep,\n    previousStep,\n    registerTour,\n    setHighlightedElement,\n    setTooltipPosition,\n    setTooltipDimensions,\n    setTooltipConstraints,\n    setFloatingMode,\n    setPositioningMetadata,\n    markTourCompleted,\n    markIntroSeen,\n    setUserPreference,\n    setSkipAnimations,\n    resetTourData,\n    trackEvent\n  }\n})","import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport * as d3 from 'd3'\n\nexport const useVisualizationStore = defineStore('visualization', () => {\n  // Enhanced state for Phase 5\n  const mapInstance = ref(null)\n  const chartInstances = ref(new Map())\n  const activeVisualizations = ref(new Set())\n  const visualizationStates = ref(new Map())\n  const interactionHistory = ref([])\n  const selectedElements = ref(new Map())\n  const filters = ref(new Map())\n  const brushSelections = ref(new Map())\n  const zoomStates = ref(new Map())\n  \n  const visualizationConfigs = ref({\n    worldMap: {\n      width: 800,\n      height: 500,\n      projection: 'geoNaturalEarth1',\n      colorScheme: 'viridis',\n      showLegend: true,\n      showTooltips: true\n    },\n    timeseries: {\n      width: 600,\n      height: 400,\n      margin: { top: 20, right: 30, bottom: 40, left: 40 },\n      lineColor: '#3b82f6',\n      showPoints: true,\n      showGrid: true\n    },\n    barChart: {\n      width: 500,\n      height: 300,\n      margin: { top: 20, right: 30, bottom: 40, left: 60 },\n      colorScheme: 'category10',\n      orientation: 'vertical'\n    },\n    scatterPlot: {\n      width: 500,\n      height: 400,\n      margin: { top: 20, right: 30, bottom: 40, left: 40 },\n      pointSize: 4,\n      pointOpacity: 0.7\n    },\n    networkGraph: {\n      width: 700,\n      height: 500,\n      linkDistance: 100,\n      nodeRadius: 8,\n      charge: -300,\n      showLabels: true\n    },\n    ml: {\n      width: 800,\n      height: 500,\n      margin: { top: 20, right: 120, bottom: 40, left: 60 },\n      historicalColor: '#3b82f6',\n      predictionColor: '#ef4444',\n      confidenceColor: '#f59e0b'\n    },\n    simulation: {\n      width: 800,\n      height: 500,\n      margin: { top: 20, right: 30, bottom: 40, left: 60 },\n      baselineColor: '#6b7280',\n      scenarioColor: '#ef4444'\n    },\n  })\n\n  // Animation settings\n  const animationSettings = ref({\n    duration: 750,\n    ease: 'd3.easeQuadInOut',\n    enabled: true\n  })\n\n  // Enhanced color scales and themes for Phase 5\n  const colorSchemes = ref({\n    production: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    forecast: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    trade: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    regions: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'],\n    analysis: ['#3b82f6', '#ef4444', '#f59e0b', '#10b981', '#8b5cf6', '#f97316', '#06b6d4', '#84cc16'],\n    simulation: ['#6b7280', '#ef4444', '#f59e0b', '#10b981'],\n    ml: ['#3b82f6', '#ef4444', '#f59e0b']\n  })\n\n  // Data transformation cache\n  const transformationCache = ref(new Map())\n  const updateQueue = ref([])\n  const isUpdating = ref(false)\n\n  // Enhanced computed properties for Phase 5\n  const getVisualizationConfig = computed(() => (type) => {\n    return visualizationConfigs.value[type] || {}\n  })\n\n  const getColorScheme = computed(() => (type) => {\n    return colorSchemes.value[type] || colorSchemes.value.production\n  })\n\n  const isAnimationEnabled = computed(() => animationSettings.value.enabled)\n  \n  const getVisualizationState = computed(() => (vizId) => {\n    return visualizationStates.value.get(vizId) || {\n      initialized: false,\n      data: null,\n      error: null,\n      lastUpdate: null\n    }\n  })\n  \n  const getSelectedElements = computed(() => (vizId) => {\n    return selectedElements.value.get(vizId) || []\n  })\n  \n  const getFilters = computed(() => (vizId) => {\n    return filters.value.get(vizId) || {}\n  })\n  \n  const getBrushSelection = computed(() => (vizId) => {\n    return brushSelections.value.get(vizId) || null\n  })\n  \n  const getZoomState = computed(() => (vizId) => {\n    return zoomStates.value.get(vizId) || { k: 1, x: 0, y: 0 }\n  })\n  \n  const isVisualizationActive = computed(() => (vizId) => {\n    return activeVisualizations.value.has(vizId)\n  })\n  \n  const hasActiveFilters = computed(() => (vizId) => {\n    const vizFilters = filters.value.get(vizId) || {}\n    return Object.keys(vizFilters).length > 0\n  })\n  \n  const getInteractionHistory = computed(() => {\n    return interactionHistory.value.slice(-100) // Keep last 100 interactions\n  })\n\n  // Actions\n  const setMapInstance = (instance) => {\n    mapInstance.value = instance\n  }\n\n  const getMapInstance = () => {\n    return mapInstance.value\n  }\n\n  const setChartInstance = (chartId, instance) => {\n    chartInstances.value.set(chartId, instance)\n  }\n\n  const getChartInstance = (chartId) => {\n    return chartInstances.value.get(chartId)\n  }\n\n  const removeChartInstance = (chartId) => {\n    const instance = chartInstances.value.get(chartId)\n    if (instance && typeof instance.destroy === 'function') {\n      instance.destroy()\n    }\n    chartInstances.value.delete(chartId)\n  }\n\n  const updateVisualizationConfig = (type, config) => {\n    if (visualizationConfigs.value[type]) {\n      visualizationConfigs.value[type] = {\n        ...visualizationConfigs.value[type],\n        ...config\n      }\n    }\n  }\n\n  const setAnimationSettings = (settings) => {\n    animationSettings.value = {\n      ...animationSettings.value,\n      ...settings\n    }\n  }\n\n  const toggleAnimation = () => {\n    animationSettings.value.enabled = !animationSettings.value.enabled\n  }\n\n  // Map-specific actions\n  const updateMapConfig = (config) => {\n    updateVisualizationConfig('worldMap', config)\n  }\n\n  const setMapProjection = (projection) => {\n    updateVisualizationConfig('worldMap', { projection })\n  }\n\n  const setMapColorScheme = (colorScheme) => {\n    updateVisualizationConfig('worldMap', { colorScheme })\n  }\n\n  const setMapDimensions = (width, height) => {\n    updateVisualizationConfig('worldMap', { width, height })\n  }\n\n  // Chart-specific actions\n  const updateChartConfig = (chartType, config) => {\n    updateVisualizationConfig(chartType, config)\n  }\n\n  const setChartDimensions = (chartType, width, height) => {\n    updateVisualizationConfig(chartType, { width, height })\n  }\n\n  const setChartMargin = (chartType, margin) => {\n    updateVisualizationConfig(chartType, { margin })\n  }\n\n  // Utility actions\n  const getResponsiveDimensions = (containerEl, aspectRatio = 1.6) => {\n    if (!containerEl) return { width: 800, height: 500 }\n    \n    const containerWidth = containerEl.clientWidth\n    const width = Math.max(300, containerWidth - 40) // Min width with padding\n    const height = Math.max(200, width / aspectRatio) // Maintain aspect ratio\n    \n    return { width, height }\n  }\n\n  const updateResponsiveConfig = (chartType, containerEl, aspectRatio) => {\n    const { width, height } = getResponsiveDimensions(containerEl, aspectRatio)\n    setChartDimensions(chartType, width, height)\n    return { width, height }\n  }\n\n  // D3 utility functions\n  const createColorScale = (domain, schemeType = 'production') => {\n    const colors = getColorScheme.value(schemeType)\n    const scale = d3.scaleQuantize()\n      .domain(domain)\n      .range(colors)\n    return scale\n  }\n\n  const createLinearScale = (domain, range) => {\n    return d3.scaleLinear()\n      .domain(domain)\n      .range(range)\n  }\n\n  const createTimeScale = (domain, range) => {\n    return d3.scaleTime()\n      .domain(domain)\n      .range(range)\n  }\n\n  const formatValue = (value, type = 'number') => {\n    if (value === null || value === undefined) return 'N/A'\n    \n    switch (type) {\n      case 'number':\n        return d3.format(',.0f')(value)\n      case 'percentage':\n        return d3.format('.1%')(value)\n      case 'currency':\n        return d3.format('$,.0f')(value)\n      case 'compact':\n        return d3.format('.2s')(value)\n      default:\n        return value.toString()\n    }\n  }\n\n  // Export/Save functionality\n  const exportVisualization = (chartId, format = 'png') => {\n    const instance = getChartInstance(chartId)\n    if (!instance) return null\n\n    const svgElement = instance.node ? instance.node() : instance\n    if (!svgElement) return null\n\n    switch (format) {\n      case 'png':\n        return exportToPNG(svgElement)\n      case 'svg':\n        return exportToSVG(svgElement)\n      case 'pdf':\n        return exportToPDF(svgElement)\n      default:\n        return null\n    }\n  }\n\n  const exportToPNG = (svgElement) => {\n    // Implementation for PNG export\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    const data = new XMLSerializer().serializeToString(svgElement)\n    const img = new Image()\n    \n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        canvas.width = img.width\n        canvas.height = img.height\n        ctx.drawImage(img, 0, 0)\n        resolve(canvas.toDataURL('image/png'))\n      }\n      img.onerror = reject\n      img.src = `data:image/svg+xml;base64,${  btoa(data)}`\n    })\n  }\n\n  const exportToSVG = (svgElement) => {\n    const serializer = new XMLSerializer()\n    const svgString = serializer.serializeToString(svgElement)\n    return `data:image/svg+xml;charset=utf-8,${  encodeURIComponent(svgString)}`\n  }\n\n  const exportToPDF = (svgElement) => {\n    // PDF export not implemented yet - fallback to PNG\n    console.warn('PDF export not implemented, falling back to PNG')\n    return exportToPNG(svgElement)\n  }\n\n  // Cleanup function\n  const cleanup = () => {\n    // Clean up all chart instances\n    chartInstances.value.forEach((instance, chartId) => {\n      removeChartInstance(chartId)\n    })\n    \n    // Reset map instance\n    mapInstance.value = null\n  }\n\n  // Reset to defaults\n  // Enhanced actions for Phase 5\n  const setVisualizationState = (vizId, state) => {\n    visualizationStates.value.set(vizId, {\n      ...getVisualizationState.value(vizId),\n      ...state,\n      lastUpdate: new Date()\n    })\n  }\n  \n  const activateVisualization = (vizId) => {\n    activeVisualizations.value.add(vizId)\n  }\n  \n  const deactivateVisualization = (vizId) => {\n    activeVisualizations.value.delete(vizId)\n  }\n  \n  const setSelectedElements = (vizId, elements) => {\n    selectedElements.value.set(vizId, elements)\n    recordInteraction(vizId, 'selection', { elements })\n  }\n  \n  const addSelectedElement = (vizId, element) => {\n    const current = getSelectedElements.value(vizId)\n    setSelectedElements(vizId, [...current, element])\n  }\n  \n  const removeSelectedElement = (vizId, element) => {\n    const current = getSelectedElements.value(vizId)\n    setSelectedElements(vizId, current.filter(el => el !== element))\n  }\n  \n  const clearSelection = (vizId) => {\n    selectedElements.value.set(vizId, [])\n    recordInteraction(vizId, 'clear_selection')\n  }\n  \n  const setFilter = (vizId, filterKey, filterValue) => {\n    const currentFilters = getFilters.value(vizId)\n    filters.value.set(vizId, {\n      ...currentFilters,\n      [filterKey]: filterValue\n    })\n    recordInteraction(vizId, 'filter', { key: filterKey, value: filterValue })\n  }\n  \n  const removeFilter = (vizId, filterKey) => {\n    const currentFilters = getFilters.value(vizId)\n    const { [filterKey]: removed, ...remaining } = currentFilters\n    filters.value.set(vizId, remaining)\n    recordInteraction(vizId, 'remove_filter', { key: filterKey })\n  }\n  \n  const clearFilters = (vizId) => {\n    filters.value.set(vizId, {})\n    recordInteraction(vizId, 'clear_filters')\n  }\n  \n  const setBrushSelection = (vizId, selection) => {\n    brushSelections.value.set(vizId, selection)\n    recordInteraction(vizId, 'brush', { selection })\n  }\n  \n  const setZoomState = (vizId, zoomState) => {\n    zoomStates.value.set(vizId, zoomState)\n    recordInteraction(vizId, 'zoom', { state: zoomState })\n  }\n  \n  const recordInteraction = (vizId, type, data = {}) => {\n    interactionHistory.value.push({\n      id: Date.now() + Math.random(),\n      vizId,\n      type,\n      data,\n      timestamp: new Date()\n    })\n    \n    // Keep only last 100 interactions\n    if (interactionHistory.value.length > 100) {\n      interactionHistory.value = interactionHistory.value.slice(-100)\n    }\n  }\n  \n  const queueUpdate = (vizId, updateFn, priority = 'normal') => {\n    updateQueue.value.push({\n      vizId,\n      updateFn,\n      priority,\n      timestamp: Date.now()\n    })\n    \n    processUpdateQueue()\n  }\n  \n  const processUpdateQueue = async () => {\n    if (isUpdating.value || updateQueue.value.length === 0) return\n    \n    isUpdating.value = true\n    \n    // Sort by priority: high, normal, low\n    updateQueue.value.sort((a, b) => {\n      const priorityOrder = { high: 0, normal: 1, low: 2 }\n      return priorityOrder[a.priority] - priorityOrder[b.priority]\n    })\n    \n    while (updateQueue.value.length > 0) {\n      const update = updateQueue.value.shift()\n      try {\n        await update.updateFn()\n      } catch (error) {\n        console.error('Visualization update error:', error)\n        setVisualizationState(update.vizId, { error: error.message })\n      }\n    }\n    \n    isUpdating.value = false\n  }\n  \n  const cacheTransformation = (key, data) => {\n    transformationCache.value.set(key, {\n      data,\n      timestamp: Date.now()\n    })\n    \n    // Limit cache size\n    if (transformationCache.value.size > 100) {\n      const entries = Array.from(transformationCache.value.entries())\n      entries.sort((a, b) => a[1].timestamp - b[1].timestamp)\n      const toRemove = entries.slice(0, 20)\n      toRemove.forEach(([key]) => transformationCache.value.delete(key))\n    }\n  }\n  \n  const getCachedTransformation = (key) => {\n    const cached = transformationCache.value.get(key)\n    if (cached && Date.now() - cached.timestamp < 300000) { // 5 minutes\n      return cached.data\n    }\n    return null\n  }\n  \n  const clearCache = () => {\n    transformationCache.value.clear()\n  }\n\n  const resetToDefaults = () => {\n    cleanup()\n    \n    // Reset enhanced state\n    activeVisualizations.value.clear()\n    visualizationStates.value.clear()\n    selectedElements.value.clear()\n    filters.value.clear()\n    brushSelections.value.clear()\n    zoomStates.value.clear()\n    interactionHistory.value = []\n    transformationCache.value.clear()\n    updateQueue.value = []\n    \n    visualizationConfigs.value = {\n      worldMap: {\n        width: 800,\n        height: 500,\n        projection: 'geoNaturalEarth1',\n        colorScheme: 'viridis',\n        showLegend: true,\n        showTooltips: true\n      },\n      timeseries: {\n        width: 600,\n        height: 400,\n        margin: { top: 20, right: 30, bottom: 40, left: 40 },\n        lineColor: '#3b82f6',\n        showPoints: true,\n        showGrid: true\n      },\n      barChart: {\n        width: 500,\n        height: 300,\n        margin: { top: 20, right: 30, bottom: 40, left: 60 },\n        colorScheme: 'category10',\n        orientation: 'vertical'\n      },\n      scatterPlot: {\n        width: 500,\n        height: 400,\n        margin: { top: 20, right: 30, bottom: 40, left: 40 },\n        pointSize: 4,\n        pointOpacity: 0.7\n      },\n      networkGraph: {\n        width: 700,\n        height: 500,\n        linkDistance: 100,\n        nodeRadius: 8,\n        charge: -300,\n        showLabels: true\n      },\n      ml: {\n        width: 800,\n        height: 500,\n        margin: { top: 20, right: 120, bottom: 40, left: 60 },\n        historicalColor: '#3b82f6',\n        predictionColor: '#ef4444',\n        confidenceColor: '#f59e0b'\n      },\n      simulation: {\n        width: 800,\n        height: 500,\n        margin: { top: 20, right: 30, bottom: 40, left: 60 },\n        baselineColor: '#6b7280',\n        scenarioColor: '#ef4444'\n      },\n    }\n\n    animationSettings.value = {\n      duration: 750,\n      ease: 'd3.easeQuadInOut',\n      enabled: true\n    }\n  }\n\n  return {\n    // State\n    mapInstance,\n    chartInstances,\n    visualizationConfigs,\n    animationSettings,\n    colorSchemes,\n    activeVisualizations,\n    visualizationStates,\n    selectedElements,\n    filters,\n    brushSelections,\n    zoomStates,\n    interactionHistory,\n    transformationCache,\n    updateQueue,\n    isUpdating,\n\n    // Computed\n    getVisualizationConfig,\n    getColorScheme,\n    isAnimationEnabled,\n    getVisualizationState,\n    getSelectedElements,\n    getFilters,\n    getBrushSelection,\n    getZoomState,\n    isVisualizationActive,\n    hasActiveFilters,\n    getInteractionHistory,\n\n    // Actions\n    setMapInstance,\n    getMapInstance,\n    setChartInstance,\n    getChartInstance,\n    removeChartInstance,\n    updateVisualizationConfig,\n    setAnimationSettings,\n    toggleAnimation,\n    updateMapConfig,\n    setMapProjection,\n    setMapColorScheme,\n    setMapDimensions,\n    updateChartConfig,\n    setChartDimensions,\n    setChartMargin,\n    getResponsiveDimensions,\n    updateResponsiveConfig,\n    createColorScale,\n    createLinearScale,\n    createTimeScale,\n    formatValue,\n    exportVisualization,\n    exportToPNG,\n    exportToSVG,\n    cleanup,\n    resetToDefaults,\n    \n    // Enhanced actions\n    setVisualizationState,\n    activateVisualization,\n    deactivateVisualization,\n    setSelectedElements,\n    addSelectedElement,\n    removeSelectedElement,\n    clearSelection,\n    setFilter,\n    removeFilter,\n    clearFilters,\n    setBrushSelection,\n    setZoomState,\n    recordInteraction,\n    queueUpdate,\n    processUpdateQueue,\n    cacheTransformation,\n    getCachedTransformation,\n    clearCache\n  }\n})"],"names":["countryCodeSchema","z.string","length","yearSchema","z.number","int","min","max","positiveNumberSchema","positive","percentageSchema","latitudeSchema","longitudeSchema","z.object","type","z.literal","coordinates","z.tuple","geoFeatureSchema","properties","z.record","z.any","geometry","z.enum","geoJsonSchema","features","z.array","area_code","area","item_code","item","element_code","element","year","unit","value","nullable","flag","optional","timeseriesYearDataSchema","production","imports","exports","domestic_supply","feed","food","other_uses","processing","seed","stock_variation","total_supply","timeseriesItemSchema","country","data","faoTimeseriesSchema","country_code","area_harvested","yield","region","predicted_value","confidence_interval","lower","upper","model_accuracy","last_updated","datetime","query","filters","countries","items","years","start","end","refine","message","format","data_type","theme","default","language","default_view","chart_settings","animation_duration","show_tooltips","z.boolean","show_legend","color_scheme","data_settings","cache_duration","auto_refresh","download_quality","success","error","code","details","metadata","timestamp","version","total_records","page","limit","validateAsync","async","schema","parseAsync","errors","lazyDataLoader","constructor","this","cache","Map","loadingStates","abortControllers","loadData","url","options","onProgress","chunkSize","parseAsStream","cacheKey","forceReload","has","get","abortController","AbortController","set","loadPromise","_performLoad","signal","delete","response","fetch","ok","Error","status","contentLength","headers","total","parseInt","text","loaded","percentage","JSON","parse","_streamParseJSON","body","name","reader","getReader","decoder","TextDecoder","chunks","aborted","done","read","decode","stream","Math","round","releaseLock","loadPaginated","baseUrl","pageSize","startPage","pageParam","sizeParam","onPageLoad","currentPage","hasMore","URL","searchParams","toString","cancelLoad","controller","abort","clearCache","clear","getCacheSize","size","dataService","validationEnabled","key","validateResponse","throwOnValidationError","json","validation","_validation","valid","Date","toISOString","map","e","join","validateCachedData","setValidationEnabled","enabled","loadDataIndex","loadFAOIndex","loadFAOMetadata","loadGeoData","geoFiles","world","world_simplified","geo","loadProductionData","product","loadMLForecast","forecastKey","cleanKey","replace","loadTimeseriesData","loadProductionRankings","loadTradeBalance","loadNetworkData","loadSummaryData","loadMLIndex","loadMLComprehensiveIndex","loadMLGlobalIndex","loadMLRegionalIndex","loadMLCountryIndex","getAvailableProducts","products","getAvailableYears","getCacheStats","keys","Array","from","useDataStore","defineStore","geoData","ref","productionData","forecastData","timeseriesData","networkData","summaryData","dataIndex","faoMetadata","calorieData","mlIndex","mlComprehensiveIndex","mlGlobalIndex","mlRegionalIndex","mlCountryIndex","selectedProduct","selectedRegion","selectedYears","dataFilters","elements","currentData","lastUpdated","loading","isLoading","computed","hasGeoData","hasData","Object","isDataLoaded","filteredData","filter","Year","includes","Area","Element","Item","dataByProduct","grouped","forEach","push","dataByRegion","availableProducts","sort","_b","_a","data_summary","food_items","indexProducts","_c","currentProducts","Set","availableRegions","availableYears","indexYears","currentYears","dataStats","values","parseFloat","Value","val","isNaN","sum","reduce","acc","avg","count","average","median","a","b","floor","setLoading","some","Boolean","setError","loadForecastData","transformedData","isArray","entry","yearData","loadCalorieData","statusText","getDataForProduct","watch","initializeApp","progress","getProductionData","getForecastData","getError","isLoadingData","getAvailableMLForecasts","forecasts","_d","forecast_categories","setSelectedProduct","setSelectedRegion","setSelectedYears","setDataFilters","addCountryFilter","removeCountryFilter","index","indexOf","splice","clearFilters","transformDataForVisualization","date","productData","getDataForRegion","getTrendData","getTimeseriesDataForProduct","entries","countryData","yearEntry","find","getAvailableCountriesForProduct","getAvailableYearsForProduct","yearsSet","add","syncCurrentData","useUIStore","sidebarOpen","currentPanel","activePanel","selectedCountry","selectedMetric","selectedYear","showAnalysisMenu","mapZoom","mapCenter","darkMode","loadingMessages","isUserInteraction","modals","tooltips","currentView","layoutMode","compactMode","showDebugInfo","navigationHistory","currentRoute","breadcrumbs","panelStates","dashboard","visible","minimized","expanded","timeseries","simulation","ml","preferences","dateFormat","numberFormat","currency","timezone","animationsEnabled","soundEnabled","highContrast","reducedMotion","breakpoints","xs","sm","md","lg","xl","xxl","viewport","width","window","innerWidth","height","innerHeight","isMobile","isTablet","isDesktop","getCurrentPanel","getSelectedFilters","metric","isDarkMode","availablePanels","visiblePanels","_","state","panel","expandedPanels","isPanelVisible","panelName","isPanelMinimized","isPanelExpanded","isPanelLoading","getPanelError","hasErrors","updateFilters","updateViewport","addEventListener","toggleSidebar","setSidebarOpen","open","setCurrentPanel","setActivePanel","path","slice","toggleAnalysisMenu","setSelectedCountry","isUser","setTimeout","setSelectedMetric","setSelectedYear","setMapView","zoom","center","toggleDarkMode","document","documentElement","classList","remove","toggleTheme","toggle","setTheme","newTheme","showPanel","hidePanel","togglePanel","minimizePanel","maximizePanel","expandPanel","collapsePanel","setPanelLoading","setPanelError","clearPanelError","addLoadingMessage","id","now","random","removeLoadingMessage","findIndex","m","clearLoadingMessages","resetUI","initializeUI","localStorage","getItem","savedFilters","savePreferences","setItem","stringify","openModal","modalId","config","closeModal","isModalOpen","showTooltip","tooltipId","hideTooltip","setCurrentView","view","setLayoutMode","mode","setCompactMode","isCompact","setPreference","hasOwnProperty","updateBreadcrumbs","crumbs","setGlobalLoading","useTourStore","isActive","currentTourId","currentStepIndex","totalSteps","isPaused","availableTours","currentTour","currentStep","stepHistory","overlayVisible","tooltipVisible","highlightedElement","tooltipPosition","top","left","spotlightBounds","tooltipDimensions","tooltipConstraints","minWidth","maxWidth","minHeight","maxHeight","floatingMode","positioningMetadata","hasSeenIntro","completedTours","skipAnimations","userPreferences","canGoPrevious","canGoNext","isLastStep","isFirstStep","hasCompletedCurrentTour","stopTour","reason","completionRate","trackEvent","tourId","stepIndex","markTourCompleted","goToStep","steps","fromStep","toStep","eventName","gtag","custom_parameter_1","custom_parameter_2","newStep","oldStep","actions","onEnter","newProgress","startTour","tour","t","startStep","pauseTour","resumeTour","nextStep","previousStep","registerTour","existingIndex","setHighlightedElement","selector","bounds","setTooltipPosition","position","setTooltipDimensions","dimensions","setTooltipConstraints","constraints","setFloatingMode","isFloating","setPositioningMetadata","markIntroSeen","setUserPreference","setSkipAnimations","skip","resetTourData","removeItem","useVisualizationStore","mapInstance","chartInstances","activeVisualizations","visualizationStates","interactionHistory","selectedElements","brushSelections","zoomStates","visualizationConfigs","worldMap","projection","colorScheme","showLegend","showTooltips","margin","right","bottom","lineColor","showPoints","showGrid","barChart","orientation","scatterPlot","pointSize","pointOpacity","networkGraph","linkDistance","nodeRadius","charge","showLabels","historicalColor","predictionColor","confidenceColor","baselineColor","scenarioColor","animationSettings","duration","ease","colorSchemes","forecast","trade","regions","analysis","transformationCache","updateQueue","isUpdating","getVisualizationConfig","getColorScheme","isAnimationEnabled","getVisualizationState","vizId","initialized","lastUpdate","getSelectedElements","getFilters","getBrushSelection","getZoomState","k","x","y","isVisualizationActive","hasActiveFilters","vizFilters","getInteractionHistory","getChartInstance","chartId","removeChartInstance","instance","destroy","updateVisualizationConfig","setChartDimensions","chartType","getResponsiveDimensions","containerEl","aspectRatio","containerWidth","clientWidth","exportToPNG","svgElement","canvas","createElement","ctx","getContext","XMLSerializer","serializeToString","img","Image","Promise","resolve","reject","onload","drawImage","toDataURL","onerror","src","btoa","exportToSVG","svgString","encodeURIComponent","exportToPDF","cleanup","setVisualizationState","setSelectedElements","recordInteraction","processUpdateQueue","priorityOrder","high","normal","low","priority","update","shift","updateFn","setMapInstance","getMapInstance","setChartInstance","setAnimationSettings","settings","toggleAnimation","updateMapConfig","setMapProjection","setMapColorScheme","setMapDimensions","updateChartConfig","setChartMargin","updateResponsiveConfig","createColorScale","domain","schemeType","colors","d3.scaleQuantize","range","createLinearScale","d3.scaleLinear","createTimeScale","d3.scaleTime","formatValue","d3.format","exportVisualization","node","resetToDefaults","activateVisualization","deactivateVisualization","addSelectedElement","current","removeSelectedElement","el","clearSelection","setFilter","filterKey","filterValue","currentFilters","removeFilter","removed","remaining","setBrushSelection","selection","setZoomState","zoomState","queueUpdate","cacheTransformation","getCachedTransformation","cached"],"mappings":"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"}
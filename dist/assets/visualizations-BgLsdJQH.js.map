{"version":3,"file":"visualizations-BgLsdJQH.js","sources":["../../src/components/visualizations/WorldMap.vue","../../src/components/visualizations/TimeseriesChart.vue","../../src/components/visualizations/SimulationChart.vue","../../src/components/visualizations/MLChart.vue","../../src/components/visualizations/StructuralChart.vue","../../src/components/visualizations/ProcessChart.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, shallowRef, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\n// Removed unused composables\nimport { useDataStore } from '@/stores/useDataStore'\nimport { useUIStore } from '@/stores/useUIStore'\nimport { useVisualizationStore } from '@/stores/useVisualizationStore'\nimport BaseButton from '@/components/ui/BaseButton.vue'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner.vue'\nimport * as d3 from 'd3'\nimport * as topojson from 'topojson-client'\n\ninterface Props {\n  width?: number\n  height?: number\n  selectedProduct?: string\n  selectedYear?: number\n  selectedMetric?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  width: 800,\n  height: 600,\n  selectedProduct: 'Wheat and products',\n  selectedYear: 2022,\n  selectedMetric: 'production'\n})\n\nconst emit = defineEmits<{\n  countryClick: [country: string]\n  countryHover: [country: string | null]\n}>()\n\n// Stores\nconst dataStore = useDataStore()\nconst uiStore = useUIStore()\nconst vizStore = useVisualizationStore()\n\n// Refs\nconst containerRef = ref<HTMLDivElement>()\nconst svgContainerRef = ref<HTMLDivElement>()\n\n// State (completely isolate from Vue reactivity)\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\nlet geoDataStatic = null // Non-reactive\nlet productionDataStatic = [] // Non-reactive\nconst isInitialized = ref(false)\n\n// Legend state\nconst legendScale = ref(null)\nconst legendDomain = ref([0, 100000000]) // Static domain across years\n\n// Tooltip implementation with D3\nlet tooltipDiv = null\n\nconst tooltip = {\n  element: null,\n  \n  init: () => {\n    // Create tooltip div if it doesn't exist\n    if (!tooltipDiv) {\n      tooltipDiv = d3.select('body')\n        .append('div')\n        .attr('class', 'worldmap-tooltip')\n        .style('position', 'absolute')\n        .style('padding', '10px')\n        .style('background', 'rgba(0, 0, 0, 0.9)')\n        .style('color', 'white')\n        .style('border-radius', '4px')\n        .style('pointer-events', 'none')\n        .style('font-size', '14px')\n        .style('box-shadow', '0 2px 4px rgba(0,0,0,0.2)')\n        .style('z-index', '9999')\n        .style('opacity', 0)\n        .style('transition', 'opacity 0.2s')\n    }\n    tooltip.element = tooltipDiv\n  },\n  \n  show: (event, data, formatter) => {\n    if (!tooltipDiv) tooltip.init()\n    \n    // Get content from formatter or use default\n    const content = formatter ? formatter() : 'No data'\n    \n    // Get mouse position\n    const mouseX = event.pageX || event.clientX\n    const mouseY = event.pageY || event.clientY\n    \n    tooltipDiv\n      .html(content)\n      .style('opacity', 1)\n      .style('left', (mouseX + 10) + 'px')\n      .style('top', (mouseY - 28) + 'px')\n  },\n  \n  hide: () => {\n    if (tooltipDiv) {\n      tooltipDiv.style('opacity', 0)\n    }\n  },\n  \n  destroy: () => {\n    if (tooltipDiv) {\n      tooltipDiv.remove()\n      tooltipDiv = null\n    }\n  }\n}\n\n// Processed production data (non-reactive)\nconst getProcessedProductionData = () => {\n  if (!Array.isArray(productionDataStatic)) return []\n  return productionDataStatic.filter(d => d.value > 0)\n}\n\n// Map elements\nlet projection: d3.GeoProjection\nlet path: d3.GeoPath\nlet colorScale: d3.ScaleQuantize<string>\nlet zoom: d3.ZoomBehavior<SVGElement, unknown>\n\n// High contrast green color scheme for production data\nconst greenColorScheme = [\n  '#f7fcf5',  // Almost white for zero/very low values\n  '#e5f5e0',  // Very light green\n  '#a8dba8',  // Light green\n  '#7bc96f',  // Light-medium green\n  '#4eb157',  // Medium green\n  '#2e8b3e',  // Medium-dark green\n  '#1b7828',  // Dark green\n  '#0d5814',  // Very dark green\n  '#003300'   // Almost black green for highest values\n]\n\n// Computed properties\nconst mapConfig = computed(() => ({\n  projection: 'naturalEarth1',\n  colorScheme: greenColorScheme,\n  ...vizStore.getVisualizationConfig('worldMap')\n}))\n\n// Initialize map\nconst initializeMap = async () => {\n  console.log('üöÄ WorldMap: initializeMap called')\n  console.log('üîç WorldMap: containerRef.value:', containerRef.value)\n  console.log('üîç WorldMap: svgContainerRef.value:', svgContainerRef.value)\n  console.log('üîç WorldMap: isInitialized:', isInitialized.value)\n  \n  if (!containerRef.value || !svgContainerRef.value) {\n    console.warn('‚ö†Ô∏è WorldMap: Container not ready')\n    return\n  }\n  \n  if (isInitialized.value) {\n    console.warn('‚ö†Ô∏è WorldMap: Already initialized')\n    return\n  }\n  \n  isInitialized.value = true\n\n  try {\n    console.log('üîÑ WorldMap: Starting map initialization...')\n    isLoading.value = true\n    error.value = null\n\n    // Load geographic data\n    console.log('üì° WorldMap: Loading geo data...')\n    const loadedGeoData = await dataStore.loadGeoData('geo')\n    console.log('‚úÖ WorldMap: Geo data loaded:', loadedGeoData ? 'Success' : 'Failed')\n    console.log('üìä WorldMap: Features count:', loadedGeoData?.features?.length || 'N/A')\n    geoDataStatic = loadedGeoData\n\n    // Initialize tooltip\n    tooltip.init()\n    \n    // Initialize map with direct D3 approach (working solution)\n    console.log('üöÄ WorldMap: Creating map directly...')\n    createMapDirect(loadedGeoData)\n\n  } catch (err) {\n    error.value = 'Fehler beim Laden der Karte'\n    console.error('‚ùå WorldMap: Map initialization error:', err)\n    console.error('‚ùå WorldMap: Error stack:', err.stack)\n  } finally {\n    // Use requestAnimationFrame to avoid Vue reactivity issues\n    requestAnimationFrame(() => {\n      isLoading.value = false\n      console.log('üèÅ WorldMap: initializeMap finished')\n    })\n  }\n}\n\n// Create map directly (working approach from WorldMapSimple)\nconst createMapDirect = (data) => {\n  console.log('üé® WorldMap: createMapDirect called')\n  \n  if (!svgContainerRef.value) {\n    console.error('‚ùå WorldMap: No SVG container ref available')\n    return\n  }\n  \n  if (!data?.features || !Array.isArray(data.features)) {\n    console.error('‚ùå WorldMap: Invalid geo data')\n    return\n  }\n\n  // Store DOM element reference to avoid Vue reactivity\n  const containerElement = svgContainerRef.value\n  const container = d3.select(containerElement)\n  \n  // Clear existing content safely\n  const existingSvg = container.select('svg')\n  if (!existingSvg.empty()) {\n    existingSvg.remove()\n  }\n  \n  // Get dimensions with better fallbacks\n  const containerRect = svgContainerRef.value.getBoundingClientRect()\n  let width = containerRect.width\n  let height = containerRect.height\n  \n  console.log('üìê WorldMap: SVG Container rect:', containerRect)\n  console.log('üìê WorldMap: Main Container rect:', containerRef.value?.getBoundingClientRect())\n  console.log('üìê WorldMap: Parent element rect:', svgContainerRef.value.parentElement?.getBoundingClientRect())\n  \n  // If container has no size, try parent elements\n  if (width < 10 || height < 10) {\n    // Try main container\n    const mainRect = containerRef.value?.getBoundingClientRect()\n    if (mainRect && mainRect.width > 10 && mainRect.height > 10) {\n      width = mainRect.width\n      height = mainRect.height\n      console.log('üìê WorldMap: Using main container dimensions')\n    } else if (svgContainerRef.value.parentElement) {\n      // Try parent element\n      const parentRect = svgContainerRef.value.parentElement.getBoundingClientRect()\n      width = parentRect.width || props.width\n      height = parentRect.height || props.height\n      console.log('üìê WorldMap: Using parent element dimensions')\n    }\n  }\n  \n  // Final fallback to props\n  if (width < 100) width = props.width\n  if (height < 100) height = props.height\n  \n  console.log('üìê WorldMap: Final dimensions:', { width, height })\n  \n  if (width === 0 || height === 0) {\n    console.error('‚ùå WorldMap: Invalid dimensions, using defaults')\n    width = props.width\n    height = props.height\n  }\n\n  // Create SVG with explicit sizing\n  const svg = container\n    .append('svg')\n    .attr('class', 'world-map-svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('preserveAspectRatio', 'xMidYMid meet')\n    .style('width', '100%')\n    .style('height', '100%')\n    .style('display', 'block')\n    .style('background-color', 'transparent')\n\n  console.log('‚úÖ WorldMap: SVG created')\n\n  // Setup projection with better scale for visibility\n  projection = d3.geoNaturalEarth1()\n    .scale(width / 5.5)\n    .translate([width / 2, height / 2.2])\n\n  path = d3.geoPath().projection(projection)\n  \n  console.log('‚úÖ WorldMap: Projection created')\n\n  // Setup zoom behavior\n  zoom = d3.zoom()\n    .scaleExtent([0.8, 8])\n    .on('zoom', (event) => {\n      svg.select('.map-container').attr('transform', event.transform)\n    })\n\n  svg.call(zoom)\n  console.log('‚úÖ WorldMap: Zoom behavior set up')\n\n  // Create main group\n  const g = svg.append('g')\n    .attr('class', 'map-container')\n\n  // Draw countries directly\n  drawCountriesDirect(g, data.features)\n\n  // Update with production data if available\n  const processedData = getProcessedProductionData()\n  if (processedData.length > 0) {\n    console.log('üìä WorldMap: Production data available, updating map colors')\n    updateMapWithProductionDataDirect(g)\n  } else {\n    console.log('‚ö†Ô∏è WorldMap: No production data available yet')\n  }\n  \n  // Don't create legend here - wait for production data\n  \n  console.log('üéâ WorldMap: Map creation completed successfully!')\n}\n\n// Direct country drawing (working approach)\nconst drawCountriesDirect = (container, features) => {\n  console.log('üåç WorldMap: Drawing countries directly...')\n  \n  // Get theme colors\n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const defaultFill = isDarkMode ? '#374151' : '#e5e7eb' // gray-700 : gray-200\n  const defaultStroke = isDarkMode ? '#4B5563' : '#ffffff' // gray-600 : white\n  \n  const countries = container.selectAll('.country')\n    .data(features, d => d.properties.iso_a3 || d.properties.adm0_a3 || d.properties.name)\n  \n  // Remove old countries\n  countries.exit().remove()\n  \n  // Add new countries\n  const enterCountries = countries.enter()\n    .append('path')\n    .attr('class', 'country')\n    .attr('d', path)\n    .attr('fill', defaultFill)\n    .attr('stroke', defaultStroke)\n    .attr('stroke-width', 0.5)\n    .style('cursor', 'pointer')\n    .on('click', handleCountryClick)\n    .on('mouseover', handleCountryMouseover)\n    .on('mouseout', handleCountryMouseout)\n  \n  // Update existing countries\n  countries.merge(enterCountries)\n    .attr('d', path)\n    .attr('fill', defaultFill)\n    .attr('stroke', defaultStroke)\n  \n  const totalCountries = container.selectAll('.country').size()\n  console.log('‚úÖ WorldMap: Countries drawn, total:', totalCountries)\n}\n\n// Create legend\nconst createLegend = (svg) => {\n  console.log('üé® WorldMap: Creating legend...')\n  \n  // Remove existing legend\n  svg.select('.legend-group').remove()\n  \n  if (!legendScale.value || !legendDomain.value) {\n    console.log('‚ö†Ô∏è WorldMap: No legend scale available yet')\n    return\n  }\n  \n  const legendWidth = 200\n  const legendHeight = 10\n  const legendMargin = { top: 10, right: 20, bottom: 30, left: 20 }\n  \n  // Get actual SVG dimensions\n  const svgNode = svg.node()\n  const svgWidth = svgNode ? svgNode.clientWidth : props.width\n  const svgHeight = svgNode ? svgNode.clientHeight : props.height\n  \n  const legend = svg.append('g')\n    .attr('class', 'legend-group')\n    .attr('transform', `translate(${svgWidth - legendWidth - legendMargin.right}, ${svgHeight - legendHeight - legendMargin.bottom})`)\n  \n  // Create gradient\n  const gradientId = 'legend-gradient'\n  \n  // Check if defs already exists\n  let defs = svg.select('defs')\n  if (defs.empty()) {\n    defs = svg.append('defs')\n  }\n  \n  const gradient = defs\n    .append('linearGradient')\n    .attr('id', gradientId)\n    .attr('x1', '0%')\n    .attr('x2', '100%')\n    .attr('y1', '0%')\n    .attr('y2', '0%')\n  \n  // Color stops are now added above in the scale section\n  \n  // Add rectangle with gradient\n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const legendStroke = isDarkMode ? '#4B5563' : '#e5e7eb' // gray-600 : gray-200\n  \n  legend.append('rect')\n    .attr('width', legendWidth)\n    .attr('height', legendHeight)\n    .attr('fill', `url(#${gradientId})`)\n    .attr('stroke', legendStroke)\n    .attr('stroke-width', 0.5)\n  \n  // Add scale\n  const legendScaleLinear = d3.scaleLinear()\n    .domain(legendDomain.value)\n    .range([0, legendWidth])\n  \n  // Update gradient with smooth transition\n  gradient.selectAll('stop').remove()\n  \n  // Add color stops for each color in the scheme\n  if (legendScale.value && legendScale.value.quantiles) {\n    const quantiles = [0, ...legendScale.value.quantiles(), legendDomain.value[1]]\n    \n    greenColorScheme.forEach((color, i) => {\n      if (i < quantiles.length - 1) {\n        const startPos = legendScaleLinear(quantiles[i]) / legendWidth\n        const endPos = legendScaleLinear(quantiles[i + 1]) / legendWidth\n        \n        gradient.append('stop')\n          .attr('offset', `${startPos * 100}%`)\n          .attr('stop-color', color)\n        \n        if (i < greenColorScheme.length - 1) {\n          gradient.append('stop')\n            .attr('offset', `${endPos * 100}%`)\n            .attr('stop-color', color)\n        }\n      }\n    })\n  } else {\n    // Fallback: linear gradient\n    greenColorScheme.forEach((color, i) => {\n      gradient.append('stop')\n        .attr('offset', `${(i / (greenColorScheme.length - 1)) * 100}%`)\n        .attr('stop-color', color)\n    })\n  }\n  \n  const legendAxis = d3.axisBottom(legendScaleLinear)\n    .ticks(5)\n    .tickFormat(d => {\n      if (d >= 1000000) return d3.format('.1s')(d)\n      if (d >= 1000) return d3.format('.0s')(d)\n      return d3.format('.0f')(d)\n    })\n  \n  const legendTextColor = isDarkMode ? '#D1D5DB' : '#374151' // gray-300 : gray-700\n  \n  const legendAxisGroup = legend.append('g')\n    .attr('transform', `translate(0, ${legendHeight})`)\n    .call(legendAxis)\n    \n  legendAxisGroup.selectAll('text')\n    .style('font-size', '10px')\n    .style('fill', legendTextColor)\n    \n  legendAxisGroup.selectAll('path')\n    .style('stroke', legendTextColor)\n    \n  legendAxisGroup.selectAll('line')\n    .style('stroke', legendTextColor)\n  \n  // Add title\n  legend.append('text')\n    .attr('x', legendWidth / 2)\n    .attr('y', -5)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '11px')\n    .style('font-weight', '500')\n    .style('fill', legendTextColor)\n    .text(props.selectedMetric === 'production' ? 'Produktion (t)' : \n          props.selectedMetric === 'import_quantity' ? 'Import (t)' :\n          props.selectedMetric === 'export_quantity' ? 'Export (t)' :\n          'Versorgung (t)')\n}\n\n// Setup map with D3.js (keeping original for compatibility)\nconst setupMap = (container, data) => {\n  console.log('üé® WorldMap: setupMap called')\n  console.log('üé® WorldMap: Container:', container)\n  console.log('üé® WorldMap: Data type:', typeof data)\n  console.log('üé® WorldMap: Data keys:', data ? Object.keys(data) : 'No data')\n  console.log('üé® WorldMap: Features available:', data?.features ? 'Yes' : 'No')\n  console.log('üé® WorldMap: Features count:', data?.features?.length || 'N/A')\n  \n  if (!data?.features || !Array.isArray(data.features)) {\n    console.error('‚ùå WorldMap: Invalid geo data provided to setupMap:', data)\n    console.error('‚ùå WorldMap: Expected data.features to be an array, got:', typeof data?.features)\n    return\n  }\n\n  // Legacy function - dimensions handled in createMapDirect\n  console.log('‚ö†Ô∏è WorldMap: setupMap is deprecated - use createMapDirect instead')\n  return\n\n  // Create SVG directly\n  console.log('üñºÔ∏è WorldMap: Creating SVG directly...')\n  \n  // Remove existing SVG\n  container.select('svg').remove()\n  \n  // Create new SVG\n  const svg = container\n    .append('svg')\n    .attr('class', 'world-map-svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('preserveAspectRatio', 'xMidYMid meet')\n\n  // Create main group\n  const g = svg.append('g')\n    .attr('class', 'map-container')\n    .attr('transform', 'translate(0, 0)')\n  \n  console.log('‚úÖ WorldMap: SVG created successfully')\n  console.log('üñºÔ∏è WorldMap: SVG node:', svg.node())\n  console.log('üñºÔ∏è WorldMap: Container group:', g.node())\n\n  // Setup projection\n  console.log('üåç WorldMap: Setting up projection...')\n  projection = d3.geoNaturalEarth1()\n    .scale(width / 6.5)\n    .translate([width / 2, height / 2])\n\n  path = d3.geoPath().projection(projection)\n  \n  console.log('‚úÖ WorldMap: Projection created')\n  console.log('üåç WorldMap: Projection scale:', projection.scale())\n  console.log('üåç WorldMap: Projection translate:', projection.translate())\n  console.log('üåç WorldMap: Path generator created')\n\n  // Setup zoom behavior\n  console.log('üîç WorldMap: Setting up zoom behavior...')\n  zoom = d3.zoom()\n    .scaleExtent([0.5, 8])\n    .on('zoom', (event) => {\n      console.log('üîç WorldMap: Zoom event:', event.transform)\n      g.attr('transform', event.transform)\n    })\n\n  svg.call(zoom)\n  console.log('‚úÖ WorldMap: Zoom behavior set up')\n\n  // Draw countries using data join pattern\n  console.log('üåç WorldMap: Drawing countries...')\n  drawCountries(g, data.features)\n  console.log('‚úÖ WorldMap: Countries drawn')\n\n  // Update with production data if available\n  const processedData = getProcessedProductionData()\n  if (processedData.length > 0) {\n    console.log('üìä WorldMap: Production data available, updating map colors')\n    updateMapWithProductionData()\n  } else {\n    console.log('‚ö†Ô∏è WorldMap: No production data available yet')\n  }\n  \n  console.log('üéâ WorldMap: setupMap completed successfully!')\n}\n\n// Draw countries using modern data join pattern\nconst drawCountries = (container, features) => {\n  console.log('üó∫Ô∏è WorldMap: Drawing countries, features count:', features?.length)\n  \n  if (!features || !Array.isArray(features) || features.length === 0) {\n    console.error('üó∫Ô∏è WorldMap: No valid features provided to drawCountries')\n    return\n  }\n\n  // Legacy function - use drawCountriesDirect instead\n  console.log('‚ö†Ô∏è WorldMap: drawCountries is deprecated - use drawCountriesDirect instead')\n  return\n  \n  console.log('üó∫Ô∏è WorldMap: Countries drawn successfully')\n}\n\n// Load production data\nconst loadProductionData = async () => {\n  if (!props.selectedProduct || !props.selectedYear) return\n\n  try {\n    console.log(`üó∫Ô∏è WorldMap: Loading data for ${props.selectedProduct} ${props.selectedYear} - Metric: ${props.selectedMetric}`)\n    \n    let productionData = null\n    \n    // Check if we have timeseries data for this product (individual products)\n    if (dataStore.timeseriesData && dataStore.timeseriesData[props.selectedProduct]) {\n      console.log('üó∫Ô∏è WorldMap: Using timeseries data for individual product')\n      const timeseriesData = dataStore.getTimeseriesDataForProduct(props.selectedProduct, props.selectedYear)\n      \n      if (timeseriesData) {\n        productionData = Object.entries(timeseriesData).map(([country, data]) => {\n          const metricKey = props.selectedMetric === 'production' ? 'production' :\n                           props.selectedMetric === 'import_quantity' ? 'imports' :\n                           props.selectedMetric === 'export_quantity' ? 'exports' :\n                           props.selectedMetric === 'domestic_supply_quantity' ? 'domestic_supply' :\n                           'production'\n          \n          return {\n            country: country,\n            countryCode: getCountryCode(country),\n            value: data[metricKey] || 0,\n            unit: data.unit || 't',\n            year: props.selectedYear,\n            element: props.selectedMetric\n          }\n        }).filter(item => item.value > 0)\n      }\n    } else {\n      // Fallback to production data for grouped products\n      console.log('üó∫Ô∏è WorldMap: Using production data for grouped product')\n      productionData = await dataStore.loadProductionData(\n        props.selectedProduct, \n        props.selectedYear\n      )\n    }\n    \n    console.log('üó∫Ô∏è WorldMap: Raw production data:', productionData)\n    console.log('üó∫Ô∏è WorldMap: Data type:', typeof productionData)\n\n    if (productionData) {\n      let transformedData = []\n      \n      // Check if it's already an array\n      if (Array.isArray(productionData)) {\n        transformedData = productionData.map(item => ({\n          country: item.country || item.Area || '',\n          countryCode: item.countryCode || item.iso3 || getCountryCode(item.country || item.Area || ''),\n          value: item.value || item.Value || 0,\n          unit: item.unit || item.Unit || 't',\n          year: item.year || item.Year || props.selectedYear,\n          element: item.element || item.Element || props.selectedMetric\n        }))\n      } else if (productionData.data && Array.isArray(productionData.data)) {\n        // Handle wrapped data\n        transformedData = productionData.data.map(item => ({\n          country: item.country || item.Area || '',\n          countryCode: item.countryCode || item.iso3 || getCountryCode(item.country || item.Area || ''),\n          value: item.value || item.Value || 0,\n          unit: item.unit || item.Unit || 't',\n          year: item.year || item.Year || props.selectedYear,\n          element: item.element || item.Element || props.selectedMetric\n        }))\n      } else if (typeof productionData === 'object') {\n        // Transform the object structure to array format\n        transformedData = Object.entries(productionData).map(([countryName, data]) => ({\n          country: countryName,\n          countryCode: getCountryCode(countryName),\n          value: data.value || data.Value || 0,\n          unit: data.unit || data.Unit || 't',\n          year: data.year || data.Year || props.selectedYear,\n          element: data.element || data.Element || props.selectedMetric\n        }))\n      }\n      \n      console.log('üó∫Ô∏è WorldMap: Transformed data:', transformedData)\n      productionDataStatic = transformedData\n      \n      // Update map if already initialized\n      updateMapWithProductionDataStatic()\n    }\n  } catch (err) {\n    console.warn('Failed to load production data:', err)\n    productionDataStatic = []\n  }\n}\n\n// Helper function to get country code - comprehensive mapping\nconst getCountryCode = (countryName) => {\n  const mapping = {\n    'China': 'CHN',\n    'China, mainland': 'CHN',\n    'United States': 'USA', \n    'United States of America': 'USA',\n    'Brazil': 'BRA',\n    'Argentina': 'ARG',\n    'Ukraine': 'UKR',\n    'India': 'IND',\n    'Mexico': 'MEX',\n    'Indonesia': 'IDN',\n    'France': 'FRA',\n    'Romania': 'ROU',\n    'Germany': 'DEU',\n    'Turkey': 'TUR',\n    'Russian Federation': 'RUS',\n    'Russia': 'RUS',\n    'Philippines': 'PHL',\n    'Nigeria': 'NGA',\n    'Iran': 'IRN',\n    'Iran (Islamic Republic of)': 'IRN',\n    'Pakistan': 'PAK',\n    'Italy': 'ITA',\n    'Canada': 'CAN',\n    'Thailand': 'THA',\n    'South Africa': 'ZAF',\n    'Egypt': 'EGY',\n    'Morocco': 'MAR',\n    'Kenya': 'KEN',\n    'Ethiopia': 'ETH',\n    'Ghana': 'GHA',\n    'Tanzania': 'TZA',\n    'Uganda': 'UGA',\n    'Madagascar': 'MDG',\n    'Mozambique': 'MOZ',\n    'Cameroon': 'CMR',\n    'Mali': 'MLI',\n    'Burkina Faso': 'BFA',\n    'Niger': 'NER',\n    'Senegal': 'SEN',\n    'Guinea': 'GIN',\n    'Benin': 'BEN',\n    'Burundi': 'BDI',\n    'Rwanda': 'RWA',\n    'Chad': 'TCD',\n    'Central African Republic': 'CAF',\n    'Democratic Republic of the Congo': 'COD',\n    'Congo': 'COG',\n    'Gabon': 'GAB',\n    'Equatorial Guinea': 'GNQ',\n    'Sao Tome and Principe': 'STP',\n    'Cape Verde': 'CPV',\n    'Gambia': 'GMB',\n    'Guinea-Bissau': 'GNB',\n    'Liberia': 'LBR',\n    'Sierra Leone': 'SLE',\n    'C√¥te d\\'Ivoire': 'CIV',\n    'Togo': 'TGO',\n    'Comoros': 'COM',\n    'Mauritius': 'MUS',\n    'Seychelles': 'SYC',\n    'Djibouti': 'DJI',\n    'Eritrea': 'ERI',\n    'Somalia': 'SOM',\n    'Sudan': 'SDN',\n    'South Sudan': 'SSD',\n    'Libya': 'LBY',\n    'Tunisia': 'TUN',\n    'Algeria': 'DZA',\n    'Spain': 'ESP',\n    'Portugal': 'PRT',\n    'United Kingdom': 'GBR',\n    'Ireland': 'IRL',\n    'Netherlands': 'NLD',\n    'Belgium': 'BEL',\n    'Luxembourg': 'LUX',\n    'Switzerland': 'CHE',\n    'Austria': 'AUT',\n    'Poland': 'POL',\n    'Czech Republic': 'CZE',\n    'Slovakia': 'SVK',\n    'Hungary': 'HUN',\n    'Slovenia': 'SVN',\n    'Croatia': 'HRV',\n    'Bosnia and Herzegovina': 'BIH',\n    'Serbia': 'SRB',\n    'Montenegro': 'MNE',\n    'North Macedonia': 'MKD',\n    'Albania': 'ALB',\n    'Greece': 'GRC',\n    'Bulgaria': 'BGR',\n    'Moldova': 'MDA',\n    'Belarus': 'BLR',\n    'Lithuania': 'LTU',\n    'Latvia': 'LVA',\n    'Estonia': 'EST',\n    'Finland': 'FIN',\n    'Sweden': 'SWE',\n    'Norway': 'NOR',\n    'Denmark': 'DNK',\n    'Iceland': 'ISL',\n    'Japan': 'JPN',\n    'South Korea': 'KOR',\n    'North Korea': 'PRK',\n    'Mongolia': 'MNG',\n    'Kazakhstan': 'KAZ',\n    'Kyrgyzstan': 'KGZ',\n    'Tajikistan': 'TJK',\n    'Turkmenistan': 'TKM',\n    'Uzbekistan': 'UZB',\n    'Afghanistan': 'AFG',\n    'Bangladesh': 'BGD',\n    'Bhutan': 'BTN',\n    'Nepal': 'NPL',\n    'Sri Lanka': 'LKA',\n    'Maldives': 'MDV',\n    'Myanmar': 'MMR',\n    'Laos': 'LAO',\n    'Vietnam': 'VNM',\n    'Cambodia': 'KHM',\n    'Malaysia': 'MYS',\n    'Singapore': 'SGP',\n    'Brunei': 'BRN',\n    'East Timor': 'TLS',\n    'Papua New Guinea': 'PNG',\n    'Australia': 'AUS',\n    'New Zealand': 'NZL',\n    'Fiji': 'FJI',\n    'Solomon Islands': 'SLB',\n    'Vanuatu': 'VUT',\n    'New Caledonia': 'NCL',\n    'French Polynesia': 'PYF',\n    'Samoa': 'WSM',\n    'Tonga': 'TON',\n    'Kiribati': 'KIR',\n    'Tuvalu': 'TUV',\n    'Nauru': 'NRU',\n    'Palau': 'PLW',\n    'Marshall Islands': 'MHL',\n    'Micronesia': 'FSM',\n    'Czechia': 'CZE',\n    'T√ºrkiye': 'TUR',\n    'Turkey': 'TUR',\n    'Viet Nam': 'VNM',\n    'United Kingdom of Great Britain and Northern Ireland': 'GBR',\n    'Bolivia (Plurinational State of)': 'BOL',\n    'Venezuela (Bolivarian Republic of)': 'VEN',\n    'Iran (Islamic Republic of)': 'IRN',\n    'Korea, Republic of': 'KOR',\n    'Democratic People\\'s Republic of Korea': 'PRK',\n    'Lao People\\'s Democratic Republic': 'LAO',\n    'Timor-Leste': 'TLS',\n    'C√¥te d\\'Ivoire': 'CIV',\n    'United Republic of Tanzania': 'TZA',\n    'Syrian Arab Republic': 'SYR'\n  }\n  return mapping[countryName] || countryName.substring(0, 3).toUpperCase()\n}\n\n// Enhanced country name mapping for better matching\nconst normalizeCountryName = (name) => {\n  if (!name) return ''\n  \n  const nameMapping = {\n    'United States': 'United States of America',\n    'USA': 'United States of America', \n    'US': 'United States of America',\n    'UK': 'United Kingdom',\n    'Britain': 'United Kingdom',\n    'South Korea': 'Republic of Korea',\n    'North Korea': 'Democratic People\\'s Republic of Korea',\n    'Russia': 'Russian Federation',\n    'Iran': 'Iran (Islamic Republic of)',\n    'Syria': 'Syrian Arab Republic',\n    'Venezuela': 'Venezuela (Bolivarian Republic of)',\n    'Bolivia': 'Bolivia (Plurinational State of)',\n    'Tanzania': 'United Republic of Tanzania',\n    'Congo': 'Republic of the Congo',\n    'Democratic Republic of the Congo': 'Democratic Republic of the Congo',\n    'DRC': 'Democratic Republic of the Congo',\n    'Czech Republic': 'Czechia',\n    'Macedonia': 'North Macedonia',\n    'Burma': 'Myanmar',\n    'East Timor': 'Timor-Leste',\n    'Cape Verde': 'Cabo Verde',\n    'Ivory Coast': 'C√¥te d\\'Ivoire',\n    'Swaziland': 'Eswatini'\n  }\n  \n  return nameMapping[name] || name\n}\n\n// Direct production data update (working approach)\nconst updateMapWithProductionDataDirect = (container) => {\n  const processedData = getProcessedProductionData()\n  if (!processedData.length) return\n  \n  console.log('üé® WorldMap: Updating production data directly...')\n  applyProductionDataDirect(container, processedData)\n  \n  // Create/update legend after data is applied\n  const svg = d3.select(svgContainerRef.value).select('svg')\n  if (!svg.empty() && legendScale.value) {\n    createLegend(svg)\n  }\n}\n\n// Static version for non-reactive updates\nconst updateMapWithProductionDataStatic = () => {\n  const containerElement = svgContainerRef.value\n  if (!containerElement) return\n  \n  const container = d3.select(containerElement).select('.map-container')\n  if (!container.empty()) {\n    updateMapWithProductionDataDirect(container)\n  }\n}\n\n// Apply production data directly\nconst applyProductionDataDirect = (container, data) => {\n  if (!data || !Array.isArray(data)) return\n\n  console.log('üìä WorldMap: Applying production data:', data.length, 'entries')\n  console.log('üìä WorldMap: Sample data:', data.slice(0, 5))\n\n  // Create data lookup\n  const dataByCountry = new Map()\n  const dataByCountryCode = new Map()\n  const dataByNormalizedName = new Map()\n  \n  data.forEach(d => {\n    if (d.value > 0) {\n      dataByCountry.set(d.country.toLowerCase(), d.value)\n      if (d.countryCode) {\n        dataByCountryCode.set(d.countryCode, d.value)\n      }\n      // Also store by normalized name\n      const normalized = normalizeCountryName(d.country).toLowerCase()\n      dataByNormalizedName.set(normalized, d.value)\n    }\n  })\n  \n  console.log('üó∫Ô∏è WorldMap: Data maps created - Countries:', dataByCountry.size, 'Codes:', dataByCountryCode.size)\n\n  // Create color scale with fixed domain for consistency across years\n  const values = data.filter(d => d.value > 0).map(d => d.value)\n  if (values.length > 0) {\n    // Update legend domain if needed\n    const maxValue = d3.max(values)\n    const minValue = d3.min(values)\n    \n    // Create domain with better distribution\n    legendDomain.value = [0, maxValue]\n    \n    console.log('üé® WorldMap: Color scale domain:', legendDomain.value)\n    console.log('üé® WorldMap: Min value:', minValue, 'Max value:', maxValue)\n    \n    // Use quantile scale for better distribution of colors\n    // This ensures equal number of countries in each color bin\n    const sortedValues = values.sort((a, b) => a - b)\n    \n    colorScale = d3.scaleQuantile()\n      .domain(sortedValues)\n      .range(greenColorScheme)\n    \n    console.log('üé® WorldMap: Quantile thresholds:', colorScale.quantiles())\n    \n    // Test the scale\n    console.log('üé® WorldMap: Test colors - 0:', colorScale(0), maxValue/2 + ':', colorScale(maxValue/2), maxValue + ':', colorScale(maxValue))\n    \n    // Update legend scale\n    legendScale.value = colorScale\n  }\n\n  // Update country colors\n  container.selectAll('.country')\n    .transition()\n    .duration(750)\n    .attr('fill', (d) => {\n      // Try multiple properties for country identification\n      const countryName = (d.properties.name || d.properties.NAME || d.properties.admin || '').toLowerCase()\n      const countryCode = d.properties.iso_a3 || d.properties.ISO_A3 || d.properties.adm0_a3 || d.properties.ADM0_A3\n      const normalizedName = normalizeCountryName(d.properties.name || d.properties.NAME || '').toLowerCase()\n      \n      // Try to find value by different keys\n      let value = null\n      if (countryCode && dataByCountryCode.has(countryCode)) {\n        value = dataByCountryCode.get(countryCode)\n      } else if (dataByNormalizedName.has(normalizedName)) {\n        value = dataByNormalizedName.get(normalizedName)\n      } else if (dataByCountry.has(countryName)) {\n        value = dataByCountry.get(countryName)\n      }\n      \n      if (value && colorScale) {\n        const color = colorScale(value)\n        // Log first few countries to debug\n        if (container.selectAll('.country').nodes().indexOf(d) < 5) {\n          console.log(`üé® Country: ${countryName}, Code: ${countryCode}, Value: ${value}, Color: ${color}`)\n        }\n        return color\n      }\n      // Return theme-appropriate default color for countries without data\n      const isDarkMode = document.documentElement.classList.contains('dark')\n      return isDarkMode ? '#374151' : '#e5e7eb' // gray-700 : gray-200\n    })\n    .attr('opacity', (d) => {\n      const countryName = (d.properties.name || d.properties.NAME || d.properties.admin || '').toLowerCase()\n      const countryCode = d.properties.iso_a3 || d.properties.ISO_A3 || d.properties.adm0_a3 || d.properties.ADM0_A3\n      const normalizedName = normalizeCountryName(d.properties.name || d.properties.NAME || '').toLowerCase()\n      \n      const hasData = (countryCode && dataByCountryCode.has(countryCode)) || \n                      dataByNormalizedName.has(normalizedName) ||\n                      dataByCountry.has(countryName)\n      return hasData ? 1 : 0.6\n    })\n}\n\n// Update map with production data (keeping original for compatibility)\nconst updateMapWithProductionData = () => {\n  const processedData = getProcessedProductionData()\n  if (!processedData.length) return\n\n  // Use direct approach instead of queueing\n  const container = d3.select(svgContainerRef.value).select('.map-container')\n  if (!container.empty()) {\n    updateMapWithProductionDataDirect(container)\n  }\n}\n\n// Apply production data to map\nconst applyProductionData = (container, data) => {\n  if (!data || !Array.isArray(data)) return\n\n  console.log('üó∫Ô∏è WorldMap: Applying production data to map:', data)\n\n  // Create data lookup by both country name and country code for better matching\n  const dataByCountry = new Map()\n  const dataByCountryCode = new Map()\n  const dataByNormalizedName = new Map()\n  \n  data.forEach(d => {\n    if (d.value > 0) {\n      // Store by original name (lowercase)\n      dataByCountry.set(d.country.toLowerCase(), d.value)\n      // Store by country code\n      dataByCountryCode.set(d.countryCode, d.value)\n      // Store by normalized name (lowercase)\n      const normalizedName = normalizeCountryName(d.country).toLowerCase()\n      dataByNormalizedName.set(normalizedName, d.value)\n    }\n  })\n\n  console.log('üó∫Ô∏è WorldMap: Data lookup maps created:', { \n    countryNames: Array.from(dataByCountry.keys()), \n    countryCodes: Array.from(dataByCountryCode.keys()),\n    normalizedNames: Array.from(dataByNormalizedName.keys())\n  })\n\n  // Create color scale\n  const values = Array.from(dataByCountry.values()).filter(v => v > 0)\n  if (values.length > 0) {\n    const extent = d3.extent(values)\n    const colorScheme = mapConfig.value.colorScheme\n    \n    colorScale = d3.scaleQuantize()\n      .domain(extent)\n      .range(colorScheme)\n      \n    console.log('üó∫Ô∏è WorldMap: Color scale created with domain:', extent)\n  }\n\n  // Update country colors with smooth transition\n  const countries = container.selectAll('.country')\n  console.log('üó∫Ô∏è WorldMap: Found', countries.size(), 'country elements to update')\n  \n  countries.transition()\n    .duration(750)\n    .attr('fill', (d) => {\n      // Try multiple properties for country identification\n      const countryName = (d.properties.name || d.properties.NAME || d.properties.admin || '').toLowerCase()\n      const countryCode = d.properties.iso_a3 || d.properties.adm0_a3\n      const normalizedName = normalizeCountryName(d.properties.name || d.properties.admin || '').toLowerCase()\n      \n      // Look up by country code first, then by normalized name, then by original name\n      let value = dataByCountryCode.get(countryCode) || \n                  dataByNormalizedName.get(normalizedName) ||\n                  dataByCountry.get(countryName)\n      \n      if (value && colorScale) {\n        console.log(`üó∫Ô∏è WorldMap: Coloring ${countryName}/${countryCode} with value ${value}`)\n        return colorScale(value)\n      }\n      // Return theme-appropriate default color for countries without data\n      const isDarkMode = document.documentElement.classList.contains('dark')\n      return isDarkMode ? '#374151' : '#e5e7eb' // gray-700 : gray-200\n    })\n    .attr('opacity', (d) => {\n      const countryName = (d.properties.name || d.properties.NAME || d.properties.admin || '').toLowerCase()\n      const countryCode = d.properties.iso_a3 || d.properties.adm0_a3\n      const normalizedName = normalizeCountryName(d.properties.name || d.properties.admin || '').toLowerCase()\n      \n      const hasData = dataByCountryCode.has(countryCode) || \n                      dataByNormalizedName.has(normalizedName) ||\n                      dataByCountry.has(countryName)\n      return hasData ? 1 : 0.6\n    })\n}\n\n// Event handlers\nconst handleCountryClick = (event, d) => {\n  const countryName = d.properties.name\n  const countryCode = d.properties.iso_a3\n  \n  uiStore.setSelectedCountry(countryName)\n  emit('countryClick', countryCode)\n  \n  // Zoom to country\n  zoomToCountry(d)\n}\n\nconst handleCountryMouseover = (event, d) => {\n  const countryName = d.properties.name || d.properties.NAME || d.properties.admin\n  const countryCode = d.properties.iso_a3 || d.properties.adm0_a3\n  const normalizedName = normalizeCountryName(countryName || '')\n  \n  // Add visual hover effect\n  d3.select(event.currentTarget)\n    .transition()\n    .duration(100)\n    .attr('stroke', '#3b82f6')\n    .attr('stroke-width', 2)\n    .style('filter', 'brightness(1.1)')\n  \n  // Find country data by code, normalized name, or original name\n  const processedData = getProcessedProductionData()\n  const countryData = processedData.find(\n    item => item.countryCode === countryCode || \n             item.country.toLowerCase() === countryName?.toLowerCase() ||\n             item.country.toLowerCase() === normalizedName?.toLowerCase()\n  )\n  \n  // Format tooltip content\n  let content = `<strong>${countryName}</strong><br/>`\n  if (countryData && countryData.value > 0) {\n    const formattedValue = d3.format(',.0f')(countryData.value)\n    const productName = props.selectedProduct?.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()) || 'Produkt'\n    const metricLabel = props.selectedMetric === 'production' ? 'Produktion' :\n                       props.selectedMetric === 'import_quantity' ? 'Import' :\n                       props.selectedMetric === 'export_quantity' ? 'Export' :\n                       'Inlandsversorgung'\n    content += `<span style=\"color: #fbbf24\">${productName}</span><br/>`\n    content += `${metricLabel}: <strong>${formattedValue}</strong> ${countryData.unit || 't'}<br/>`\n    content += `<span style=\"color: #9ca3af; font-size: 12px\">Jahr: ${props.selectedYear}</span>`\n  } else {\n    content += '<span style=\"color: #ef4444\">Keine Daten verf√ºgbar</span>'\n  }\n  \n  // Show tooltip\n  tooltip.show(event, d, () => content)\n  \n  emit('countryHover', countryCode)\n}\n\nconst handleCountryMouseout = (event, d) => {\n  // Get theme-appropriate stroke color\n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const defaultStroke = isDarkMode ? '#4B5563' : '#ffffff' // gray-600 : white\n  \n  // Remove visual hover effect\n  d3.select(event.currentTarget)\n    .transition()\n    .duration(100)\n    .attr('stroke', defaultStroke)\n    .attr('stroke-width', 0.5)\n    .style('filter', 'none')\n  \n  tooltip.hide()\n  emit('countryHover', null)\n}\n\n// Zoom to specific country\nconst zoomToCountry = (countryData) => {\n  if (!path || !zoom) return\n\n  const svg = d3.select(svgContainerRef.value).select('svg')\n  if (svg.empty()) return\n\n  const bounds = path.bounds(countryData)\n  const dx = bounds[1][0] - bounds[0][0]\n  const dy = bounds[1][1] - bounds[0][1]\n  const x = (bounds[0][0] + bounds[1][0]) / 2\n  const y = (bounds[0][1] + bounds[1][1]) / 2\n  \n  // Get current SVG dimensions\n  const svgNode = svg.node()\n  const width = svgNode ? svgNode.clientWidth : props.width\n  const height = svgNode ? svgNode.clientHeight : props.height\n  \n  const scale = Math.min(8, 0.9 / Math.max(dx / width, dy / height))\n  const translate = [width / 2 - scale * x, height / 2 - scale * y]\n\n  svg.transition()\n    .duration(750)\n    .call(zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale))\n}\n\n// Reset zoom\nconst resetZoom = () => {\n  const svg = d3.select(svgContainerRef.value).select('svg')\n  if (!svg.empty() && zoom) {\n    svg.transition()\n      .duration(750)\n      .call(zoom.transform, d3.zoomIdentity)\n  }\n}\n\n// Theme observer for dynamic styling updates\nconst updateThemeStyles = () => {\n  const container = d3.select(svgContainerRef.value)\n  if (container.empty()) return\n  \n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const defaultFill = isDarkMode ? '#374151' : '#e5e7eb' // gray-700 : gray-200\n  const defaultStroke = isDarkMode ? '#4B5563' : '#ffffff' // gray-600 : white\n  \n  // Update country styling\n  container.selectAll('.country')\n    .each(function(d) {\n      const element = d3.select(this)\n      const currentFill = element.attr('fill')\n      \n      // Only update if it's the default color (not a data-driven color)\n      if (currentFill === '#e5e7eb' || currentFill === '#374151') {\n        element.attr('fill', defaultFill)\n      }\n      element.attr('stroke', defaultStroke)\n    })\n}\n\nconst themeObserver = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n      updateThemeStyles()\n    }\n  })\n})\n\n// Resize handler (simplified)\nconst handleResize = () => {\n  // Could implement resize logic here if needed\n  console.log('üîÑ WorldMap: Resize triggered')\n}\n\n// Watchers\nwatch([() => props.selectedProduct, () => props.selectedYear, () => props.selectedMetric], async () => {\n  console.log('üîÑ WorldMap: Product/Year/Metric changed, reloading data...')\n  await loadProductionData()\n}, { immediate: true })\n\n// Removed watcher - using static updates instead\n\n// Removed - no longer needed\n\n// Removed - no longer needed\n\n// Initialize on mount with better timing\nonMounted(async () => {\n  console.log('üîß WorldMap: onMounted called')\n  \n  // Wait for DOM to be fully ready\n  await nextTick()\n  \n  // Add a small delay to ensure parent containers are sized\n  setTimeout(async () => {\n    // Use requestAnimationFrame to ensure DOM is stable\n    requestAnimationFrame(async () => {\n      try {\n        console.log('‚è∞ WorldMap: RequestAnimationFrame fired, attempting initialization...')\n        console.log('üìè WorldMap: Initial container check:', {\n          containerRef: !!containerRef.value,\n          svgContainerRef: !!svgContainerRef.value,\n          containerSize: containerRef.value?.getBoundingClientRect(),\n          svgContainerSize: svgContainerRef.value?.getBoundingClientRect()\n        })\n        await initializeMap()\n        console.log('üìä WorldMap: Loading production data from onMounted...')\n        await loadProductionData()\n        \n        // Start observing theme changes\n        if (document.documentElement) {\n          themeObserver.observe(document.documentElement, {\n            attributes: true,\n            attributeFilter: ['class']\n          })\n        }\n        \n        console.log('‚úÖ WorldMap: onMounted initialization complete')\n      } catch (error) {\n        console.error('‚ùå WorldMap: Error in onMounted initialization:', error)\n        isInitialized.value = false\n      }\n    })\n  }, 100) // 100ms delay to ensure parent layout is complete\n})\n\n// Cleanup on unmount\nonUnmounted(() => {\n  if (tooltip && tooltip.destroy) {\n    tooltip.destroy()\n  }\n  themeObserver.disconnect()\n  vizStore.setMapInstance(null)\n})\n\n// Exposed methods\ndefineExpose({\n  resetZoom,\n  loadProductionData,\n  zoomToCountry\n})\n</script>\n\n<template>\n  <div \n    ref=\"containerRef\"\n    class=\"chart-container relative w-full h-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700\"\n    style=\"min-height: 600px; width: 100%; height: 100%;\"\n  >\n    <!-- Loading overlay -->\n    <LoadingSpinner\n      v-if=\"isLoading\"\n      :overlay=\"true\"\n      :centered=\"true\"\n      text=\"L√§dt Karte...\"\n      size=\"md\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      class=\"absolute inset-0 bg-error-50 dark:bg-error-900/20 flex items-center justify-center z-10\"\n    >\n      <div class=\"text-center\">\n        <p class=\"text-error-600 dark:text-error-400 mb-3\">{{ error }}</p>\n        <BaseButton\n          @click=\"initializeMap\"\n          variant=\"danger\"\n          size=\"sm\"\n        >\n          Erneut versuchen\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Map controls -->\n    <div class=\"absolute top-4 right-4 z-20 flex flex-col space-y-2\">\n      <BaseButton\n        @click=\"resetZoom\"\n        variant=\"secondary\"\n        size=\"sm\"\n        :icon=\"true\"\n        class=\"!p-2\"\n        title=\"Zoom zur√ºcksetzen\"\n      >\n        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n      </BaseButton>\n    </div>\n\n    <!-- Map SVG Container with explicit sizing -->\n    <!-- Remove v-once from container to ensure ref works properly -->\n    <div \n      ref=\"svgContainerRef\"\n      class=\"map-svg-container\" \n      style=\"width: 100%; height: 100%; min-height: 600px; position: relative;\"\n    >\n      <!-- Debug message -->\n      <div v-if=\"!isInitialized && !isLoading && !error\" class=\"absolute inset-0 flex items-center justify-center text-gray-500\">\n        <p>Karte wird initialisiert...</p>\n      </div>\n    </div>\n\n    <!-- Legend is rendered inside the SVG via D3 -->\n  </div>\n</template>\n\n<style scoped>\n.chart-container {\n  width: 100%;\n  height: 100%;\n  min-height: 600px;\n  position: relative;\n}\n\n.map-svg-container {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.world-map-svg {\n  width: 100% !important;\n  height: 100% !important;\n  display: block;\n}\n\n.country {\n  transition: fill 0.3s ease, opacity 0.3s ease, stroke 0.1s ease, stroke-width 0.1s ease;\n}\n\n/* Ensure proper rendering within parent containers */\n:deep(.map-container) {\n  width: 100%;\n  height: 100%;\n}\n\n/* Global tooltip styles (unscoped) */\n:global(.worldmap-tooltip) {\n  max-width: 300px;\n  line-height: 1.4;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n:global(.worldmap-tooltip strong) {\n  font-weight: 600;\n  color: #fbbf24;\n}\n</style>","<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\nimport { useDataStore } from '@/stores/useDataStore'\nimport BaseButton from '@/components/ui/BaseButton.vue'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner.vue'\nimport * as d3 from 'd3'\n\ninterface Props {\n  width?: number\n  height?: number\n  selectedCountry?: string\n  selectedProduct?: string\n  selectedMetric?: string\n  showGrid?: boolean\n  showPoints?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  width: 600,\n  height: 400,\n  selectedCountry: '',\n  selectedProduct: 'Wheat and products',\n  selectedMetric: 'production',\n  showGrid: true,\n  showPoints: true\n})\n\nconst emit = defineEmits<{\n  pointHover: [data: any | null]\n  pointClick: [data: any]\n}>()\n\n// Store\nconst dataStore = useDataStore()\n\n// Refs\nconst svgContainerRef = ref<HTMLDivElement>()\n\n// State\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\nconst chartData = ref<any[]>([])\n\n// Chart configuration\nconst margin = { top: 20, right: 30, bottom: 40, left: 60 }\n\n// D3 variables\nlet svg: d3.Selection<SVGSVGElement, unknown, null, undefined>\nlet g: d3.Selection<SVGGElement, unknown, null, undefined>\nlet xScale: d3.ScaleTime<number, number>\nlet yScale: d3.ScaleLinear<number, number>\nlet line: d3.Line<any>\nlet tooltip: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>\nlet resizeObserver: ResizeObserver\n\n// Initialize chart\nconst initializeChart = () => {\n  if (!svgContainerRef.value) return\n  \n  console.log('üìà TimeseriesChart: Initializing chart...')\n  \n  // Clear existing chart\n  d3.select(svgContainerRef.value).selectAll('*').remove()\n  \n  // Get full parent dimensions\n  const containerRect = svgContainerRef.value.getBoundingClientRect()\n  const width = containerRect.width || 600\n  const height = containerRect.height || 400\n  const innerWidth = width - margin.left - margin.right\n  const innerHeight = height - margin.top - margin.bottom\n  \n  console.log('üìà TimeseriesChart: Chart dimensions:', { width, height, innerWidth, innerHeight })\n\n  // Create SVG with responsive sizing\n  svg = d3.select(svgContainerRef.value)\n    .append('svg')\n    .attr('width', '100%')\n    .attr('height', '100%')\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('preserveAspectRatio', 'xMidYMid meet')\n    .attr('class', 'timeseries-chart')\n\n  // Create main group\n  g = svg.append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`)\n\n  // Setup scales\n  xScale = d3.scaleTime().range([0, innerWidth])\n  yScale = d3.scaleLinear().range([innerHeight, 0])\n\n  // Setup line generator\n  line = d3.line<any>()\n    .x(d => xScale(new Date(d.year, 0, 1)))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX)\n\n  // Add axes groups\n  g.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0,${innerHeight})`)\n\n  g.append('g')\n    .attr('class', 'y-axis')\n\n  // Add grid if enabled\n  if (props.showGrid) {\n    g.append('g')\n      .attr('class', 'grid x-grid')\n      .attr('transform', `translate(0,${innerHeight})`)\n\n    g.append('g')\n      .attr('class', 'grid y-grid')\n  }\n\n  // Add axis labels\n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const labelColor = isDarkMode ? '#9CA3AF' : '#374151' // gray-400 : gray-700\n\n  g.append('text')\n    .attr('class', 'x-label')\n    .attr('text-anchor', 'middle')\n    .attr('x', innerWidth / 2)\n    .attr('y', innerHeight + 35)\n    .text('Jahr')\n    .style('font-size', '12px')\n    .style('fill', labelColor)\n\n  g.append('text')\n    .attr('class', 'y-label')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -innerHeight / 2)\n    .attr('y', -40)\n    .text(getMetricLabel())\n    .style('font-size', '12px')\n    .style('fill', labelColor)\n\n  // Create tooltip with green theme\n  tooltip = d3.select('body')\n    .append('div')\n    .attr('class', 'timeseries-tooltip')\n    .style('position', 'absolute')\n    .style('padding', '8px 12px')\n    .style('background', 'rgba(6, 78, 59, 0.95)') // emerald-800 with opacity\n    .style('color', 'white')\n    .style('border', '1px solid #10b981') // emerald-500\n    .style('border-radius', '6px')\n    .style('font-size', '12px')\n    .style('font-weight', '500')\n    .style('pointer-events', 'none')\n    .style('opacity', 0)\n    .style('z-index', 1000)\n    .style('box-shadow', '0 4px 6px -1px rgba(0, 0, 0, 0.1)')\n\n  // Setup resize observer\n  setupResizeObserver()\n  \n  console.log('‚úÖ TimeseriesChart: Chart initialized')\n}\n\n// Setup resize observer for responsive behavior\nconst setupResizeObserver = () => {\n  if (!svgContainerRef.value || !window.ResizeObserver) return\n  \n  resizeObserver = new ResizeObserver(() => {\n    if (chartData.value.length > 0) {\n      updateChart()\n    }\n  })\n  \n  resizeObserver.observe(svgContainerRef.value)\n}\n\n// Get metric label for Y-axis\nconst getMetricLabel = () => {\n  switch (props.selectedMetric) {\n    case 'production': return 'Produktion (t)'\n    case 'import_quantity': return 'Import (t)'\n    case 'export_quantity': return 'Export (t)'\n    case 'domestic_supply_quantity': return 'Inlandsversorgung (t)'\n    default: return 'Wert (t)'\n  }\n}\n\n// Load and prepare data\nconst loadData = async () => {\n  if (!props.selectedProduct) return\n\n  try {\n    isLoading.value = true\n    error.value = null\n\n    // Use timeseries data if available\n    if (dataStore.timeseriesData) {\n      // For individual products, use the product name directly (no normalization needed)\n      const normalizedProduct = props.selectedProduct\n      \n      if (dataStore.timeseriesData[normalizedProduct]) {\n        const productTimeseries = dataStore.timeseriesData[normalizedProduct]\n        const processedData: any[] = []\n        \n        if (props.selectedCountry && productTimeseries[props.selectedCountry]) {\n          // Single country data\n          const countryData = productTimeseries[props.selectedCountry]\n          countryData.forEach((yearData: any) => {\n            const metricKey = props.selectedMetric === 'production' ? 'production' :\n                             props.selectedMetric === 'import_quantity' ? 'imports' :\n                             props.selectedMetric === 'export_quantity' ? 'exports' :\n                             'domestic_supply'\n            \n            const value = yearData[metricKey] || 0\n            if (value > 0) {\n              processedData.push({\n                year: yearData.year,\n                value: value,\n                country: props.selectedCountry,\n                product: normalizedProduct,\n                unit: yearData.unit || 't'\n              })\n            }\n          })\n        } else {\n          // Global aggregated data\n          const yearlyTotals = new Map()\n          \n          Object.entries(productTimeseries).forEach(([country, countryData]: [string, any]) => {\n            countryData.forEach((yearData: any) => {\n              const metricKey = props.selectedMetric === 'production' ? 'production' :\n                               props.selectedMetric === 'import_quantity' ? 'imports' :\n                               props.selectedMetric === 'export_quantity' ? 'exports' :\n                               'domestic_supply'\n              \n              const value = yearData[metricKey] || 0\n              if (value > 0) {\n                const year = yearData.year\n                const currentTotal = yearlyTotals.get(year) || 0\n                yearlyTotals.set(year, currentTotal + value)\n              }\n            })\n          })\n          \n          yearlyTotals.forEach((value, year) => {\n            processedData.push({\n              year: year,\n              value: value,\n              country: 'Global',\n              product: normalizedProduct,\n              unit: 't'\n            })\n          })\n        }\n        \n        chartData.value = processedData.sort((a, b) => a.year - b.year)\n        console.log(`üìà TimeseriesChart: Loaded ${processedData.length} data points for ${normalizedProduct}`)\n        updateChart()\n        return\n      }\n    }\n    \n    // Fallback to production data loading if timeseries not available\n    const availableYears = dataStore.availableYears || [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\n    const dataPromises = availableYears.map(year => \n      dataStore.loadProductionData(props.selectedProduct, year)\n        .then(data => ({ year, data }))\n        .catch(err => ({ year, error: err }))\n    )\n\n    const results = await Promise.all(dataPromises)\n    const processedData: any[] = []\n    \n    results.forEach(({ year, data, error }) => {\n      if (error) {\n        console.warn(`Failed to load data for ${year}:`, error)\n        return\n      }\n\n      if (data?.data) {\n        data.data.forEach((item: any) => {\n          if (props.selectedCountry) {\n            if (item.country === props.selectedCountry && item.value > 0) {\n              processedData.push({\n                year,\n                value: item.value,\n                country: item.country,\n                product: item.product,\n                unit: item.unit\n              })\n            }\n          } else {\n            const existingEntry = processedData.find(d => d.year === year)\n            if (existingEntry) {\n              existingEntry.value += item.value\n            } else if (item.value > 0) {\n              processedData.push({\n                year,\n                value: item.value,\n                country: 'Global',\n                product: item.product,\n                unit: item.unit\n              })\n            }\n          }\n        })\n      }\n    })\n\n    chartData.value = processedData\n    updateChart()\n\n  } catch (err) {\n    error.value = 'Fehler beim Laden der Zeitreihen-Daten'\n    console.error('Timeseries data loading error:', err)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Update chart with current data\nconst updateChart = () => {\n  if (!g || !chartData.value.length) return\n  \n  console.log('üìà TimeseriesChart: Updating chart with', chartData.value.length, 'data points')\n  \n  const data = chartData.value.filter(d => d.value > 0).sort((a, b) => a.year - b.year)\n  if (!data.length) return\n\n  // Get current dimensions from container\n  const containerRect = svgContainerRef.value?.getBoundingClientRect()\n  const width = containerRect?.width || 600\n  const height = containerRect?.height || 400\n  const innerWidth = width - margin.left - margin.right\n  const innerHeight = height - margin.top - margin.bottom\n\n  // Update viewBox for responsive scaling\n  svg.attr('viewBox', `0 0 ${width} ${height}`)\n\n  // Update scale domains\n  const years = data.map(d => new Date(d.year, 0, 1))\n  const values = data.map(d => d.value)\n\n  xScale.domain(d3.extent(years) as [Date, Date])\n  yScale.domain([0, d3.max(values) as number])\n\n  // Get theme colors\n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const axisColor = isDarkMode ? '#9CA3AF' : '#374151' // gray-400 : gray-700\n  const gridColor = isDarkMode ? '#4B5563' : '#E5E7EB' // gray-600 : gray-200\n\n  // Update axes\n  const xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.timeFormat('%Y'))\n    .tickSizeOuter(0)\n  const yAxis = d3.axisLeft(yScale)\n    .tickFormat(d3.format('.2s'))\n    .tickSizeOuter(0)\n\n  const xAxisSelection = g.select('.x-axis')\n    .transition()\n    .duration(750)\n    .call(xAxis)\n\n  const yAxisSelection = g.select('.y-axis')\n    .transition()\n    .duration(750)\n    .call(yAxis)\n\n  // Style axes\n  xAxisSelection.selectAll('path').style('stroke', axisColor).style('stroke-width', '1px')\n  xAxisSelection.selectAll('line').style('stroke', axisColor).style('stroke-width', '1px')\n  xAxisSelection.selectAll('text').style('fill', axisColor).style('font-size', '12px')\n\n  yAxisSelection.selectAll('path').style('stroke', axisColor).style('stroke-width', '1px')\n  yAxisSelection.selectAll('line').style('stroke', axisColor).style('stroke-width', '1px')\n  yAxisSelection.selectAll('text').style('fill', axisColor).style('font-size', '12px')\n\n  // Update grid\n  if (props.showGrid) {\n    const xGridSelection = g.select('.x-grid')\n      .transition()\n      .duration(750)\n      .call(d3.axisBottom(xScale)\n        .tickSize(-innerHeight)\n        .tickFormat(() => '')\n        .tickSizeOuter(0)\n      )\n\n    const yGridSelection = g.select('.y-grid')\n      .transition()\n      .duration(750)\n      .call(d3.axisLeft(yScale)\n        .tickSize(-innerWidth)\n        .tickFormat(() => '')\n        .tickSizeOuter(0)\n      )\n\n    // Style grid lines\n    xGridSelection.selectAll('path').style('stroke', 'none')\n    xGridSelection.selectAll('line').style('stroke', gridColor).style('stroke-width', '1px').style('opacity', 0.5)\n\n    yGridSelection.selectAll('path').style('stroke', 'none')\n    yGridSelection.selectAll('line').style('stroke', gridColor).style('stroke-width', '1px').style('opacity', 0.5)\n  }\n\n  // Draw line with green color scheme\n  const linePath = g.selectAll('.line-path').data([data])\n  \n  linePath.enter()\n    .append('path')\n    .attr('class', 'line-path')\n    .attr('fill', 'none')\n    .attr('stroke', '#059669') // emerald-600\n    .attr('stroke-width', 2.5)\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-linecap', 'round')\n    .merge(linePath)\n    .transition()\n    .duration(750)\n    .attr('d', line)\n\n  linePath.exit().remove()\n\n  // Draw points if enabled\n  if (props.showPoints) {\n    const points = g.selectAll('.data-point').data(data, (d: any) => d.year)\n    \n    points.enter()\n      .append('circle')\n      .attr('class', 'data-point')\n      .attr('r', 0)\n      .attr('fill', '#047857') // emerald-700\n      .attr('stroke', '#10b981') // emerald-500\n      .attr('stroke-width', 2)\n      .style('cursor', 'pointer')\n      .on('mouseover', handlePointMouseover)\n      .on('mouseout', handlePointMouseout)\n      .on('click', handlePointClick)\n      .merge(points)\n      .transition()\n      .duration(750)\n      .attr('r', 5)\n      .attr('cx', d => xScale(new Date(d.year, 0, 1)))\n      .attr('cy', d => yScale(d.value))\n\n    points.exit()\n      .transition()\n      .duration(500)\n      .attr('r', 0)\n      .remove()\n  }\n\n  // Update Y-axis label\n  g.select('.y-label')\n    .text(getMetricLabel())\n    .style('fill', axisColor)\n\n  // Update X-axis label\n  g.select('.x-label')\n    .style('fill', axisColor)\n}\n\n// Event handlers\nconst handlePointMouseover = (event: MouseEvent, d: any) => {\n  // Highlight the hovered point\n  d3.select(event.target as Element)\n    .transition()\n    .duration(150)\n    .attr('r', 7)\n    .attr('stroke-width', 3)\n    .attr('stroke', '#34d399') // emerald-400\n\n  tooltip\n    .style('opacity', 1)\n    .html(`\n      <strong>${d.country || 'Global'}</strong><br/>\n      Jahr: ${d.year}<br/>\n      ${getMetricLabel()}: ${d3.format(',.0f')(d.value)} ${d.unit || 't'}\n    `)\n    .style('left', (event.pageX + 10) + 'px')\n    .style('top', (event.pageY - 10) + 'px')\n  \n  emit('pointHover', d)\n}\n\nconst handlePointMouseout = (event: MouseEvent) => {\n  // Reset point to normal size\n  d3.select(event.target as Element)\n    .transition()\n    .duration(150)\n    .attr('r', 5)\n    .attr('stroke-width', 2)\n    .attr('stroke', '#10b981') // emerald-500\n\n  tooltip.style('opacity', 0)\n  emit('pointHover', null)\n}\n\nconst handlePointClick = (event: MouseEvent, d: any) => {\n  emit('pointClick', d)\n}\n\n// Cleanup function\nconst cleanup = () => {\n  if (resizeObserver) {\n    resizeObserver.disconnect()\n  }\n  if (tooltip) {\n    tooltip.remove()\n  }\n  if (svgContainerRef.value) {\n    d3.select(svgContainerRef.value).selectAll('*').remove()\n  }\n}\n\n// Update styling based on theme\nconst updateThemeStyles = () => {\n  if (!g) return\n  \n  const isDarkMode = document.documentElement.classList.contains('dark')\n  const axisColor = isDarkMode ? '#9CA3AF' : '#374151' // gray-400 : gray-700\n  const gridColor = isDarkMode ? '#4B5563' : '#E5E7EB' // gray-600 : gray-200\n  \n  // Update axis styling\n  g.select('.x-axis').selectAll('path').style('stroke', axisColor)\n  g.select('.x-axis').selectAll('line').style('stroke', axisColor)\n  g.select('.x-axis').selectAll('text').style('fill', axisColor)\n  \n  g.select('.y-axis').selectAll('path').style('stroke', axisColor)\n  g.select('.y-axis').selectAll('line').style('stroke', axisColor)\n  g.select('.y-axis').selectAll('text').style('fill', axisColor)\n  \n  // Update grid styling\n  g.select('.x-grid').selectAll('line').style('stroke', gridColor)\n  g.select('.y-grid').selectAll('line').style('stroke', gridColor)\n  \n  // Update labels\n  g.select('.x-label').style('fill', axisColor)\n  g.select('.y-label').style('fill', axisColor)\n}\n\n// Watch for theme changes\nconst observer = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n      updateThemeStyles()\n    }\n  })\n})\n\n// Watchers\nwatch([() => props.selectedCountry, () => props.selectedProduct, () => props.selectedMetric], () => {\n  loadData()\n})\n\n// Lifecycle\nonMounted(() => {\n  initializeChart()\n  loadData()\n  \n  // Start observing theme changes\n  if (document.documentElement) {\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class']\n    })\n  }\n})\n\nonUnmounted(() => {\n  cleanup()\n  observer.disconnect()\n})\n\n// Exposed methods\ndefineExpose({\n  loadData,\n  updateChart\n})\n</script>\n\n<template>\n  <div class=\"timeseries-chart-wrapper relative w-full h-full flex flex-col\">\n    <!-- Loading overlay -->\n    <LoadingSpinner\n      v-if=\"isLoading\"\n      :overlay=\"true\"\n      :centered=\"true\"\n      text=\"L√§dt Zeitreihen...\"\n      size=\"md\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      class=\"absolute inset-0 bg-error-50 dark:bg-error-900/20 flex items-center justify-center z-10\"\n    >\n      <div class=\"text-center\">\n        <p class=\"text-error-600 dark:text-error-400 mb-3\">{{ error }}</p>\n        <BaseButton\n          @click=\"loadData\"\n          variant=\"danger\"\n          size=\"sm\"\n        >\n          Erneut versuchen\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Chart title (optional, compact) -->\n    <div v-if=\"props.selectedCountry || chartData.length > 0\" class=\"px-4 py-2 border-b border-gray-200 dark:border-gray-700 flex-shrink-0\">\n      <h4 class=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n        {{ props.selectedCountry || 'Global' }} - {{ getMetricLabel() }}\n      </h4>\n    </div>\n\n    <!-- Chart SVG Container - takes all remaining space -->\n    <div \n      ref=\"svgContainerRef\"\n      class=\"timeseries-svg-container flex-1 w-full min-h-0\"\n    />\n\n    <!-- No data message -->\n    <div\n      v-if=\"!isLoading && !error && chartData.length === 0\"\n      class=\"absolute inset-0 flex items-center justify-center text-gray-500 dark:text-gray-400\"\n    >\n      <div class=\"text-center\">\n        <svg class=\"w-12 h-12 mx-auto mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n        <p>Keine Zeitreihen-Daten verf√ºgbar</p>\n        <p class=\"text-xs mt-1\">W√§hlen Sie ein Produkt oder Land aus</p>\n      </div>\n    </div>\n  </div>\n</template>","<script setup lang=\"ts\">\nimport { ref, computed, watch, nextTick, onMounted, onUnmounted } from 'vue'\nimport { useVisualizationStore } from '@/stores/useVisualizationStore'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner.vue'\nimport * as d3 from 'd3'\n\ninterface Props {\n  data?: any[]\n  config?: any\n  width?: number\n  height?: number\n  selectedScenario?: string\n  simulationRuns?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  data: () => [],\n  config: () => ({}),\n  width: 800,\n  height: 500,\n  selectedScenario: 'climate_change',\n  simulationRuns: 100\n})\n\nconst emit = defineEmits<{\n  'scenario-select': [scenario: string]\n  runSimulation: []\n}>()\n\n// Stores\nconst vizStore = useVisualizationStore()\n\n// Refs\nconst containerRef = ref<HTMLDivElement>()\nconst svgRef = ref<SVGElement | null>(null)\n\n// State\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\n\n// Chart dimensions\nconst margin = computed(() => ({\n  top: 20,\n  right: 30,\n  bottom: 40,\n  left: 60\n}))\n\nconst dimensions = computed(() => {\n  const container = containerRef.value\n  if (!container) return { width: 800, height: 400 }\n  \n  const rect = container.getBoundingClientRect()\n  return {\n    width: Math.max(400, rect.width || 800),\n    height: 400\n  }\n})\n\n// Chart configuration\nconst chartConfig = computed(() => ({\n  baselineColor: '#6b7280',\n  scenarioColor: '#ef4444'\n}))\n\n\n// Initialize chart\nconst initializeChart = async () => {\n  await nextTick()\n  \n  try {\n    isLoading.value = true\n    error.value = null\n    \n    await setupChart()\n\n  } catch (err) {\n    error.value = 'Fehler beim Initialisieren der Simulation'\n    console.error('Simulation initialization error:', err)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Setup chart with D3.js\nconst setupChart = async () => {\n  if (!containerRef.value) return\n  \n  const chartData = props.data || []\n  const { width, height } = dimensions.value\n  const m = margin.value\n  \n  // Clear previous content\n  d3.select(containerRef.value).selectAll('*').remove()\n  \n  // Create SVG\n  const svg = d3.select(containerRef.value)\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'simulation-svg')\n  \n  svgRef.value = svg.node()\n  \n  const g = svg.append('g')\n    .attr('transform', `translate(${m.left},${m.top})`)\n  \n  const innerWidth = width - m.left - m.right\n  const innerHeight = height - m.top - m.bottom\n\n  if (chartData.length === 0) {\n    // Show empty state\n    g.append('text')\n      .attr('class', 'empty-text')\n      .attr('x', innerWidth / 2)\n      .attr('y', innerHeight / 2)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '14px')\n      .style('fill', 'currentColor')\n      .style('opacity', 0.6)\n      .text('Keine Simulationsdaten verf√ºgbar')\n    return\n  }\n\n  // Scales\n  const xScale = d3.scaleLinear()\n    .domain(d3.extent(chartData, d => d.year))\n    .range([0, innerWidth])\n\n  const allValues = chartData.reduce((acc, d) => {\n    if (d && typeof d === 'object') {\n      const values = [d.baseline, d.scenario, d.lower, d.upper].filter(v => v !== undefined && v !== null && !isNaN(v))\n      acc.push(...values)\n    }\n    return acc\n  }, [])\n  \n  const yScale = d3.scaleLinear()\n    .domain(d3.extent(allValues))\n    .nice()\n    .range([innerHeight, 0])\n\n  // Line generators with null value handling\n  const baselineLine = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.baseline))\n    .defined(d => d.baseline !== null && d.baseline !== undefined && !isNaN(d.baseline))\n    .curve(d3.curveMonotoneX)\n\n  const scenarioLine = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.scenario))\n    .defined(d => d.scenario !== null && d.scenario !== undefined && !isNaN(d.scenario))\n    .curve(d3.curveMonotoneX)\n\n  // Confidence interval area\n  const confidenceArea = d3.area()\n    .x(d => xScale(d.year))\n    .y0(d => yScale(d.lower))\n    .y1(d => yScale(d.upper))\n    .defined(d => d.lower !== null && d.lower !== undefined && d.upper !== null && d.upper !== undefined && !isNaN(d.lower) && !isNaN(d.upper))\n    .curve(d3.curveMonotoneX)\n\n  // Add axes\n  g.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0, ${innerHeight})`)\n    .call(d3.axisBottom(xScale).tickFormat(d3.format('d')))\n    .selectAll('text')\n    .style('fill', 'currentColor')\n\n  g.append('g')\n    .attr('class', 'y-axis')\n    .call(d3.axisLeft(yScale).tickFormat(d => d3.format('.2s')(d)))\n    .selectAll('text')\n    .style('fill', 'currentColor')\n    \n  // Style axis lines\n  g.selectAll('.domain, .tick line')\n    .style('stroke', 'currentColor')\n    .style('opacity', 0.3)\n\n  // Add confidence interval\n  g.append('path')\n    .datum(chartData)\n    .attr('class', 'confidence-area')\n    .attr('d', confidenceArea)\n    .style('fill', chartConfig.value.scenarioColor)\n    .style('fill-opacity', 0.2)\n\n  // Add baseline line\n  g.append('path')\n    .datum(chartData)\n    .attr('class', 'baseline-line')\n    .attr('d', baselineLine)\n    .style('stroke', chartConfig.value.baselineColor)\n    .style('stroke-width', 2)\n    .style('fill', 'none')\n\n  // Add scenario line\n  g.append('path')\n    .datum(chartData)\n    .attr('class', 'scenario-line')\n    .attr('d', scenarioLine)\n    .style('stroke', chartConfig.value.scenarioColor)\n    .style('stroke-width', 2)\n    .style('fill', 'none')\n    .style('stroke-dasharray', '5,5')\n\n  // Add legend\n  const legend = g.append('g')\n    .attr('class', 'legend')\n    .attr('transform', `translate(${innerWidth - 120}, 20)`)\n\n  legend.append('line')\n    .attr('x1', 0)\n    .attr('x2', 20)\n    .attr('y1', 0)\n    .attr('y2', 0)\n    .style('stroke', chartConfig.value.baselineColor)\n    .style('stroke-width', 2)\n\n  legend.append('text')\n    .attr('x', 25)\n    .attr('y', 4)\n    .style('font-size', '12px')\n    .style('fill', 'currentColor')\n    .text('Baseline')\n\n  legend.append('line')\n    .attr('x1', 0)\n    .attr('x2', 20)\n    .attr('y1', 20)\n    .attr('y2', 20)\n    .style('stroke', chartConfig.value.scenarioColor)\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '5,5')\n\n  legend.append('text')\n    .attr('x', 25)\n    .attr('y', 24)\n    .style('font-size', '12px')\n    .style('fill', 'currentColor')\n    .text('Szenario')\n\n}\n\n\n// Initialize when mounted\nonMounted(() => {\n  initializeChart()\n})\n\n// Re-initialize when data changes\nwatch(() => props.data, () => {\n  initializeChart()\n}, { deep: true })\n\n// Cleanup on unmount\nonUnmounted(() => {\n  if (containerRef.value) {\n    d3.select(containerRef.value).selectAll('*').remove()\n  }\n})\n\n// No exposed methods needed - chart is purely reactive to props\n</script>\n\n<template>\n  <div \n    ref=\"containerRef\"\n    class=\"chart-container relative w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700\"\n  >\n    <!-- Loading overlay -->\n    <LoadingSpinner\n      v-if=\"isLoading\"\n      :overlay=\"true\"\n      :centered=\"true\"\n      text=\"L√§dt Simulation...\"\n      size=\"md\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      class=\"absolute inset-0 bg-error-50 dark:bg-error-900/20 flex items-center justify-center z-10\"\n    >\n      <div class=\"text-center\">\n        <p class=\"text-error-600 dark:text-error-400 mb-3\">{{ error }}</p>\n        <BaseButton\n          @click=\"initializeChart\"\n          variant=\"danger\"\n          size=\"sm\"\n        >\n          Erneut versuchen\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Chart Header -->\n    <div class=\"p-4 border-b border-gray-200 dark:border-gray-700\" v-if=\"data && data.length > 0\">\n      <h3 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n        Simulationsergebnisse\n      </h3>\n      <p class=\"text-sm text-gray-600 dark:text-gray-400\">\n        Zeitreihen-Analyse mit Konfidenzintervallen\n      </p>\n    </div>\n\n    <!-- Chart SVG Container -->\n    <div class=\"p-4 min-h-[400px]\" v-if=\"data && data.length > 0\" />\n\n    <!-- Placeholder content -->\n    <div v-if=\"!data || data.length === 0\" class=\"absolute inset-0 flex items-center justify-center text-gray-500 dark:text-gray-400 pointer-events-none\">\n      <div class=\"text-center\">\n        <svg class=\"w-12 h-12 mx-auto mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n        </svg>\n        <p>Bereit f√ºr Simulation</p>\n        <p class=\"text-xs mt-1\">Starten Sie eine Simulation, um die Ergebnisse zu sehen</p>\n      </div>\n    </div>\n  </div>\n</template>","<script setup>\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\nimport * as d3 from 'd3'\nimport { useD3 } from '@/composables/useD3'\nimport { useUIStore } from '@/stores/useUIStore'\n\nconst props = defineProps({\n  data: {\n    type: Array,\n    default: () => []\n  },\n  config: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['prediction-select', 'confidence-toggle'])\n\n// Stores\nconst uiStore = useUIStore()\n\n// D3 setup\nconst containerRef = ref(null)\nconst svgRef = ref(null)\nconst gRef = ref(null)\nlet resizeObserver = null\n\nconst { \n  dimensions,\n  isReady,\n  createSVG,\n  updateDimensions \n} = useD3(containerRef, {\n  margin: { top: 40, right: 150, bottom: 60, left: 80 }\n})\n\n// State\nconst showConfidenceInterval = ref(true)\n\n// Dark mode detection using UIStore\nconst isDarkMode = computed(() => uiStore.isDarkMode)\n\n// Utility function to correct unrealistic confidence intervals\n// Polynomial regression can produce extremely wide confidence intervals for long-term forecasts\n// This function applies reasonable bounds to prevent misleading visualizations\nconst correctConfidenceInterval = (prediction) => {\n  const predicted = prediction.predicted_value\n  let lower = prediction.confidence_lower\n  let upper = prediction.confidence_upper\n  const originalLower = lower\n  const originalUpper = upper\n  \n  // Validate confidence bounds are reasonable\n  const maxReasonableRange = predicted * 3 // Max 300% of predicted value\n  const minLower = Math.max(0, predicted * 0.1) // At least 10% of predicted value\n  \n  // Fix unrealistic confidence bounds\n  if (upper - lower > maxReasonableRange) {\n    const halfRange = maxReasonableRange / 2\n    lower = Math.max(minLower, predicted - halfRange)\n    upper = predicted + halfRange\n  }\n  \n  // Ensure lower bound is not 0 unless predicted value is very small\n  if (lower === 0 && predicted > 100000) {\n    lower = Math.max(minLower, predicted * 0.2)\n  }\n  \n  // Cap upper bound to prevent extreme funnel shapes\n  const maxUpper = predicted * 2.5\n  if (upper > maxUpper) {\n    upper = maxUpper\n  }\n  \n  // Log when significant corrections are made\n  if (Math.abs(originalLower - lower) > predicted * 0.1 || Math.abs(originalUpper - upper) > predicted * 0.1) {\n    console.warn(`üìä MLChart: Confidence interval corrected for year ${prediction.year}:`, {\n      original: `${originalLower?.toFixed(0)} - ${originalUpper?.toFixed(0)}`,\n      corrected: `${lower?.toFixed(0)} - ${upper?.toFixed(0)}`,\n      prediction: predicted?.toFixed(0)\n    })\n  }\n  \n  return {\n    ...prediction,\n    confidence_lower: lower,\n    confidence_upper: upper\n  }\n}\n\n// Chart dimensions\nconst chartDimensions = computed(() => {\n  // Use container width if config width is '100%' or not specified\n  let width = 800\n  if (props.config?.width === '100%') {\n    width = containerRef.value?.clientWidth || 800\n  } else if (props.config?.width) {\n    width = props.config.width\n  }\n  \n  const height = props.config?.height || 400\n  const margin = { top: 40, right: 150, bottom: 60, left: 80 }\n  \n  return {\n    width,\n    height,\n    innerWidth: width - margin.left - margin.right,\n    innerHeight: height - margin.top - margin.bottom,\n    margin\n  }\n})\n\n// Process data\nconst processedData = computed(() => {\n  if (!props.data || props.data.length === 0) return { predictions: [], historical: [] }\n  \n  // Separate historical and prediction data using the type field if available\n  const predictions = props.data.filter(d => {\n    // Use type field if available, otherwise fallback to year-based logic\n    if (d.type) {\n      return d.type === 'prediction' && (d.predicted_value > 0 || d.value > 0)\n    } else {\n      // Fallback: year >= 2023 is prediction\n      return d.year >= 2023 && (d.predicted_value > 0 || d.value > 0)\n    }\n  })\n  \n  const historical = props.data.filter(d => {\n    // Use type field if available, otherwise fallback to year-based logic\n    if (d.type) {\n      return d.type === 'historical' && (d.value > 0 || d.predicted_value > 0)\n    } else {\n      // Fallback: year < 2023 is historical\n      return d.year < 2023 && (d.value > 0 || d.predicted_value > 0)\n    }\n  })\n  \n  console.log('üìä MLChart data processed:', {\n    total: props.data.length,\n    historical: historical.length,\n    predictions: predictions.length,\n    historicalYears: historical.map(d => d.year).slice(0, 5),\n    predictionYears: predictions.map(d => d.year).slice(0, 5),\n    sampleTypes: props.data.slice(0, 3).map(d => ({ year: d.year, type: d.type }))\n  })\n  \n  return { predictions, historical }\n})\n\n// Initialize chart\nconst initChart = () => {\n  if (!isReady.value || !containerRef.value) return\n  \n  const { width, height, margin } = chartDimensions.value\n  \n  // Clear any existing SVG\n  d3.select(containerRef.value).selectAll('svg').remove()\n  \n  // Create new SVG\n  const result = createSVG({\n    width,\n    height,\n    className: 'ml-chart-svg',\n    margin\n  })\n  \n  if (result) {\n    svgRef.value = result.svg\n    gRef.value = result.g\n    drawChart()\n  }\n}\n\n// Draw chart\nconst drawChart = () => {\n  if (!gRef.value || !props.data || props.data.length === 0) return\n  \n  const { innerWidth, innerHeight } = chartDimensions.value\n  const { predictions, historical } = processedData.value\n  \n  // Clear previous content\n  gRef.value.selectAll('*').remove()\n  \n  // Scales\n  const allYears = [...historical, ...predictions].map(d => d.year)\n  \n  // Get corrected confidence intervals for scale calculation\n  const correctedPredictions = predictions\n    .filter(d => \n      d.confidence_lower != null && d.confidence_upper != null &&\n      d.predicted_value != null && d.predicted_value > 0\n    )\n    .map(correctConfidenceInterval)\n  \n  const allValues = [\n    ...historical.map(d => d.predicted_value || d.value).filter(v => v != null && v > 0),\n    ...predictions.map(d => d.predicted_value).filter(v => v != null && v > 0),\n    ...correctedPredictions.map(d => d.confidence_lower).filter(v => v != null && v > 0),\n    ...correctedPredictions.map(d => d.confidence_upper).filter(v => v != null && v > 0)\n  ]\n  \n  if (allYears.length === 0 || allValues.length === 0) return\n  \n  const xScale = d3.scaleLinear()\n    .domain(d3.extent(allYears))\n    .range([0, innerWidth])\n  \n  const yScale = d3.scaleLinear()\n    .domain([0, d3.max(allValues) * 1.1])\n    .range([innerHeight, 0])\n  \n  // Line generators\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.predicted_value || d.value || 0))\n    .curve(d3.curveMonotoneX)\n  \n  // Area generator for confidence interval\n  const area = d3.area()\n    .x(d => xScale(d.year))\n    .y0(d => yScale(d.confidence_lower || d.predicted_value || d.value || 0))\n    .y1(d => yScale(d.confidence_upper || d.predicted_value || d.value || 0))\n    .curve(d3.curveMonotoneX)\n  \n  // Add axes\n  const xAxis = gRef.value.append('g')\n    .attr('transform', `translate(0,${innerHeight})`)\n    .call(d3.axisBottom(xScale).tickFormat(d3.format('d')))\n  \n  const yAxis = gRef.value.append('g')\n    .call(d3.axisLeft(yScale).tickFormat(d3.format('.2s')))\n  \n  // Add axis labels\n  xAxis.append('text')\n    .attr('x', innerWidth / 2)\n    .attr('y', 40)\n    .style('text-anchor', 'middle')\n    .style('fill', 'currentColor')\n    .attr('class', 'axis-label')\n    .text('Jahr')\n  \n  yAxis.append('text')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', -60)\n    .attr('x', -innerHeight / 2)\n    .style('text-anchor', 'middle')\n    .style('fill', 'currentColor')\n    .attr('class', 'axis-label')\n    .text('Produktion (1000 t)')\n  \n  // Add grid lines\n  gRef.value.append('g')\n    .attr('class', 'grid')\n    .attr('transform', `translate(0,${innerHeight})`)\n    .call(d3.axisBottom(xScale)\n      .tickSize(-innerHeight)\n      .tickFormat('')\n    )\n    .style('stroke-dasharray', '3,3')\n    .style('opacity', 0.3)\n  \n  gRef.value.append('g')\n    .attr('class', 'grid')\n    .call(d3.axisLeft(yScale)\n      .tickSize(-innerWidth)\n      .tickFormat('')\n    )\n    .style('stroke-dasharray', '3,3')\n    .style('opacity', 0.3)\n  \n  // Draw confidence interval\n  if (showConfidenceInterval.value && predictions.length > 0) {\n    // Process confidence intervals with validation and smoothing\n    const predictionsWithConfidence = predictions\n      .filter(d => \n        d.confidence_lower != null && d.confidence_upper != null &&\n        d.confidence_upper > d.confidence_lower &&\n        d.predicted_value != null && d.predicted_value > 0\n      )\n      .map(correctConfidenceInterval)\n    \n    if (predictionsWithConfidence.length > 0) {\n      gRef.value.append('path')\n        .datum(predictionsWithConfidence)\n        .attr('fill', '#60a5fa')\n        .attr('fill-opacity', 0.2)\n        .attr('d', area)\n    }\n  }\n  \n  // Draw historical line if exists\n  if (historical.length > 0) {\n    gRef.value.append('path')\n      .datum(historical)\n      .attr('fill', 'none')\n      .attr('stroke', '#10b981')\n      .attr('stroke-width', 2)\n      .attr('d', line)\n    \n    // Add dots for historical data\n    gRef.value.selectAll('.hist-dot')\n      .data(historical)\n      .enter().append('circle')\n      .attr('class', 'hist-dot')\n      .attr('cx', d => xScale(d.year))\n      .attr('cy', d => yScale(d.predicted_value || d.value))\n      .attr('r', 4)\n      .attr('fill', '#10b981')\n  }\n  \n  // Draw prediction line\n  if (predictions.length > 0) {\n    // Connect from last historical point\n    const lastHistorical = historical[historical.length - 1]\n    const connectionData = lastHistorical \n      ? [{ ...lastHistorical, predicted_value: lastHistorical.value }, ...predictions]\n      : predictions\n    \n    gRef.value.append('path')\n      .datum(connectionData)\n      .attr('fill', 'none')\n      .attr('stroke', '#3b82f6')\n      .attr('stroke-width', 2)\n      .attr('stroke-dasharray', '5,5')\n      .attr('d', line)\n    \n    // Add dots for predictions\n    gRef.value.selectAll('.pred-dot')\n      .data(predictions)\n      .enter().append('circle')\n      .attr('class', 'pred-dot')\n      .attr('cx', d => xScale(d.year))\n      .attr('cy', d => yScale(d.predicted_value || d.value))\n      .attr('r', 4)\n      .attr('fill', '#3b82f6')\n      .style('cursor', 'pointer')\n      .on('click', (event, d) => {\n        emit('prediction-select', d)\n      })\n      .on('mouseenter', function(event, d) {\n        d3.select(this).attr('r', 6)\n        \n        // Show tooltip with dark mode support\n        const darkMode = isDarkMode.value\n        \n        const tooltip = d3.select('body').append('div')\n          .attr('class', 'ml-chart-tooltip')\n          .style('position', 'absolute')\n          .style('background', darkMode ? 'rgba(31, 41, 55, 0.95)' : 'rgba(255, 255, 255, 0.95)')\n          .style('color', darkMode ? '#f9fafb' : '#111827')\n          .style('padding', '10px 12px')\n          .style('border-radius', '8px')\n          .style('font-size', '12px')\n          .style('font-weight', '500')\n          .style('line-height', '1.5')\n          .style('box-shadow', darkMode ? '0 10px 25px rgba(0, 0, 0, 0.5)' : '0 10px 25px rgba(0, 0, 0, 0.15)')\n          .style('border', darkMode ? '1px solid rgba(75, 85, 99, 0.3)' : '1px solid rgba(209, 213, 219, 0.3)')\n          .style('backdrop-filter', 'blur(10px)')\n          .style('pointer-events', 'none')\n          .style('z-index', '1000')\n          .style('opacity', 0)\n        \n        // Apply confidence interval corrections for tooltip\n        const corrected = correctConfidenceInterval(d)\n        \n        tooltip.html(`\n          <strong>Jahr ${d.year}</strong><br/>\n          Prognose: ${d3.format(',.0f')(corrected.predicted_value)}<br/>\n          Konfidenz: ${d3.format(',.0f')(corrected.confidence_lower)} - ${d3.format(',.0f')(corrected.confidence_upper)}<br/>\n          Unsicherheit: ${d.uncertainty_percent?.toFixed(1) || 'N/A'}%\n        `)\n        .style('left', (event.pageX + 10) + 'px')\n        .style('top', (event.pageY - 10) + 'px')\n        .transition()\n        .duration(200)\n        .style('opacity', 1)\n      })\n      .on('mouseleave', function() {\n        d3.select(this).attr('r', 4)\n        d3.selectAll('.ml-chart-tooltip').remove()\n      })\n  }\n  \n  // Add legend\n  const legend = gRef.value.append('g')\n    .attr('transform', `translate(${innerWidth - 120}, 20)`)\n  \n  // Add legend background for better visibility in dark mode\n  legend.append('rect')\n    .attr('x', -10)\n    .attr('y', -10)\n    .attr('width', 140)\n    .attr('height', 70)\n    .attr('rx', 4)\n    .attr('class', 'legend-background')\n  \n  const legendItems = [\n    { label: 'Historisch', color: '#10b981', dash: false },\n    { label: 'Prognose', color: '#3b82f6', dash: true },\n    { label: 'Konfidenzintervall', color: '#60a5fa', dash: false, area: true }\n  ]\n  \n  legendItems.forEach((item, i) => {\n    const legendRow = legend.append('g')\n      .attr('transform', `translate(0, ${i * 20})`)\n    \n    if (item.area) {\n      legendRow.append('rect')\n        .attr('width', 15)\n        .attr('height', 10)\n        .attr('class', 'legend-area-indicator')\n        .attr('fill', item.color)\n        .attr('fill-opacity', 0.2)\n    } else {\n      legendRow.append('line')\n        .attr('x1', 0)\n        .attr('x2', 15)\n        .attr('y1', 5)\n        .attr('y2', 5)\n        .attr('class', `legend-line ${item.dash ? 'legend-line-dashed' : 'legend-line-solid'}`)\n        .attr('stroke', item.color)\n        .attr('stroke-width', 2)\n        .attr('stroke-dasharray', item.dash ? '5,5' : null)\n    }\n    \n    legendRow.append('text')\n      .attr('x', 20)\n      .attr('y', 5)\n      .attr('dy', '0.35em')\n      .attr('class', 'legend-text')\n      .text(item.label)\n  })\n  \n  // Add confidence toggle button\n  const toggleButton = gRef.value.append('g')\n    .attr('transform', `translate(20, 20)`)\n    .style('cursor', 'pointer')\n    .on('click', () => {\n      showConfidenceInterval.value = !showConfidenceInterval.value\n      emit('confidence-toggle', showConfidenceInterval.value)\n      drawChart()\n    })\n  \n  toggleButton.append('rect')\n    .attr('width', 140)\n    .attr('height', 25)\n    .attr('rx', 4)\n    .attr('class', `confidence-toggle ${showConfidenceInterval.value ? 'confidence-toggle-active' : 'confidence-toggle-inactive'}`)\n  \n  toggleButton.append('text')\n    .attr('x', 70)\n    .attr('y', 12.5)\n    .attr('text-anchor', 'middle')\n    .attr('dy', '0.35em')\n    .attr('class', `confidence-toggle-text ${showConfidenceInterval.value ? 'confidence-toggle-text-active' : 'confidence-toggle-text-inactive'}`)\n    .text('Konfidenzintervall')\n}\n\n// Watch for ready state\nwatch(isReady, (ready) => {\n  if (ready) {\n    initChart()\n  }\n})\n\n// Watch for data changes\nwatch(() => props.data, () => {\n  if (isReady.value) {\n    drawChart()\n  }\n}, { deep: true })\n\n// Watch for config changes\nwatch(() => props.config, () => {\n  if (isReady.value) {\n    initChart()\n  }\n}, { deep: true })\n\n// Watch for dark mode changes and redraw chart for better styling\nwatch(() => uiStore.isDarkMode, () => {\n  if (isReady.value) {\n    drawChart()\n  }\n})\n\n// Initialize on mount\nonMounted(() => {\n  if (isReady.value) {\n    initChart()\n  }\n  \n  // Setup resize observer for responsive chart\n  if (containerRef.value && ResizeObserver) {\n    resizeObserver = new ResizeObserver((entries) => {\n      // Debounce resize events\n      setTimeout(() => {\n        if (isReady.value) {\n          initChart()\n        }\n      }, 100)\n    })\n    \n    resizeObserver.observe(containerRef.value)\n  }\n})\n\n// Cleanup on unmount\nonUnmounted(() => {\n  if (resizeObserver) {\n    resizeObserver.disconnect()\n    resizeObserver = null\n  }\n})\n</script>\n\n<template>\n  <div \n    ref=\"containerRef\" \n    class=\"ml-chart w-full\"\n    :style=\"{ height: chartDimensions.height + 'px' }\"\n  />\n</template>\n\n<style scoped>\n.ml-chart {\n  @apply bg-white dark:bg-gray-800 rounded-lg shadow-sm dark:shadow-gray-900/20;\n}\n\n/* Tooltip has inline styles for better compatibility */\n\n/* Ensure text is visible in dark mode */\n:deep(.ml-chart-svg text) {\n  @apply fill-gray-700 dark:fill-gray-300;\n}\n\n:deep(.ml-chart-svg .axis-label) {\n  @apply fill-gray-600 dark:fill-gray-400;\n}\n\n:deep(.ml-chart-svg .legend-text) {\n  @apply fill-gray-700 dark:fill-gray-300;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n/* Legend background styling */\n:deep(.ml-chart-svg .legend-background) {\n  @apply fill-white dark:fill-gray-800 stroke-gray-200 dark:stroke-gray-600;\n  fill-opacity: 0.95;\n  stroke-width: 1;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n/* Legend line indicators */\n:deep(.ml-chart-svg .legend-line) {\n  /* Keep original stroke colors from JavaScript */\n}\n\n:deep(.ml-chart-svg .legend-line-solid) {\n  stroke-dasharray: none;\n}\n\n:deep(.ml-chart-svg .legend-line-dashed) {\n  stroke-dasharray: 5,5;\n}\n\n/* Legend area indicator */\n:deep(.ml-chart-svg .legend-area-indicator) {\n  /* Keep original fill color from JavaScript */\n  /* fill-opacity is set in JavaScript */\n}\n\n/* Confidence toggle button styling */\n:deep(.ml-chart-svg .confidence-toggle-active) {\n  @apply fill-blue-500 dark:fill-blue-400;\n}\n\n:deep(.ml-chart-svg .confidence-toggle-inactive) {\n  @apply fill-gray-200 dark:fill-gray-600 stroke-gray-300 dark:stroke-gray-500;\n  stroke-width: 1;\n  transition: all 0.2s ease;\n}\n\n:deep(.ml-chart-svg .confidence-toggle-active) {\n  transition: all 0.2s ease;\n}\n\n/* Hover effects for toggle button */\n:deep(.ml-chart-svg g:hover .confidence-toggle-active) {\n  @apply fill-blue-600 dark:fill-blue-300;\n}\n\n:deep(.ml-chart-svg g:hover .confidence-toggle-inactive) {\n  @apply fill-gray-300 dark:fill-gray-500;\n}\n\n:deep(.ml-chart-svg .confidence-toggle-text-active) {\n  @apply fill-white dark:fill-gray-100;\n  font-size: 12px;\n}\n\n:deep(.ml-chart-svg .confidence-toggle-text-inactive) {\n  @apply fill-gray-700 dark:fill-gray-300;\n  font-size: 12px;\n}\n\n/* Grid lines in dark mode */\n:deep(.ml-chart-svg .grid) {\n  @apply stroke-gray-300 dark:stroke-gray-600;\n}\n\n:deep(.ml-chart-svg .grid line) {\n  @apply stroke-gray-300 dark:stroke-gray-600;\n}\n\n/* Axis lines in dark mode */\n:deep(.ml-chart-svg .domain) {\n  @apply stroke-gray-400 dark:stroke-gray-500;\n}\n\n/* Tick lines in dark mode */\n:deep(.ml-chart-svg .tick line) {\n  @apply stroke-gray-400 dark:stroke-gray-500;\n}\n</style>","<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue'\nimport { useVisualization, useTooltip } from '@/composables/useVisualization'\nimport { useDataStore } from '@/stores/useDataStore'\nimport { useVisualizationStore } from '@/stores/useVisualizationStore'\nimport BaseButton from '@/components/ui/BaseButton.vue'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner.vue'\nimport * as d3 from 'd3'\n\ninterface Props {\n  data?: any\n  width?: number\n  height?: number\n  analysisType?: 'network' | 'hierarchy' | 'flow'\n  selectedRegion?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  width: 800,\n  height: 600,\n  analysisType: 'network',\n  selectedRegion: 'global'\n})\n\nconst emit = defineEmits<{\n  analysisChange: [type: string]\n  nodeClick: [node: any]\n}>()\n\n// Stores\nconst dataStore = useDataStore()\nconst vizStore = useVisualizationStore()\n\n// Refs\nconst containerRef = ref<HTMLDivElement>()\nconst svgContainerRef = ref<HTMLDivElement>()\n\n// State\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\nconst isInitialized = ref(false)\n\n// Composables\nconst margin = computed(() => ({\n  top: 20,\n  right: 20,\n  bottom: 20,\n  left: 20\n}))\n\nconst visualization = useVisualization(svgContainerRef, {\n  margin: margin.value,\n  responsive: true,\n  autoResize: true\n})\n\nconst tooltip = useTooltip({\n  className: 'structural-tooltip chart-tooltip',\n  followMouse: true\n})\n\n// Chart configuration\nconst chartConfig = computed(() => ({\n  nodeColor: '#27ae60', // primary-500\n  linkColor: '#6b7280', // gray-500\n  highlightColor: '#ef4444', // error-500\n  ...vizStore.getVisualizationConfig('structural')\n}))\n\n// Analysis types\nconst analysisTypes = [\n  { id: 'network', name: 'Netzwerk', description: 'Handelsbeziehungen zwischen L√§ndern' },\n  { id: 'hierarchy', name: 'Hierarchie', description: 'Strukturelle Abh√§ngigkeiten' },\n  { id: 'flow', name: 'Fluss', description: 'Handelsstr√∂me und -richtungen' }\n]\n\n// Initialize chart\nconst initializeChart = async () => {\n  if (!visualization.isReady.value || isInitialized.value) return\n\n  try {\n    isLoading.value = true\n    error.value = null\n\n    await setupChart()\n    isInitialized.value = true\n\n  } catch (err) {\n    error.value = 'Fehler beim Initialisieren der Strukturanalyse'\n    console.error('Structural analysis initialization error:', err)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Update chart when data changes\nconst updateChart = async () => {\n  if (!visualization.isReady.value || !isInitialized.value) return\n  \n  try {\n    await setupChart()\n  } catch (err) {\n    console.error('Error updating chart:', err)\n  }\n}\n\n// Setup chart with D3.js\nconst setupChart = () => {\n  if (!svgContainerRef.value) {\n    console.error('‚ùå StructuralChart: No SVG container reference')\n    return\n  }\n  \n  const { width, height } = visualization.dimensions.value\n  \n  // Ensure we use full container size\n  const containerRect = svgContainerRef.value.getBoundingClientRect()\n  const svgWidth = containerRect.width || width\n  const svgHeight = containerRect.height || height || 600\n\n  // Create SVG\n  const { svg, g } = visualization.createSVG({\n    width: svgWidth,\n    height: svgHeight,\n    className: 'structural-svg',\n    margin: margin.value\n  })\n  \n  if (!svg || !g) {\n    console.error('‚ùå StructuralChart: Failed to create SVG')\n    return\n  }\n\n  // Add placeholder content based on analysis type\n  const centerX = (svgWidth - margin.value.left - margin.value.right) / 2\n  const centerY = (svgHeight - margin.value.top - margin.value.bottom) / 2\n\n  if (props.analysisType === 'network' && props.data) {\n    // Use actual network data with performance optimizations\n    const allNodes = props.data.nodes || []\n    const allLinks = props.data.links || []\n    \n    // PERFORMANCE: Limit to top 50 nodes by trade volume for smooth performance\n    const nodeData = allNodes\n      .sort((a, b) => (b.total_trade_volume || 0) - (a.total_trade_volume || 0))\n      .slice(0, 50)\n      .map(d => ({ ...d })) // Clone to avoid mutation\n    \n    // PERFORMANCE: Only include links between visible nodes\n    const nodeIds = new Set(nodeData.map(d => d.id))\n    const linkData = allLinks\n      .filter(link => nodeIds.has(link.source) && nodeIds.has(link.target))\n      .slice(0, 100) // Limit links for performance\n      .map(d => ({ ...d })) // Clone to avoid mutation\n    \n    // Random initial positions for natural movement\n    nodeData.forEach((d, i) => {\n      d.x = centerX + (Math.random() - 0.5) * (svgWidth * 0.8)\n      d.y = centerY + (Math.random() - 0.5) * (svgHeight * 0.8)\n      // No fixed positions - let them move freely\n    })\n    \n    // Natural force simulation for organic movement\n    const simulation = d3.forceSimulation(nodeData)\n      .force('link', d3.forceLink(linkData).id(d => d.id).distance(120).strength(0.5))\n      .force('charge', d3.forceManyBody().strength(-800).distanceMax(300))\n      .force('center', d3.forceCenter(centerX, centerY).strength(0.05))\n      .force('collision', d3.forceCollide().radius(d => Math.sqrt(d.total_trade_volume / 20000) + 12))\n      .alpha(1) // Full energy for dynamic movement\n      .alphaDecay(0.02) // Slower decay for longer movement\n      .velocityDecay(0.4) // Lower friction for more fluid movement\n    \n    // Create links with performance optimizations\n    const links = g.selectAll('.link')\n      .data(linkData)\n      .enter()\n      .append('line')\n      .attr('class', 'link')\n      .attr('stroke', '#6b7280') // Direct color instead of computed\n      .attr('stroke-opacity', 0.4) // Lighter for better performance\n      .attr('stroke-width', 1) // Fixed width for performance\n      .attr('x1', d => d.source.x || centerX)\n      .attr('y1', d => d.source.y || centerY) \n      .attr('x2', d => d.target.x || centerX)\n      .attr('y2', d => d.target.y || centerY)\n    \n    // Create nodes\n    const nodes = g.selectAll('.node')\n      .data(nodeData)\n      .enter()\n      .append('g')\n      .attr('class', 'node')\n      .style('cursor', 'pointer')\n      .on('click', (event, d) => emit('nodeClick', d))\n    \n    // Add circles for nodes with green theme and entrance animation\n    nodes.append('circle')\n      .attr('r', 0) // Start with radius 0 for animation\n      .attr('fill', '#27ae60') // Primary green\n      .attr('stroke', '#ffffff')\n      .attr('stroke-width', 2)\n      .transition()\n      .duration(500)\n      .delay((d, i) => i * 10) // Staggered animation\n      .attr('r', d => Math.max(Math.sqrt(d.total_trade_volume / 20000) + 4, 6))\n    \n    // Set initial positions\n    nodes.attr('transform', d => `translate(${d.x},${d.y})`)\n    \n    // Add labels (only for larger nodes to reduce DOM elements)\n    nodes.filter(d => d.total_trade_volume > 50000)\n      .append('text')\n      .text(d => d.id.length > 12 ? d.id.substring(0, 12) + '...' : d.id)\n      .attr('x', 0)\n      .attr('y', -15)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '11px')\n      .style('fill', '#1a6e41') // Primary green dark\n      .style('font-weight', '600')\n      .style('pointer-events', 'none')\n    \n    // Add tooltip on hover\n    nodes.on('mouseover', (event, d) => {\n      tooltip.show({\n        content: `\n          <strong>${d.id}</strong><br>\n          Trade Volume: ${d.total_trade_volume?.toLocaleString() || 'N/A'}\n        `,\n        event\n      })\n    })\n    .on('mouseout', () => tooltip.hide())\n    \n    // Smooth simulation updates for natural movement\n    let tickCount = 0\n    simulation.on('tick', () => {\n      tickCount++\n      \n      // Update positions on every tick for smooth movement\n      links\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n      \n      nodes.attr('transform', d => `translate(${d.x},${d.y})`)\n      \n      // Let simulation run longer for better settling\n      if (simulation.alpha() < 0.005 || tickCount > 1000) {\n        simulation.stop()\n      }\n    })\n    \n    // Enhanced drag behavior for smooth interaction\n    const drag = d3.drag()\n      .on('start', (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart()\n        d.fx = d.x\n        d.fy = d.y\n        // Visual feedback on drag start\n        d3.select(event.sourceEvent.target)\n          .transition()\n          .duration(100)\n          .attr('r', d => (Math.max(Math.sqrt(d.total_trade_volume / 20000) + 4, 6)) * 1.2)\n      })\n      .on('drag', (event, d) => {\n        d.fx = event.x\n        d.fy = event.y\n      })\n      .on('end', (event, d) => {\n        if (!event.active) simulation.alphaTarget(0)\n        // Release node but keep some momentum\n        setTimeout(() => {\n          d.fx = null\n          d.fy = null\n        }, 100)\n        // Reset visual feedback\n        d3.select(event.sourceEvent.target)\n          .transition()\n          .duration(200)\n          .attr('r', d => Math.max(Math.sqrt(d.total_trade_volume / 20000) + 4, 6))\n      })\n    \n    nodes.call(drag)\n  } else if (props.analysisType === 'network') {\n    // Fallback to sample nodes if no data\n    const nodes = Array.from({ length: 20 }, (_, i) => ({\n      id: i,\n      x: centerX + Math.cos(i * 0.314) * 100,\n      y: centerY + Math.sin(i * 0.314) * 100,\n      radius: Math.random() * 10 + 5\n    }))\n\n    g.selectAll('.node')\n      .data(nodes)\n      .enter()\n      .append('circle')\n      .attr('class', 'node')\n      .attr('cx', d => d.x)\n      .attr('cy', d => d.y)\n      .attr('r', d => d.radius)\n      .attr('fill', chartConfig.value.nodeColor)\n      .attr('stroke', chartConfig.value.linkColor)\n      .attr('stroke-width', 1)\n      .style('cursor', 'pointer')\n  }\n\n  g.append('text')\n    .attr('class', 'chart-title')\n    .attr('x', centerX)\n    .attr('y', 30)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '16px')\n    .style('font-weight', 'bold')\n    .style('fill', 'currentColor')\n    .text(`${analysisTypes.find(t => t.id === props.analysisType)?.name}-Analyse`)\n\n  // Set chart instance\n  vizStore.setChartInstance('structural', svg.node())\n}\n\n// Change analysis type\nconst changeAnalysisType = (type: string) => {\n  emit('analysisChange', type)\n  // Reinitialize chart with new type\n  if (visualization.isReady.value) {\n    initializeChart()\n  }\n}\n\n// Initialize when visualization is ready\nwatch(() => visualization.isReady.value, (isReady) => {\n  if (isReady) {\n    initializeChart()\n  }\n})\n\n// Reinitialize when analysis type changes\nwatch(() => props.analysisType, () => {\n  if (isInitialized.value) {\n    updateChart()\n  }\n})\n\n// Reinitialize when data changes\nwatch(() => props.data, () => {\n  if (isInitialized.value) {\n    updateChart()\n  }\n}, { deep: true })\n\n// Cleanup on unmount\nwatch(() => visualization.isDestroyed.value, (isDestroyed) => {\n  if (isDestroyed) {\n    tooltip.destroy()\n    vizStore.removeChartInstance('structural')\n  }\n})\n\n// Exposed methods\ndefineExpose({\n  changeAnalysisType\n})\n</script>\n\n<template>\n  <div \n    ref=\"containerRef\"\n    class=\"chart-container relative w-full h-full flex flex-col bg-white dark:bg-gray-800 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700\"\n  >\n    <!-- Loading overlay -->\n    <LoadingSpinner\n      v-if=\"isLoading\"\n      :overlay=\"true\"\n      :centered=\"true\"\n      text=\"L√§dt Strukturanalyse...\"\n      size=\"md\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      class=\"absolute inset-0 bg-error-50 dark:bg-error-900/20 flex items-center justify-center z-10\"\n    >\n      <div class=\"text-center\">\n        <p class=\"text-error-600 dark:text-error-400 mb-3\">{{ error }}</p>\n        <BaseButton\n          @click=\"initializeChart\"\n          variant=\"danger\"\n          size=\"sm\"\n        >\n          Erneut versuchen\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Analysis controls -->\n    <div class=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n            Strukturanalyse\n          </h3>\n          <p class=\"text-sm text-gray-600 dark:text-gray-400\">\n            {{ analysisTypes.find(t => t.id === props.analysisType)?.description }}\n          </p>\n        </div>\n      </div>\n\n      <!-- Analysis type selection -->\n      <div class=\"flex gap-2\">\n        <BaseButton\n          v-for=\"analysis in analysisTypes\"\n          :key=\"analysis.id\"\n          :variant=\"props.analysisType === analysis.id ? 'primary' : 'outline-primary'\"\n          size=\"sm\"\n          @click=\"changeAnalysisType(analysis.id)\"\n        >\n          {{ analysis.name }}\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Chart SVG Container -->\n    <div ref=\"svgContainerRef\" class=\"chart-svg-container flex-1 bg-gray-50 dark:bg-gray-900\" />\n\n    <!-- Analysis info -->\n    <div class=\"absolute bottom-4 left-4 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-3 shadow-sm max-w-xs\">\n      <h4 class=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-1\">\n        {{ analysisTypes.find(t => t.id === props.analysisType)?.name }}-Analyse\n      </h4>\n      <p class=\"text-xs text-gray-600 dark:text-gray-400\">\n        {{ analysisTypes.find(t => t.id === props.analysisType)?.description }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n/* D3 SVG Styles */\n:deep(.structural-svg) {\n  @apply w-full h-full;\n}\n\n:deep(.node) {\n  @apply transition-all duration-200;\n}\n\n:deep(.node:hover) {\n  @apply opacity-80;\n}\n\n:deep(.node text) {\n  @apply pointer-events-none select-none;\n  font-family: inherit;\n}\n\n:deep(.link) {\n  @apply pointer-events-none;\n}\n\n:deep(.chart-title) {\n  @apply fill-current text-gray-900 dark:text-gray-100;\n}\n\n/* Tooltip styles */\n:global(.structural-tooltip) {\n  @apply absolute bg-white dark:bg-gray-800 rounded-lg shadow-lg p-3;\n  @apply border border-gray-200 dark:border-gray-700;\n  @apply text-sm text-gray-900 dark:text-gray-100;\n  @apply pointer-events-none z-50;\n  @apply max-w-xs;\n}\n</style>","<script setup lang=\"ts\">\nimport { ref, computed, watch } from 'vue'\nimport { useVisualization, useTooltip } from '@/composables/useVisualization'\nimport { useDataStore } from '@/stores/useDataStore'\nimport { useVisualizationStore } from '@/stores/useVisualizationStore'\nimport BaseButton from '@/components/ui/BaseButton.vue'\nimport LoadingSpinner from '@/components/ui/LoadingSpinner.vue'\nimport * as d3 from 'd3'\n\ninterface Props {\n  width?: number\n  height?: number\n  processType?: 'production' | 'supply_chain' | 'consumption'\n  timeRange?: 'monthly' | 'yearly'\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  width: 800,\n  height: 500,\n  processType: 'production',\n  timeRange: 'yearly'\n})\n\nconst emit = defineEmits<{\n  processChange: [type: string]\n  timeRangeChange: [range: string]\n  processStep: [step: any]\n}>()\n\n// Stores\nconst dataStore = useDataStore()\nconst vizStore = useVisualizationStore()\n\n// Refs\nconst containerRef = ref<HTMLDivElement>()\n\n// State\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\nconst isAnalyzing = ref(false)\n\n// Composables\nconst margin = computed(() => ({\n  top: 40,\n  right: 40,\n  bottom: 40,\n  left: 40\n}))\n\nconst visualization = useVisualization(containerRef, {\n  margin: margin.value,\n  responsive: true,\n  autoResize: true\n})\n\nconst tooltip = useTooltip({\n  className: 'process-tooltip chart-tooltip',\n  followMouse: true\n})\n\n// Chart configuration\nconst chartConfig = computed(() => ({\n  primaryColor: vizStore.getColorScheme('process')[0] || '#3b82f6',\n  secondaryColor: vizStore.getColorScheme('process')[1] || '#10b981',\n  accentColor: vizStore.getColorScheme('process')[2] || '#f59e0b',\n  ...vizStore.getVisualizationConfig('process')\n}))\n\n// Process types\nconst processTypes = [\n  { id: 'production', name: 'Produktion', description: 'Produktionsprozesse und -effizienz' },\n  { id: 'supply_chain', name: 'Lieferkette', description: 'Supply-Chain-Optimierung' },\n  { id: 'consumption', name: 'Verbrauch', description: 'Verbrauchsmuster und -trends' }\n]\n\n// Time ranges\nconst timeRanges = [\n  { id: 'monthly', name: 'Monatlich', description: 'Monatliche Prozessanalyse' },\n  { id: 'yearly', name: 'J√§hrlich', description: 'J√§hrliche Prozessanalyse' }\n]\n\n// Initialize chart\nconst initializeChart = async () => {\n  if (!visualization.isReady.value) return\n\n  try {\n    isLoading.value = true\n    error.value = null\n\n    visualization.queueUpdate(setupChart, null, true)\n\n  } catch (err) {\n    error.value = 'Fehler beim Initialisieren der Prozessanalyse'\n    console.error('Process analysis initialization error:', err)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Setup chart with D3.js\nconst setupChart = (container) => {\n  const { width, height } = visualization.dimensions.value\n  const innerWidth = width - margin.value.left - margin.value.right\n  const innerHeight = height - margin.value.top - margin.value.bottom\n\n  // Create SVG\n  const { svg, g } = visualization.createSVG({\n    width,\n    height,\n    className: 'process-svg',\n    margin: margin.value\n  })\n\n  // Create process flow diagram based on type\n  if (props.processType === 'production') {\n    createProductionFlow(g, innerWidth, innerHeight)\n  } else if (props.processType === 'supply_chain') {\n    createSupplyChainFlow(g, innerWidth, innerHeight)\n  } else if (props.processType === 'consumption') {\n    createConsumptionFlow(g, innerWidth, innerHeight)\n  }\n\n  // Set chart instance\n  vizStore.setChartInstance('process', svg.node())\n}\n\n// Create production flow diagram\nconst createProductionFlow = (container, width, height) => {\n  const steps = [\n    { name: 'Planung', x: width * 0.15, y: height * 0.5 },\n    { name: 'Anbau', x: width * 0.35, y: height * 0.3 },\n    { name: 'Ernte', x: width * 0.55, y: height * 0.3 },\n    { name: 'Verarbeitung', x: width * 0.75, y: height * 0.5 },\n    { name: 'Distribution', x: width * 0.85, y: height * 0.7 }\n  ]\n\n  // Draw connections\n  for (let i = 0; i < steps.length - 1; i++) {\n    container.append('line')\n      .attr('x1', steps[i].x)\n      .attr('y1', steps[i].y)\n      .attr('x2', steps[i + 1].x)\n      .attr('y2', steps[i + 1].y)\n      .attr('stroke', chartConfig.value.secondaryColor)\n      .attr('stroke-width', 2)\n      .attr('marker-end', 'url(#arrow)')\n  }\n\n  // Draw process steps\n  container.selectAll('.process-step')\n    .data(steps)\n    .enter()\n    .append('g')\n    .attr('class', 'process-step')\n    .attr('transform', d => `translate(${d.x}, ${d.y})`)\n    .each(function(d) {\n      const group = d3.select(this)\n      \n      group.append('circle')\n        .attr('r', 25)\n        .attr('fill', chartConfig.value.primaryColor)\n        .attr('stroke', 'white')\n        .attr('stroke-width', 2)\n        .style('cursor', 'pointer')\n\n      group.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('dy', '0.35em')\n        .style('fill', 'white')\n        .style('font-size', '10px')\n        .style('font-weight', 'bold')\n        .text(d.name)\n    })\n\n  // Add arrow marker\n  container.append('defs')\n    .append('marker')\n    .attr('id', 'arrow')\n    .attr('viewBox', '0 -5 10 10')\n    .attr('refX', 8)\n    .attr('refY', 0)\n    .attr('markerWidth', 6)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M0,-5L10,0L0,5')\n    .attr('fill', chartConfig.value.secondaryColor)\n}\n\n// Create supply chain flow diagram\nconst createSupplyChainFlow = (container, width, height) => {\n  const nodes = [\n    { name: 'Lieferant', x: width * 0.1, y: height * 0.3, type: 'supplier' },\n    { name: 'Produzent', x: width * 0.4, y: height * 0.5, type: 'producer' },\n    { name: 'H√§ndler', x: width * 0.7, y: height * 0.3, type: 'distributor' },\n    { name: 'Verbraucher', x: width * 0.9, y: height * 0.7, type: 'consumer' }\n  ]\n\n  // Draw supply chain network\n  container.selectAll('.supply-node')\n    .data(nodes)\n    .enter()\n    .append('g')\n    .attr('class', 'supply-node')\n    .attr('transform', d => `translate(${d.x}, ${d.y})`)\n    .each(function(d) {\n      const group = d3.select(this)\n      \n      group.append('rect')\n        .attr('x', -30)\n        .attr('y', -15)\n        .attr('width', 60)\n        .attr('height', 30)\n        .attr('rx', 5)\n        .attr('fill', chartConfig.value.accentColor)\n        .attr('stroke', 'white')\n        .attr('stroke-width', 2)\n\n      group.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('dy', '0.35em')\n        .style('fill', 'white')\n        .style('font-size', '10px')\n        .style('font-weight', 'bold')\n        .text(d.name)\n    })\n}\n\n// Create consumption flow diagram\nconst createConsumptionFlow = (container, width, height) => {\n  // Create consumption pattern visualization\n  const centerX = width / 2\n  const centerY = height / 2\n  const radius = Math.min(width, height) * 0.3\n\n  const consumptionData = [\n    { category: 'Haushalte', value: 40, angle: 0 },\n    { category: 'Industrie', value: 30, angle: Math.PI * 0.8 },\n    { category: 'Export', value: 20, angle: Math.PI * 1.4 },\n    { category: 'Verluste', value: 10, angle: Math.PI * 1.8 }\n  ]\n\n  const colorScale = d3.scaleOrdinal()\n    .domain(consumptionData.map(d => d.category))\n    .range([\n      chartConfig.value.primaryColor,\n      chartConfig.value.secondaryColor,\n      chartConfig.value.accentColor,\n      '#ef4444'\n    ])\n\n  // Draw consumption sectors\n  container.selectAll('.consumption-sector')\n    .data(consumptionData)\n    .enter()\n    .append('g')\n    .attr('class', 'consumption-sector')\n    .attr('transform', `translate(${centerX}, ${centerY})`)\n    .each(function(d) {\n      const group = d3.select(this)\n      const sectorRadius = radius * (d.value / 50)\n      \n      group.append('circle')\n        .attr('cx', Math.cos(d.angle) * radius * 0.7)\n        .attr('cy', Math.sin(d.angle) * radius * 0.7)\n        .attr('r', sectorRadius)\n        .attr('fill', colorScale(d.category))\n        .attr('opacity', 0.8)\n\n      group.append('text')\n        .attr('x', Math.cos(d.angle) * radius * 0.7)\n        .attr('y', Math.sin(d.angle) * radius * 0.7)\n        .attr('text-anchor', 'middle')\n        .attr('dy', '0.35em')\n        .style('fill', 'white')\n        .style('font-size', '10px')\n        .style('font-weight', 'bold')\n        .text(`${d.category}\\n${d.value}%`)\n    })\n}\n\n// Start process analysis\nconst startAnalysis = async () => {\n  if (isAnalyzing.value) return\n\n  isAnalyzing.value = true\n  \n  // Simulate analysis process\n  setTimeout(() => {\n    isAnalyzing.value = false\n    // Emit process completion\n    emit('processStep', { \n      type: props.processType, \n      timeRange: props.timeRange,\n      completed: true \n    })\n  }, 2000)\n}\n\n// Change process type\nconst changeProcessType = (type: string) => {\n  emit('processChange', type)\n  if (visualization.isReady.value) {\n    initializeChart()\n  }\n}\n\n// Change time range\nconst changeTimeRange = (range: string) => {\n  emit('timeRangeChange', range)\n}\n\n// Initialize when visualization is ready\nwatch(() => visualization.isReady.value, (isReady) => {\n  if (isReady) {\n    initializeChart()\n  }\n})\n\n// Reinitialize when process type changes\nwatch(() => props.processType, () => {\n  if (visualization.isReady.value) {\n    initializeChart()\n  }\n})\n\n// Cleanup on unmount\nwatch(() => visualization.isDestroyed.value, (isDestroyed) => {\n  if (isDestroyed) {\n    tooltip.destroy()\n    vizStore.removeChartInstance('process')\n  }\n})\n\n// Exposed methods\ndefineExpose({\n  startAnalysis,\n  changeProcessType,\n  changeTimeRange\n})\n</script>\n\n<template>\n  <div \n    ref=\"containerRef\"\n    class=\"chart-container relative w-full bg-white dark:bg-gray-800 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700\"\n  >\n    <!-- Loading overlay -->\n    <LoadingSpinner\n      v-if=\"isLoading\"\n      :overlay=\"true\"\n      :centered=\"true\"\n      text=\"L√§dt Prozessanalyse...\"\n      size=\"md\"\n    />\n\n    <!-- Error message -->\n    <div\n      v-if=\"error\"\n      class=\"absolute inset-0 bg-error-50 dark:bg-error-900/20 flex items-center justify-center z-10\"\n    >\n      <div class=\"text-center\">\n        <p class=\"text-error-600 dark:text-error-400 mb-3\">{{ error }}</p>\n        <BaseButton\n          @click=\"initializeChart\"\n          variant=\"danger\"\n          size=\"sm\"\n        >\n          Erneut versuchen\n        </BaseButton>\n      </div>\n    </div>\n\n    <!-- Process controls -->\n    <div class=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 class=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n            Process Mining\n          </h3>\n          <p class=\"text-sm text-gray-600 dark:text-gray-400\">\n            {{ processTypes.find(t => t.id === props.processType)?.description }}\n          </p>\n        </div>\n        \n        <BaseButton\n          @click=\"startAnalysis\"\n          :disabled=\"isAnalyzing\"\n          variant=\"primary\"\n          size=\"sm\"\n        >\n          {{ isAnalyzing ? 'Analysiert...' : 'Analyse starten' }}\n        </BaseButton>\n      </div>\n\n      <div class=\"flex items-center justify-between\">\n        <!-- Process type selection -->\n        <div class=\"flex space-x-2\">\n          <BaseButton\n            v-for=\"process in processTypes\"\n            :key=\"process.id\"\n            :variant=\"props.processType === process.id ? 'primary' : 'secondary'\"\n            size=\"sm\"\n            @click=\"changeProcessType(process.id)\"\n          >\n            {{ process.name }}\n          </BaseButton>\n        </div>\n\n        <!-- Time range selection -->\n        <div class=\"flex space-x-2\">\n          <BaseButton\n            v-for=\"range in timeRanges\"\n            :key=\"range.id\"\n            :variant=\"props.timeRange === range.id ? 'primary' : 'secondary'\"\n            size=\"sm\"\n            @click=\"changeTimeRange(range.id)\"\n          >\n            {{ range.name }}\n          </BaseButton>\n        </div>\n      </div>\n\n      <!-- Analysis progress -->\n      <div v-if=\"isAnalyzing\" class=\"mt-4\">\n        <div class=\"flex items-center justify-between text-sm text-gray-600 dark:text-gray-400 mb-2\">\n          <span>Prozessanalyse l√§uft...</span>\n          <span>Mining Patterns...</span>\n        </div>\n        <div class=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n          <div class=\"bg-primary-500 h-2 rounded-full animate-pulse w-full\" />\n        </div>\n      </div>\n    </div>\n\n    <!-- Chart SVG Container -->\n    <div class=\"p-4 min-h-[400px]\" />\n\n    <!-- Process info -->\n    <div class=\"absolute bottom-4 right-4 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-3 shadow-sm max-w-xs\">\n      <h4 class=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-1\">\n        {{ processTypes.find(t => t.id === props.processType)?.name }}-Mining\n      </h4>\n      <p class=\"text-xs text-gray-600 dark:text-gray-400\">\n        {{ timeRanges.find(r => r.id === props.timeRange)?.description }}\n      </p>\n    </div>\n  </div>\n</template>"],"names":["ref","class","style","width","height","_hoisted_3","_hoisted_4","_hoisted_5","position","props","__props","emit","__emit","dataStore","useDataStore","uiStore","useUIStore","vizStore","useVisualizationStore","containerRef","svgContainerRef","isLoading","error","geoDataStatic","productionDataStatic","isInitialized","legendScale","legendDomain","tooltipDiv","tooltip","element","init","d3.select","append","attr","show","event","data","formatter","content","mouseX","pageX","clientX","mouseY","pageY","clientY","html","hide","destroy","remove","getProcessedProductionData","Array","isArray","filter","d","value","projection","path","colorScale","zoom","greenColorScheme","mapConfig","computed","colorScheme","getVisualizationConfig","initializeMap","async","loadedGeoData","loadGeoData","createMapDirect","err","requestAnimationFrame","features","containerElement","container","existingSvg","select","empty","containerRect","getBoundingClientRect","mainRect","_a","parentElement","parentRect","width2","height2","svg","d3.geoNaturalEarth1","scale","translate","d3.geoPath","d3.zoom","scaleExtent","on","transform","call","g","drawCountriesDirect","length","updateMapWithProductionDataDirect","isDarkMode","document","documentElement","classList","contains","defaultFill","defaultStroke","countries","selectAll","properties","iso_a3","adm0_a3","name","exit","enterCountries","enter","handleCountryClick","handleCountryMouseover","handleCountryMouseout","merge","size","createLegend","legendWidth","legendMargin","svgNode","node","svgWidth","clientWidth","svgHeight","clientHeight","legend","gradientId","defs","gradient","legendStroke","legendScaleLinear","d3.scaleLinear","domain","range","quantiles","forEach","color","i","startPos","endPos","legendAxis","d3.axisBottom","ticks","tickFormat","d3.format","legendTextColor","legendAxisGroup","text","selectedMetric","loadProductionData","selectedProduct","selectedYear","productionData","timeseriesData","getTimeseriesDataForProduct","Object","entries","map","country","metricKey","countryCode","getCountryCode","unit","year","item","transformedData","Area","iso3","Value","Unit","Year","Element","countryName","updateMapWithProductionDataStatic","China","Brazil","Argentina","Ukraine","India","Mexico","Indonesia","France","Romania","Germany","Turkey","Russia","Philippines","Nigeria","Iran","Pakistan","Italy","Canada","Thailand","Egypt","Morocco","Kenya","Ethiopia","Ghana","Tanzania","Uganda","Madagascar","Mozambique","Cameroon","Mali","Niger","Senegal","Guinea","Benin","Burundi","Rwanda","Chad","Congo","Gabon","Gambia","Liberia","Togo","Comoros","Mauritius","Seychelles","Djibouti","Eritrea","Somalia","Sudan","Libya","Tunisia","Algeria","Spain","Portugal","Ireland","Netherlands","Belgium","Luxembourg","Switzerland","Austria","Poland","Slovakia","Hungary","Slovenia","Croatia","Serbia","Montenegro","Albania","Greece","Bulgaria","Moldova","Belarus","Lithuania","Latvia","Estonia","Finland","Sweden","Norway","Denmark","Iceland","Japan","Mongolia","Kazakhstan","Kyrgyzstan","Tajikistan","Turkmenistan","Uzbekistan","Afghanistan","Bangladesh","Bhutan","Nepal","Maldives","Myanmar","Laos","Vietnam","Cambodia","Malaysia","Singapore","Brunei","Australia","Fiji","Vanuatu","Samoa","Tonga","Kiribati","Tuvalu","Nauru","Palau","Micronesia","Czechia","substring","toUpperCase","normalizeCountryName","USA","US","UK","Britain","Syria","Venezuela","Bolivia","DRC","Macedonia","Burma","Swaziland","processedData","applyProductionDataDirect","dataByCountry","Map","dataByCountryCode","dataByNormalizedName","set","toLowerCase","normalized","values","maxValue","d3.max","d3.min","sortedValues","sort","a","b","d3.scaleQuantile","transition","duration","NAME","admin","ISO_A3","ADM0_A3","normalizedName","has","get","nodes","indexOf","setSelectedCountry","zoomToCountry","currentTarget","countryData","find","formattedValue","productName","replace","l","metricLabel","bounds","dx","dy","x","y","Math","min","max","d3.zoomIdentity","resetZoom","updateThemeStyles","each","this","currentFill","themeObserver","MutationObserver","mutations","mutation","type","attributeName","watch","immediate","onMounted","nextTick","setTimeout","observe","attributes","attributeFilter","onUnmounted","disconnect","setMapInstance","__expose","from","v","extent","d3.extent","d3.scaleQuantize","_openBlock","_createElementBlock","_hoisted_1","$setup","_createBlock","key","overlay","centered","_createCommentVNode","_hoisted_2","_createElementVNode","_toDisplayString","_createVNode","onClick","variant","_cache","_createTextVNode","icon","title","fill","stroke","viewBox","_hoisted_6","_hoisted_7","chartData","margin","top","right","bottom","left","xScale","yScale","line","resizeObserver","initializeChart","innerWidth","innerHeight","d3.scaleTime","d3.line","Date","curve","d3.curveMonotoneX","showGrid","labelColor","getMetricLabel","setupResizeObserver","window","ResizeObserver","updateChart","loadData","normalizedProduct","productTimeseries","selectedCountry","yearData","push","product","yearlyTotals","currentTotal","dataPromises","availableYears","then","catch","results","Promise","all","existingEntry","years","axisColor","gridColor","xAxis","d3.timeFormat","tickSizeOuter","yAxis","d3.axisLeft","xAxisSelection","yAxisSelection","xGridSelection","tickSize","yGridSelection","linePath","showPoints","points","handlePointMouseover","handlePointMouseout","handlePointClick","target","cleanup","observer","_hoisted_8","svgRef","dimensions","rect","chartConfig","baselineColor","scenarioColor","setupChart","m","allValues","reduce","acc","baseline","scenario","lower","upper","isNaN","nice","baselineLine","defined","scenarioLine","confidenceArea","d3.area","y0","y1","datum","deep","_component_BaseButton","$props","gRef","isReady","createSVG","updateDimensions","useD3","showConfidenceInterval","correctConfidenceInterval","prediction","predicted","predicted_value","confidence_lower","confidence_upper","originalLower","originalUpper","maxReasonableRange","minLower","halfRange","maxUpper","abs","chartDimensions","config","_b","_c","_d","predictions","historical","initChart","result","className","drawChart","allYears","correctedPredictions","area","predictionsWithConfidence","lastHistorical","connectionData","darkMode","corrected","uncertainty_percent","toFixed","label","dash","legendRow","toggleButton","ready","_normalizeStyle","_hoisted_10","_hoisted_11","_hoisted_12","visualization","useVisualization","responsive","autoResize","useTooltip","followMouse","nodeColor","linkColor","highlightColor","analysisTypes","id","description","centerX","centerY","analysisType","allNodes","allLinks","links","nodeData","total_trade_volume","slice","nodeIds","Set","linkData","link","source","random","simulation","d3.forceSimulation","force","d3.forceLink","distance","strength","d3.forceManyBody","distanceMax","d3.forceCenter","d3.forceCollide","radius","sqrt","alpha","alphaDecay","velocityDecay","delay","toLocaleString","tickCount","simulation$1","stop","drag","d3.drag","active","alphaTarget","restart","fx","fy","sourceEvent","_","cos","sin","t","setChartInstance","changeAnalysisType","isDestroyed","removeChartInstance","_Fragment","_renderList","analysis","$event","_hoisted_9","_hoisted_13","_hoisted_14","isAnalyzing","primaryColor","getColorScheme","secondaryColor","accentColor","queueUpdate","processType","createProductionFlow","createSupplyChainFlow","createConsumptionFlow","steps","group","consumptionData","category","angle","PI","d3.scaleOrdinal","sectorRadius","startAnalysis","timeRange","completed","changeProcessType","changeTimeRange","processTypes","disabled","process","timeRanges","r"],"mappings":"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"}